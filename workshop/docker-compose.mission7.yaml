services:
  ####################################################################################################
  #                                    AI Platform Engineer A2A P2P                                  #
  ####################################################################################################
  platform-engineer-p2p:
    image: ghcr.io/cnoe-io/ai-platform-engineering:${IMAGE_TAG:-stable}
    container_name: platform-engineer-p2p
    volumes:
      - ../.env:/app/.env
      - ../prompt_config.yaml:/app/prompt_config.yaml
    depends_on:
      - agent-weather-p2p
      - agent-petstore-p2p
    profiles:
      - p2p
      - p2p-tracing
    env_file:
      - ../.env
    ports:
      # Expose the AI Platform Engineer agent on port 8000
      - "8000:8000"
    environment:
      - A2A_TRANSPORT=p2p
      - ENABLE_TRACING=${ENABLE_TRACING:-true}
      - WEATHER_AGENT_HOST=agent-weather-p2p
      - PETSTORE_AGENT_HOST=agent-petstore-p2p
    command: platform-engineer

  ####################################################################################################
  #                                   AI Platform Engineer A2A SLIM                                  #
  ####################################################################################################
  platform-engineer-slim:
    image: ghcr.io/cnoe-io/ai-platform-engineering:${IMAGE_TAG:-stable}
    container_name: platform-engineer-slim
    volumes:
      - ../.env:/app/.env
      - ../prompt_config.yaml:/app/prompt_config.yaml
    profiles:
      - slim
    depends_on:
      - slim-dataplane
      - agent-weather-slim
      - agent-petstore-slim
    env_file:
      - ../.env
    ports:
      # Expose the AI Platform Engineer agent on port 8000
      - "8000:8000"
    environment:
      - A2A_TRANSPORT=slim
      - WEATHER_AGENT_HOST=agent-weather-slim
      - PETSTORE_AGENT_HOST=agent-petstore-slim
    command: platform-engineer

  ####################################################################################################
  #                                 SLIM Dataplane and control plane                                 #
  ####################################################################################################
  slim-dataplane:
    image: ghcr.io/agntcy/slim:0.3.15
    container_name: slim-dataplane
    profiles:
      - slim
    ports:
      - "46357:46357"
    environment:
      - PASSWORD=${SLIM_GATEWAY_PASSWORD:-dummy_password}
      - CONFIG_PATH=/config.yaml
    volumes:
      - ../slim-config.yaml:/config.yaml
    command: ["/slim", "--config", "/config.yaml"]
  slim-control-plane:
    image: ghcr.io/agntcy/slim/control-plane:0.0.1
    container_name: slim-control-plane
    profiles:
      - slim
      - slim-tracing
    ports:
      - "50051:50051"
      - "50052:50052"
    environment:
      - PASSWORD=${SLIM_GATEWAY_PASSWORD:-dummy_password}
      - CONFIG_PATH=/config.yaml
    volumes:
      - ../slim-config.yaml:/config.yaml
    command: ["/slim", "--config", "/config.yaml"]

  ####################################################################################################
  #                                      AGENT WEATHER A2A over SLIM                                 #
  ####################################################################################################
  agent-weather-slim:
    image: ghcr.io/cnoe-io/agent-weather:${IMAGE_TAG:-stable}
    container_name: agent-weather-slim
    profiles:
      - slim
    depends_on:
      - slim-dataplane
    volumes:
      - ../.env:/app/.env
    ports:
      - "8009:8000"
    environment:
      - A2A_TRANSPORT=slim
      - MCP_MODE=${MCP_MODE:-http}

  ####################################################################################################
  #                                      AGENT WEATHER A2A P2P                                       #
  ####################################################################################################
  agent-weather-p2p:
    image: ghcr.io/cnoe-io/agent-weather:${IMAGE_TAG:-stable}
    container_name: agent-weather-p2p
    profiles:
      - p2p
      - p2p-tracing
    volumes:
      - ../.env:/app/.env
    ports:
      - "8009:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-true}
      - A2A_TRANSPORT=p2p
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_PORT=8000
      - MCP_HOST=mcp-weather

  ####################################################################################################
  #                                      AGENT PETSTORE A2A over SLIM                                #
  ####################################################################################################
  agent-petstore-slim:
    image: ghcr.io/cnoe-io/agent-template:${IMAGE_TAG:-stable}
    container_name: agent-petstore-slim
    profiles:
      - slim
    depends_on:
      - slim-dataplane
    volumes:
      - ../.env:/app/.env
    ports:
      - "8010:8000"
    environment:
      - A2A_TRANSPORT=slim
      - MCP_MODE=${MCP_MODE:-http}

  ####################################################################################################
  #                                      AGENT PETSTORE A2A P2P                                      #
  ####################################################################################################
  agent-petstore-p2p:
    image: ghcr.io/cnoe-io/agent-template:${IMAGE_TAG:-stable}
    container_name: agent-petstore-p2p
    profiles:
      - p2p
      - p2p-tracing
    volumes:
      - ../.env:/app/.env
    ports:
      - "8010:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-true}
      - A2A_TRANSPORT=p2p
      - MCP_MODE=${MCP_MODE:-http}

  ####################################################################################################
  #                                      LANGFUSE TRACING SERVICES                                   #
  ####################################################################################################
  # Langfuse Tracing Services (use ENABLE_TRACING=true and --profile=tracing to enable)
  # Reference: https://github.com/langfuse/langfuse/blob/main/docker-compose.yml
  langfuse-worker:
    image: langfuse/langfuse-worker:3
    container_name: langfuse-worker
    restart: always
    profiles:
      - tracing
      - p2p-tracing
      - slim-tracing
    depends_on:
      langfuse-postgres:
        condition: service_healthy
      langfuse-minio:
        condition: service_healthy
      langfuse-redis:
        condition: service_healthy
      langfuse-clickhouse:
        condition: service_healthy
    ports:
      - "127.0.0.1:3030:3030"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@langfuse-postgres:5432/postgres
      SALT: "mysalt"
      ENCRYPTION_KEY: "0000000000000000000000000000000000000000000000000000000000000000"
      CLICKHOUSE_MIGRATION_URL: clickhouse://langfuse-clickhouse:9000
      CLICKHOUSE_URL: http://langfuse-clickhouse:8123
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
      CLICKHOUSE_CLUSTER_ENABLED: "false"
      # S3 Event Upload Configuration (Required for tracing)
      LANGFUSE_S3_EVENT_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_EVENT_UPLOAD_REGION: us-east-1
      LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID: minio
      LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY: miniosecret
      LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT: http://langfuse-minio:9000
      LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE: "true"
      LANGFUSE_S3_EVENT_UPLOAD_PREFIX: "events/"
      # S3 Media Upload Configuration
      LANGFUSE_S3_MEDIA_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_MEDIA_UPLOAD_REGION: us-east-1
      LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID: minio
      LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY: miniosecret
      LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT: http://langfuse-minio:9000
      LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE: "true"
      LANGFUSE_S3_MEDIA_UPLOAD_PREFIX: "media/"
      REDIS_HOST: langfuse-redis
      REDIS_AUTH: myredissecret

  langfuse-web:
    image: langfuse/langfuse:3
    container_name: langfuse-web
    restart: always
    profiles:
      - tracing
      - p2p-tracing
      - slim-tracing
    depends_on:
      langfuse-postgres:
        condition: service_healthy
      langfuse-minio:
        condition: service_healthy
      langfuse-redis:
        condition: service_healthy
      langfuse-clickhouse:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@langfuse-postgres:5432/postgres
      SALT: "mysalt"
      ENCRYPTION_KEY: "0000000000000000000000000000000000000000000000000000000000000000"
      CLICKHOUSE_MIGRATION_URL: clickhouse://langfuse-clickhouse:9000
      CLICKHOUSE_URL: http://langfuse-clickhouse:8123
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
      CLICKHOUSE_CLUSTER_ENABLED: "false"
      # S3 Event Upload Configuration (Required for tracing)
      LANGFUSE_S3_EVENT_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_EVENT_UPLOAD_REGION: us-east-1
      LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID: minio
      LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY: miniosecret
      LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT: http://langfuse-minio:9000
      LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE: "true"
      LANGFUSE_S3_EVENT_UPLOAD_PREFIX: "events/"
      # S3 Media Upload Configuration
      LANGFUSE_S3_MEDIA_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_MEDIA_UPLOAD_REGION: us-east-1
      LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID: minio
      LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY: miniosecret
      LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT: http://langfuse-minio:9000
      LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE: "true"
      LANGFUSE_S3_MEDIA_UPLOAD_PREFIX: "media/"
      REDIS_HOST: langfuse-redis
      REDIS_AUTH: myredissecret
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: mysecret

  langfuse-clickhouse:
    image: clickhouse/clickhouse-server
    container_name: langfuse-clickhouse
    restart: always
    profiles:
      - tracing
      - p2p-tracing
      - slim-tracing
    user: "101:101"
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
    volumes:
      - langfuse_clickhouse_data:/var/lib/clickhouse
      - langfuse_clickhouse_logs:/var/log/clickhouse-server
    ports:
      - "127.0.0.1:8123:8123"
      - "127.0.0.1:9000:9000"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 1s

  langfuse-minio:
    image: minio/minio
    container_name: langfuse-minio
    restart: always
    profiles:
      - tracing
      - p2p-tracing
      - slim-tracing
    entrypoint: sh
    command: -c 'mkdir -p /data/langfuse && minio server --address ":9000" --console-address ":9001" /data'
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniosecret
    ports:
      - "9090:9000"
      - "127.0.0.1:9091:9001"
    volumes:
      - langfuse_minio_data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 1s

  langfuse-redis:
    image: redis:7
    container_name: langfuse-redis
    restart: always
    profiles:
      - tracing
      - p2p-tracing
      - slim-tracing
    command: >
      --requirepass ${REDIS_AUTH:-myredissecret}
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 10s
      retries: 10

  langfuse-postgres:
    image: postgres:15
    container_name: langfuse-postgres
    restart: always
    profiles:
      - tracing
      - p2p-tracing
      - slim-tracing
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - langfuse_postgres_data:/var/lib/postgresql/data

volumes:
  langfuse_postgres_data:
    driver: local
  langfuse_clickhouse_data:
    driver: local
  langfuse_clickhouse_logs:
    driver: local
  langfuse_minio_data:
    driver: local
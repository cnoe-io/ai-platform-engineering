services:
  ####################################################################################################
  #                                 AI Platform Engineer A2A P2P                                  #
  ####################################################################################################
  platform-engineer-p2p:
    image: ghcr.io/cnoe-io/ai-platform-engineering:latest
    pull_policy: always
    container_name: platform-engineer-p2p
    restart: unless-stopped
    volumes:
      - ../.env.mission4:/app/.env
      - ../prompt_config.yaml:/app/prompt_config.yaml
      - ../ai_platform_engineering/multi_agents:/app/ai_platform_engineering/multi_agents
      - ../ai_platform_engineering/utils:/app/ai_platform_engineering/utils
    depends_on:
      - agent-github-p2p
      - kb-rag-agent
    env_file:
      - ../.env.mission4
    ports:
      - "8000:8000"
    environment:
      - A2A_TRANSPORT=p2p
      - GITHUB_AGENT_HOST=agent-github-p2p
      - KB_RAG_AGENT_HOST=kb-rag-agent
      - ENABLE_KB_RAG=true
      - SKIP_AGENT_CONNECTIVITY_CHECK=false
      - AGENT_CONNECTIVITY_ENABLE_BACKGROUND=false
      - ENABLE_TRACING=false
    command: platform-engineer

  ####################################################################################################
  #                                      AGENT GITHUB A2A P2P                                        #
  ####################################################################################################
  agent-github-p2p:
    image: ghcr.io/cnoe-io/agent-github:a2a-latest
    pull_policy: always
    container_name: agent-github-p2p
    user: root
    volumes:
      - ../.env.mission4:/app/.env
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8004:8000"
    environment:
      - A2A_TRANSPORT=p2p
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_PORT=9000
      - MCP_HOST=localhost
      - ENABLE_TRACING=false

  ####################################################################################################
  #                                          KB-RAG SERVICES                                         #
  ####################################################################################################
  kb-rag-agent:
    image: ghcr.io/cnoe-io/kb-rag-agent-a2a:latest
    pull_policy: always
    container_name: kb-rag-agent
    depends_on:
      - milvus-standalone
      - kb-rag-server
    volumes:
      - ../.env.mission4:/app/.env
    environment:
      - VSTORE_COLLECTION=rag_default
    ports:
      - "8009:8000"
  kb-rag-server:
    image: ghcr.io/cnoe-io/kb-rag-server:latest
    pull_policy: always
    container_name: kb-rag-server
    depends_on:
      - milvus-standalone
    volumes:
      - ../.env.mission4:/app/.env
    environment:
      - VSTORE_COLLECTION=rag_default
    ports:
      - "9446:9446"
  kb-rag-web:
    image: ghcr.io/cnoe-io/kb-rag-web:latest
    pull_policy: always
    container_name: kb-rag-web
    depends_on:
      - kb-rag-server
    ports:
      - "9447:80"
  milvus-standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.6.0
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    environment:
      MINIO_REGION: us-east-1
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: milvus-minio:9000
      LOG_LEVEL: error
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - etcd
      - milvus-minio
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.18
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://etcd:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus-minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2024-05-28T17-19-04Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

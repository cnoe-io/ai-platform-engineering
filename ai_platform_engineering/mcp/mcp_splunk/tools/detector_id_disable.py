# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

"""Tools for /detector/{id}/disable operations"""

import logging
from typing import Any, List
from mcp_splunk.api.client import make_api_request, assemble_nested_body

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger("mcp_tools")


async def disable__detect__blocks(path_id: str, body: List[str]) -> Any:
    """
    Disables detect blocks for a detector

    OpenAPI Description:
        Disables detect objects in a detector


    Args:

        path_id (str): ID of the detector that contains the objects you want to disable


        body (List[str]): OpenAPI parameter corresponding to 'body'


    Returns:
        Any: The JSON response from the API call.

    Raises:
        Exception: If the API request fails or returns an error.
    """
    logger.debug("Making PUT request to /detector/{id}/disable")

    params = {}
    data = {}

    flat_body = {}
    data = assemble_nested_body(flat_body)

    success, response = await make_api_request(f"/detector/{path_id}/disable", method="PUT", params=params, data=data)

    if not success:
        logger.error(f"Request failed: {response.get('error')}")
        return {"error": response.get("error", "Request failed")}
    return response

<h1>NexiGraph</h1>

<!-- Markdown library -->
<script src="https://cdn.jsdelivr.net/gh/MarketingPipeline/Markdown-Tag/markdown-tag.js"></script>
<!-- JSON Editor library -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/10.1.3/jsoneditor.min.js" integrity="sha512-nSq28mOI6mPYnThjsLomwt5wbRkx66HV+o9g4s3EsJkQqqGmgsi2Qq7Y53PiEw7UQXx5ojddxaTYhBCq5ct/Pg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>


<body>
<h2>Graph database:</h2>
<p><strong>type:</strong> {{ graph_db_type }}</p>
<p><strong>address: </strong> {{ graph_db_url }} </p>
<p><strong>entity types:</strong> {{ entity_type_count }}</p>

<hr/>
<h2>Relationship recommendations (based on foreign keys):</h2>

<button onclick="handleClick('', 'process_evaluate_all')">Process and Evaluate All</button>
<button onclick="handleClick('', 'process_all')">Process All </button>
<button onclick="handleClick('', 'evaluate_all')">Evaluate All</button>

<p><strong>Auto apply if: confidence >= </strong>{{ ACCEPTANCE_THRESHOLD }}</p>
<p><strong>Auto reject if: confidence <= </strong>{{ REJECTION_THRESHOLD }}</p>


{# <form>
  <p>Filter:</p>
  <input type="radio" id="accepted" name="fav_language" value="HTML"> <label for="html">Accepted</label><br>
  <input type="radio" id="rejected" name="fav_language" value="CSS"> <label for="css">Rejected</label><br>
  <input type="radio" id="unreviewed" name="fav_language" value="JavaScript"><label for="javascript">Unreviewed</label>
  <input type="radio" id="all" name="fav_language" value="JavaScript"><label for="javascript">All</label>
</form> #}

<p><strong>Relationship candidates ({{ relations.items() | length }})</strong></p>
<ul>
	{%- for rid, h in (relations.items()) %}
       <li>
            <details>
                {% if h.manually_accepted %}
                    <summary style="color: darkgreen">{{ rid }}
                        <i>(Manually accepted)</i>
                        {% if h.is_applied %} <u>[Applied]</u>{% endif %}
                    </summary>
                    <button onclick="handleClick('{{ rid }}', 'reject')">Reject</button>
                    <button onclick="handleClick('{{ rid }}', 'evaluate')">Evaluate</button>
                {% elif h.manually_rejected %}
                    <summary style="color: red">{{ rid }} 
                    <i>(Manually rejected)</i></summary>
                    <p></p>
                    <div>
                    <button onclick="handleClick('{{ rid }}', 'accept')">Accept</button>
                    <button onclick="handleClick('{{ rid }}', 'un_reject')">Un-Reject</button>
                    </div>
                {% elif h.evaluation and h.evaluation.relation_confidence >= ACCEPTANCE_THRESHOLD %}
                <summary style="color: rgb(71, 139, 72)">{{ rid }}
                    <i>(Accepted)</i>
                    {% if h.is_applied %}<u>[Applied]</u>{% endif %}
                </summary>
                    <p></p>
                    <div>
                    <button onclick="handleClick('{{ rid }}', 'reject')">Reject</button>
                    <button onclick="handleClick('{{ rid }}', 'evaluate')">Re-Evaluate</button>
                </div>
                {% elif h.justification != '' and  h.evaluation and h.evaluation.relation_confidence <= REJECTION_THRESHOLD %}
                <summary style="color: darkred">{{ rid }}
                    <i>(Rejected)</i>
                </summary>
                    <p></p>
                    <div>
                    <button onclick="handleClick('{{ rid }}', 'reject')">Reject</button>
                    <button onclick="handleClick('{{ rid }}', 'evaluate')">Re-Evaluate</button>
                </div>
                {% elif h.justification != '' and  h.evaluation and  h.evaluation.relation_confidence < ACCEPTANCE_THRESHOLD %}
                <summary style="color: rgb(36, 36, 36)">{{ rid }} <i>(Not enough confidence)</i></summary>
                    <p></p>
                    <div>
                    <button onclick="handleClick('{{ rid }}', 'accept')">Accept</button>
                    <button onclick="handleClick('{{ rid }}', 'reject')">Reject</button>
                    <button onclick="handleClick('{{ rid }}', 'evaluate')">Re-Evaluate</button>
                </div>
                {% else %}
                <summary style="color: silver">{{ rid }} 
                    <i>(Unreviewed)</i>
                    {% if h.heuristic.count < MIN_COUNT_FOR_EVAL %} <u>[Not enough matches]</u>{% endif %}
                </summary>
                <p></p>
                <div>
                <button onclick="handleClick('{{ rid }}', 'accept')">Accept</button>
                <button onclick="handleClick('{{ rid }}', 'reject')">Reject</button>
                <button onclick="handleClick('{{ rid }}', 'evaluate')">Evaluate</button>
                </div>
                {% endif %}
                {# {%- for k,v in h.model_dump().items() %} #}
                    {# {% if (k == "thought" or k == "justification") and v != "" %}
                        <div>
                        <p><b>{{ k | capitalize }}:</b></p>
                        <div style="border-style: inset;"><md>{{ v }}</md></div>
                        </div>
                    {% endif %} #}
                {# {%- endfor %}
                {% set m = h %}
                {% set _ = m.__setattr__('thought', '') %}
                {% set _ = m.__setattr__('justification', '') %} #}
                <p><b>{{ "Data" | capitalize }}:</b></p>
                <textarea style="width: 800; height: 500 ">{{ h.model_dump_json(indent=2) }}</textarea>
                <p></p><hr>
            </details>
        </li>
    {%- endfor %}
</ul>

<hr/>

<script>
    function handleClick(relationId, action) {
        let url = window.location.href;
        if (action === "accept") {
            url += "{{ accept_endpoint }}".replaceAll("{relation_id}", relationId);
        } else if (action === "reject") {
            url += "{{ reject_endpoint }}".replaceAll("{relation_id}", relationId);
        } else if (action === "un_reject") {
            url += "{{ un_reject_endpoint }}".replaceAll("{relation_id}", relationId);
        } else if (action === "evaluate") {
            url += "{{ evaluate_endpoint }}".replaceAll("{relation_id}", relationId);
        } else if (action === "process_evaluate_all") {
            url += "{{ process_evaluate_all_endpoint }}";
        } else if (action === "evaluate_all") {
            url += "{{ evaluate_all_endpoint }}";
        } else if (action === "process_all") {
            url += "{{ process_all_endpoint }}";
        } else {
            console.error("Unknown action");
            return;
        }
        fetch(url, {
            method: "POST",
            headers: {},
        }).then(response => {
            if (response.ok) {
                // Refresh the page on successful response
                {#window.location.reload();#}
            } else {
                alert('Failed to process the request.');
            }
        }).catch(error => {
            console.error('Error:', error);
            alert('An error occurred while processing the request.');
        });
        }
</script>

</body>
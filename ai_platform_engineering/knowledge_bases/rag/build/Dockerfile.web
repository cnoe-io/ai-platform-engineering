# ---------- Stage 1: Build frontend ----------
FROM node:20-alpine AS build
WORKDIR /app/web

# Install dependencies with cache
COPY web/package.json web/package-lock.json* web/yarn.lock* web/pnpm-lock.yaml* web/.npmrc* ./
RUN if [ -f package-lock.json ]; then npm ci; \
    elif [ -f yarn.lock ]; then yarn install --frozen-lockfile; \
    elif [ -f pnpm-lock.yaml ]; then npm i -g pnpm && pnpm i --frozen-lockfile; \
    else npm i; fi

# Copy source and build
COPY web .
RUN npm run build

# ---------- Stage 2: Serve with nginx ----------
FROM nginx:alpine
COPY --from=build /app/web/dist /usr/share/nginx/html
COPY web/nginx.conf /etc/nginx/conf.d/default.conf
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"] 
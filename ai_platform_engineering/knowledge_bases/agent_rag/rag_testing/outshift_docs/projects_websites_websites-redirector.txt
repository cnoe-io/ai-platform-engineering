Websites Redirector
¶
Intro
¶
The ET&I SRE websites-redirector is used for centrally manage domain/website redirects.
For additional context see the
Managing website redirects
ADR entry.
Quick Links
¶
Source code repo
Jenkins build job
ArgoCD deployment config
ArgoCD applications
Architecture
¶
Build pipeline
¶
The build pipeline uses the sre-pipeline library to build and push/publish the application's Docker image and Helm chart.
Deployment
¶
The websites-redirector is deployed to the ET&I SRE managed EKS clusters via ArgoCD.
Making changes
¶
1. Make the change(s) in the application's Docker image
¶
Open a new branch and follow the process described in the
websites-redirector README
.
After you made the changes, open a PR and get it reviewed/approved.
2. Build the new version of the Docker image
¶
Build the new version of the image with the
Jenkins build job
.
3. Check the possible Ingress hostname collision
¶
If you migrate an existing domain which is associated with an Ingress object, check if there is already an Ingress object with that domain on the EKS cluster that you want to use to perform the redirects (Ingress that is not the
website-redirector
's).
For instance, you can use:
kubectl
get
ingress
-A
|
grep
"<hostname>"
and inspect the corresponding returned Ingress.
You can then either:
delete the whole application related to the above Ingress (if a product is already decomissioned). In which case, remove the
folder related to that app in sre-cluster-configs
.
or deploy the
websites-redirector
to an another EKS cluster to manage that redirect with.
This is necassary because the same hostname configured with the same ingress controller can cause collisions and unwanted behaviour, such as certificate issuing failures (visible in ArgoCD in the
certificate
object, or
challenge
.
ArgoCD link in eks-prod-3
)).
4. Deploy the version of the image and add the domain that you want to be redirected
¶
In the
sre-cluster-configs
repo open the values.yaml associated the websites-redirector deployment that you want to manage the redirect with.
Update the
tagversion
with the new Docker image's version tag (you can find it under the Jenkins build job's build history -
Build Version
).
Add the domain that you want to be redirected to the domains array.
Example:
websites-redirector:
tagversion: "2023.01.23-0ac7703-2" <--- update the image tag here
ingress:
annotations:
external-dns.alpha.kubernetes.io/ingress-hostname-source: annotation-only
external-dns.alpha.kubernetes.io/hostname: websites-redirector.eks-prod-3.prod.eticloud.io
defaultDomain: websites-redirector.eks-prod-3.prod.eticloud.io
domains:
- smm-docs.eticloud.io
- smm-docs.int.dev.eticloud.io
- domain-to-be-redirected.eticloud.io <--- add the domain to this array
After you made the changes let the ArgoCD sync the app's new version.
â ï¸ The domains (except the defaultDomain) aren't managed by ExternalDNS intentionally, because it can cause
flapping
.
5. Add or update the domain's
A
record
¶
5.1. Find the Ingress associated loadbalancer hostname
¶
You can find this by opening the websites-redirector ArgoCD app deployed to a certain cluster (example for
eks-prod-3
:
ArgoCD console link
), and see the Ingress object's live manifest:
On the picture above it's
a3c46c3e25b714881b309fac6626d4bb-1477125715.us-east-2.elb.amazonaws.com
.
5.2. Change the existing or add the
A (alias)
record for the domain
¶
Open the Route53 console in the
eticloud
account.
Add or edit the new
A (alias)
record. Set the record's value to the Ingress associated loadbalancer's hostname (don't forget to add the
dualstack.
prefix):
Save the changes.
5.3. Check that the redirect works
¶
Example:
â¯ curl --head https://smm-docs.eticloud.io/
HTTP/2 301
date: Wed, 08 Feb 2023 13:15:32 GMT
content-type: text/html
content-length: 162
location: https://docs.calisti.app/
It might take some time while the DNS changes propagate.
2023-10-13
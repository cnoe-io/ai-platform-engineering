ghec bes
ghec build environment security
ghec security
github actions bes
Github Actions Build Environment Security
¶
Build Environment Security (BES)
is a program set up by the Security & Trust Organization (S&TO) with the goal of ensuring build environments like
GH Actions
are successfully secured
The goal of this risk assessments is to create an actionable security readiness plans (SRPs) for Outshift GIthub Actions implementations.
The following section goes through the Outshift's Github Actions SRPs in detailed.
Executive Summary
¶
Outshift by Cisco is Cisco's Emerging Technologies and Incubation team. Outshift Platform manages the CI infrastructure for Outshift products. Outshift Platfom team's mission is to
"accelerate delivery of production-ready solutions"
. Developers in Outshift highly value the velocity of new product development and flexibility of Github Actions. Hence Outshift Platform team is pivoting CI pipeline to Github Actions for certain products like Panoptica.
Outshift team levereges Cisco IT provided Github Enterprise Cloud to host Panoptica.app source code on Github.com. In partnership with STO team, Outshift Platform team validated and implemented Github Actions for Outshift developers.
Note:
Github Actions CI platform is not widely deployed pending BES approval.
Outshift platform team implemented Github Actions with reusable and required workflows and with necessary safe gaurds to only allow
"verified"
actions and a small number of
"non-verified"
actions that were carefully vetted by the Outshift Platform team. Outshift Platform team also has deep expertise implementing CI pipelines and are very well versed in securing secrets in Keeper, securly publishing artifacts to approved artifacts stores, etc.
In the process of implementing Github Actions, Outshift Platform team was guided to use Gihub Hosted runners instead of self-hosted runners to avoid remote code execution attack vector inside a Cisco network. This implementation choice puts the
burden of securing the Github hosted runners on Github.com (or parent company Microsoft)
. Hence several BES controls are deferred to Cisco IT/STO/InfoSec to define the required security SLA guarantes in our contract with Github.com (vendor).
Overall, Outshift Platform team feels confident in our approach to secure Github Actions CI Pipeline with industry best practices for security and least privileged access with the caveat of ensuring security SLA is verified in Cisco's Github.com contract.
BES-REG-ENV: Build Environment Registration
¶
Github actions is registered under ESP
ETI Github Actions
Navigate to
Service Now
-> Search "Business Applications" -> Search "ETI Github Actions"
BES-BLD-SCRIPTED: Scripted Build Process
¶
Refer to
user-guide
BES-BLD-PROCESS: Consistent Build Process
¶
Refer to
reusable workflow architecture
BES-ACC-SECRETS: Build Environment Secrets Management
¶
Refer to
secrets management
BES-ACC-LOGIN: Build Environment Interactive Logins
¶
Refer to
GHEC user onboarding
BES-ACC-GENERIC: Build Environment Generic Users
¶
Refer to
Outshift Generic Users
BES-SRC-PROTECT-2: Protected Source Code Branches
¶
Refer to
Safe Settings
BES-INF-REPO: Secure Source Code Server
¶
Refer to
GHEC
BES-BLD-SERVICE: Build Service
¶
Refer to
GHA Actions Architecture
BES-BLD-DIAGRAM: Build Environment Architecture Diagram
¶
Refer to
Solution Architecture
Reusable workflows Architecture
BES-BLD-PIPE: Build Pipeline as Code
¶
Refer to
workflows architecture
BES-BLD-ISOLATE: Build Environment Isolation
¶
Refer to
Runners
Github.com GHA Docs
When the job begins, GitHub automatically provisions a new VM for that job. All steps in the job execute on the VM, allowing the steps in that job to share information using the runner's filesystem. You can run workflows directly on the VM or in a Docker container. When the job has finished, the VM is automatically decommissioned.
BES-BLD-ARTIFACT: Build Environment Artifact Storage
¶
Refer to
Outshift artifact strategy
BES-BLD-EPHEMERAL: Ephemeral Build Host
¶
Runners
Github.com GHA Docs
2023-09-26
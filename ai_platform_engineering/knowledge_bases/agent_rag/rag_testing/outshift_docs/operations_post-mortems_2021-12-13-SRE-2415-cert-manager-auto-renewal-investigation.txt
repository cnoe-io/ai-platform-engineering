Cert-Manager Auto-Renewal Investigation
¶
Overview
Context
Problem
Investigation and Findings
Solution
References
Overview
¶
This page summarizes the problem, solution, and learnings encountered while investigating
SRE-2415: Resolve cert expiration warnings
.
Context
¶
ETI platform leverages
cert-manager
to manage TLS certificates for services deployed in the shared Kubernetes clusters.
Problem
¶
One of cert-manager's functions is to
automatically renew
managed certificates before their expirary. However, we started getting alerted about certificates with < 30 days until expiration. Since certificates issued by cert-manager defaults to 90-day duration with auto-renewal time set to be ⅔ into that duration period, the existence of certificates with < 30 day expiration means that auto-renewal is failing.
Evidence
:
this deployed url report
shows 8 urls with < 30 days until expirary.
Investigation and Findings
¶
Investigation revealed a known
bug
in cert-manager that was fixed in
v1.6.0
(at the time of this discovery, we have been using cert-manager
v1.5.1
)e.g.
In a nutshell, the bug prevents certificates with "skewed"
notAfter
,
notBefore
, and
renewalTime
timestamps.
As described in the
bug report
,
notBefore
timestamp that is 1 second off from the
renewalTime
time creates a mismatch between the calculated renewal time and the renewalTime read from the Certificate's status:
notAfter: "2021-08-20T14:23:10Z"
notBefore: "2021-08-20T13:23:11Z"
renewalTime: "2021-08-20T14:03:10Z"
Upon checking the
notAfter
,
notBefore
, and
renewalTime
timestamps in one of our own managed certs, I saw the same 1-second skew that would cause this issue:
Solution
¶
Since this
bug fix
was released in
cert-manager v1.6.0
, the solution is to upgrade cert-manager in our kubernetes cluster to a version >= v1.6.0. At the time of this writing, the latest version available is
v1.6.1
, so we have
upgraded cert-manager in the eks-development-1 cluster
to
v1.6.1
.
After rolling out this change, we observed successful certificate renewals for services in the eks-development-1 cluster. For example:
â Events:                                                                                                                                                                                    â
â   Type    Reason    Age    From          Message                                                                                                                                           â
â   ----    ------    ----   ----          -------                                                                                                                                           â
â   Normal  Created   10m    cert-manager  Created Challenge resource "blue-a-appnet-wcm-docs-dev-argoapp-tls-9mjvc-1103535-519776812" for domain "wcm-docs-blue-a.int.dev.eticloud.io"      â
â   Normal  Created   10m    cert-manager  Created Challenge resource "blue-a-appnet-wcm-docs-dev-argoapp-tls-9mjvc-1103535-2098515270" for domain "wcm-docs-blue.int.dev.eticloud.io"       â
â   Normal  Created   10m    cert-manager  Created Challenge resource "blue-a-appnet-wcm-docs-dev-argoapp-tls-9mjvc-1103535-493660173" for domain "wcm-docs.int.dev.eticloud.io"             â
â   Normal  Complete  5m41s  cert-manager  Order completed successfully
The
diff
of the
eti_deployed_urls
reports run before and after this migration also shows that urls in the dev cluster are no longer being flagged for having < 30 days to expirary (production clusters have not yet been upgraded at this point).
Production clusters will be upgraded to certmanager v1.6.1 after giving the
eks-development-1
cluster "soak time" to ensure no latent issues from this upgrade impact services in that cluster.
References
¶
Cert-manager Overview
cert-manager bug report
cert-manager bug fix PR
2022-05-06
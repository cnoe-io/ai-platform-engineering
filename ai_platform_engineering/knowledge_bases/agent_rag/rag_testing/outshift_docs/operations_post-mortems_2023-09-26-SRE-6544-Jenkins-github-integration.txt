github
jenkins
jenkins nodes
post mortem
2023-09-26;
SRE-6544
-Jenkins GitHub Integration (Post Mortem)
¶
Summary
¶
Intent: Jenkins instance upgrade and OS upgrade on the 20
th
of September, 2023
Why: To introduce new updates to the Jenkins instance and OS
What happened: After the Jenkins upgrade our Jenkins nodes started experiencing errors during the build jobs when cloning repositories from GitHub.com (GHEC org cisco-eti). We also saw GitHub API trotting on our ArgoCD instance as well. We were not sure if the two incidents were related, but we were able to mitigate the ArgoCD issue by rotating the
fine grained personal token
and separating it from the one used in Jenkins.
When
¶
2023-09-26 11:55 IST - 2023-09-27 09:47 IST
Timeline
¶
2023-09-26
¶
11:55 IST: Recieved message from the API Sec developers that their pipelines were failing on the
git clone
command, and that they were getting the following error:
12:49 IST: Recieved message from our Jenkins notification bot in webex, that the eti-platform-docs pipeline failed for my commit:
12:50 IST: Noticed that the error was coming from the
git clone
command in the pipeline, and that the error was
ERROR: Error fetching remote repo 'origin'
26-Sep [12:49:35.159]  hudson.plugins.git.GitException: Failed to fetch from https://github.com/cisco-eti/sre-pipeline-library.git
26-Sep [12:49:35.159]   at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1003)
26-Sep [12:49:35.159]   at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1244)
26-Sep [12:49:35.159]   at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1308)
26-Sep [12:49:35.159]   at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:129)
26-Sep [12:49:35.159]   at org.jenkinsci.plugins.workflow.libs.SCMSourceRetriever.lambda$doRetrieve$1(SCMSourceRetriever.java:201)
26-Sep [12:49:35.159]   at org.jenkinsci.plugins.workflow.libs.SCMSourceRetriever.retrySCMOperation(SCMSourceRetriever.java:148)
26-Sep [12:49:35.159]   at org.jenkinsci.plugins.workflow.libs.SCMSourceRetriever.doRetrieve(SCMSourceRetriever.java:200)
26-Sep [12:49:35.159]   at org.jenkinsci.plugins.workflow.libs.SCMSourceRetriever.retrieve(SCMSourceRetriever.java:137)
26-Sep [12:49:35.159]   at org.jenkinsci.plugins.workflow.libs.LibraryAdder.retrieve(LibraryAdder.java:205)
26-Sep [12:49:35.159]   at org.jenkinsci.plugins.workflow.libs.LibraryAdder.add(LibraryAdder.java:143)
26-Sep [12:49:35.159]   at org.jenkinsci.plugins.workflow.libs.LibraryDecorator$1.call(LibraryDecorator.java:125)
26-Sep [12:49:35.159]   at org.codehaus.groovy.control.CompilationUnit.applyToPrimaryClassNodes(CompilationUnit.java:1087)
26-Sep [12:49:35.159]   at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:624)
26-Sep [12:49:35.159]   at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:602)
26-Sep [12:49:35.159]   at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:579)
26-Sep [12:49:35.159]   at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:323)
26-Sep [12:49:35.159]   at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:293)
26-Sep [12:49:35.159]   at groovy.lang.GroovyShell.parseClass(GroovyShell.java:677)
26-Sep [12:49:35.159]   at groovy.lang.GroovyShell.parse(GroovyShell.java:689)
26-Sep [12:49:35.159]   at org.jenkinsci.plugins.workflow.cps.CpsGroovyShell.doParse(CpsGroovyShell.java:142)
26-Sep [12:49:35.159]   at org.jenkinsci.plugins.workflow.cps.CpsGroovyShell.reparse(CpsGroovyShell.java:127)
26-Sep [12:49:35.159]   at org.jenkinsci.plugins.workflow.cps.CpsFlowExecution.parseScript(CpsFlowExecution.java:561)
26-Sep [12:49:35.159]   at org.jenkinsci.plugins.workflow.cps.CpsFlowExecution.start(CpsFlowExecution.java:513)
26-Sep [12:49:35.159]   at org.jenkinsci.plugins.workflow.job.WorkflowRun.run(WorkflowRun.java:335)
26-Sep [12:49:35.159]   at hudson.model.ResourceController.execute(ResourceController.java:101)
26-Sep [12:49:35.159]   at hudson.model.Executor.run(Executor.java:442)
26-Sep [12:49:35.160]  Caused by: hudson.plugins.git.GitException: Command "git fetch --no-tags --force --progress -- https://github.com/cisco-eti/sre-pipeline-library.git +refs/heads/*:refs/remotes/origin/*" returned status code 128:
26-Sep [12:49:35.160]  stdout:
26-Sep [12:49:35.160]  stderr: error: RPC failed; HTTP 401 curl 22 The requested URL returned error: 401
26-Sep [12:49:35.160]  fatal: expected flush after ref listing
26-Sep [12:49:35.160]
26-Sep [12:49:35.160]   at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:2674)
26-Sep [12:49:35.160]   at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:2098)
26-Sep [12:49:35.160]   at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.access$500(CliGitAPIImpl.java:84)
26-Sep [12:49:35.160]   at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$1.execute(CliGitAPIImpl.java:618)
26-Sep [12:49:35.160]   at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1001)
26-Sep [12:49:35.160]   ... 25 more
26-Sep [12:49:35.160]  ERROR: Error fetching remote repo 'origin'
26-Sep [12:49:35.160]  ERROR: Maximum checkout retry attempts reached, aborting
26-Sep [12:49:35.160]  org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:
26-Sep [12:49:35.160]  WorkflowScript: Loading libraries failed
12:51 IST: SRE team started investigations after noticing that the issue was not only with the
APISec
pipeline, but with multiple pipelines across the board, retries of the pipeline builds sometimes mitigated the issue, but it would sometimes come back
12:52 IST: Posted in our SRE general space that the issue was reaccusing in multiple pipelines, and that we have recieved multiple types of http errors:
500/403/401
when trying to clone the repositories.
13:40 IST: Created a new JIRA issue/bug to track the progress of our investigations:
https://cisco-eti.atlassian.net/browse/SRE-6544
13:48 IST: Noticed that the issue was not only happening in the P3 Jenkins nodes, but was also reproducing in the Jenkins cloud-nodes as well:
https://engci-private-sjc.cisco.com/jenkins/eti-sre/job/k8sec/job/k8sec-server-dev/job/master/3047/console
14:09 IST: Posted a message on the Platform Status webex space that we are experiencing issues with the Jenkins pipelines, and that we are investigating the issue
14:16 IST: Opened a new ticket with EngIT to help investigate the issue:
INC8847813
- this was still open at the time of the post-mortem write up as we were still waiting for a response from the EngIT team.
14:26 IST: SRE team rotates the Jenkins GitHub token, and updates the
Jenkins credentials
to use the new token, and the issue seemed to be resolved at first.
15:50 IST: We found that rotating the GitHub tokens did not help and that the issue still persists
16:11 IST: We had an internal SRE team call to mitigate the issue, while doing so we noticed that there were issues with the ArgoCD syncs as well, and that we forgot to rotate the GitHub token there (which was using the same one as in Jenkins).
16:12 IST: We created a new GitHub token for ArgoCD to be used explicitly for ArgoCD, and updated it in keeper by creating a new
secret
17:23 IST: The issue still persisted and we noticed that it was now much easier to reproduce/consistent in the pipeline:
https://engci-private-sjc.cisco.com/jenkins/eti-sre/job/k8sec/job/k8sec-server-mr/job/PR-908/
17:44 IST: We temporarily took the cloud node running in this pipeline offline, to see if that helped mitigate the issue
17:50 IST: We re-added all the nodes we brought back after the Jenkins instance upgrade by doing the following:
Go to
Manage Jenkins
->
Manage Nodes and Clouds
->
Nodes
->
<node name>
->
Configure
Under
Host Key Verification Strategy
select
Non verifying Verification Strategy
Click
Save
and
Relaunch
the Jenkins Agent
After relaunching the agent go back to the
Configure
settings and change the
Host Key Verification Strategy
back to
Known hosts file Verification Strategy
- 18:00 IST: We noticed that the issue was still persisting on some of the nodes, so we removed those nodes completely from the respective build labels:
build
and
cloud-build
- 18: 21 IST: After removing the respective labels from the nodes, we noticed that the issue was no longer reproducing in the pipelines. The nodes that were removed:
-
eti-cloud-agent-12.ci.eticloud.io
-
eti-cloud-agent-6.ci.eticloud.io
2023-09-27
¶
09:44 IST: We recieved a notification from one of the developers part of the
Kosha
venture in the respective SRE webex space:
  The issue came back, but this time in a dedicated P3 node:
https://engci-private-sjc.cisco.com/jenkins/eti-sre/job/kosha/job/kosha-e2e-nightly/171/console
09:47 IST: We mitigated the issue by removing the
eti-jenkins-kosha-xlarge-1
dedicated Jenkins node from the respective label
kosha
09:47 IST - : We are still waiting for a response from the EngIT team, and we are still investigating the issue on the nodes that were removed from the labels, but the problem has not been reproducing since on the currently running pipelines/nodes
Impact
¶
System(s) impacted?
¶
Multiple Jenkins pipelines on multiple Jenkins nodes, across multiple ventures
Teams impacted?
¶
All
Analysis
¶
It seems that the issue was somehow caused by the process of upgrading the Jenkins instance (which was done by EngIT) and then restarting/reattaching the Jenkins nodes after the upgrade was done (which was done by the SRE team). We are not fully sure of what exactly caused the issue initially, only that the integration with GitHub.com (GHEC org
cisco-eti
) was somehow broken, and that the issue was not only with the Jenkins nodes, but also with the ArgoCD instance as well. We can say that this was not reproduced with integrations with
wwwin-github
(GitHub Enterprise Server) which is an on-prem instance of GitHub.
Solution
¶
We are still waiting for a response from the EngIT team, but we have mitigated the issue by removing the nodes that were causing the issue from the respective labels, and we are still investigating the issue on the nodes that were removed from the labels, but the problem has not been reproducing since on the currently running pipelines/nodes
Takeaways
¶
Better communication of our current state using the tools we have (WebEx spaces, JIRA, etc.)
We have added a new JIRA dashboard bucket to our CNAPP ventures for them to better track any of these future blockers in Platform related services:
https://cisco-eti.atlassian.net/jira/dashboards/10268
Example of the dashboard:
2023-09-27
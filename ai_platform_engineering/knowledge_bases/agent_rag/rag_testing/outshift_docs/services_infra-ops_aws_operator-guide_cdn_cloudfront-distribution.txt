CloudFront distribution
cdn
AWS CloudFront Distribution
¶
Overview
¶
Amazon
CloudFront
is a content delivery network (CDN) service provided by Amazon Web Services (AWS) that securely delivers data, videos, applications, and APIs to customers globally.
CloudFront distribution with Terraform
¶
You can use Terraform to provision and manage Amazon CloudFront distribution, in a repeatable and predictable way.
To create a CloudFront distribution using Terraform, you would first need to clone
sre-tf-infra
repo.
git
clone
https://wwwin-github.cisco.com/eti/sre-tf-infra.git
Checkout a new branch  and use the Jira-id as the new branch name.
Go to
aws-eti-cloud/cdn
directory  and copy one of the existing projects.
Example:
cd
aws-eticloud/cdn
&&
cp
-r
<assets.id.eticloud.io/>
<new-project-name>
4. Make the necessary sub-directory naming changes (
dev
,
staging
or
prod
), depending on what type of deployment the new project would have. 
5. Modify the s3 backend
key
value per the new project.
terraform {
backend "s3" {
bucket         = "eticloud-tf-state"
key            = "backend/tfstate/cdn/us-east-1/project-name.tfstate"
region         = "us-east-2"
dynamodb_table = "eticloud-tf-locks"
encrypt        = true
}
}
6. Modify the
main.tf
file and add the new project specifications. 
   - In the first
block
, change the
aliases
and
comment
values with the new project domain name.
   - Modify the
default_cache_behavior
block, update the
origin_id
values. We use
origin_a
and
origin_b
when we are working on
blue-a
&
blue-b
deployments, as you can see in this
example
. This block sets the default behavior for all requests that don't match any of the other cache behaviors specified in the distribution.
   - You can add additional
cache_behavior
capabilities to a specified paths in your application.
   - Note: You can create a new [cache_policy](https://us-east-1.console.aws.amazon.com/cloudfront/v3/home#/policies/cache/create) and [origin_request_policy_id](https://us-east-1.console.aws.amazon.com/cloudfront/v3/home#/policies/origin/create) or use existing ones. 
7. When you are done modifying the
main.tf
file, go to
atlantis.yaml` file, under
CloudFront
section. Copy one of the existing project's config and modify as per the new project.
8. Create a Pull Request within GitHub for the changes made above.
9.  Interact with Atlantis to plan and apply the changes to create the new resource.
Helpful Links
¶
Terraform official
docs
.
Terraform
module
for CloudFront distribution.
2023-02-07
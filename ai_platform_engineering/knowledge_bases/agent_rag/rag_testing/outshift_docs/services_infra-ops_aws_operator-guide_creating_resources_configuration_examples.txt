creating resources with infrastructure as code
Creating Resources with Infrastructure as Code
¶
This document outlines the process for creating new resources within a project's/venture's infrastructure using the ET&I Sandbox platform. For an overview of this architecture and/or when/why you should use it, here is a list of additional relevant documents:
Overview
VPC Diagram
Infrastructure Repository
¶
When creating new sandbox infrastructure, use the following process:
If you aren't using
sre-tf-infra
, create a new repository.
Be sure to create the repo within the
eti
organization.
Create a
webhook in the repository for Atlantis
Atlantis workflow
¶
See the
Atlantis workflow documentation
The Atlantis bot will always post back comments on the PR to indicate status; it will include the log created during its various operations. Be sure to check the log to confirm it is doing what you expect. The log is also useful for troubleshooting should any errors occur.
â¬ï¸âto "Creating an EKS cluster"
â¬ï¸âto "Creating a VPC"
VPC Terraform Resources
¶
The SRE team has provided an
example
vpc.tf
configuration on which new VPCs may be based.
To use this
example
, simply copy it into the
appropriate directory
of the repository you created
above
and modify it as explained below.
Note that the
example
contains extensive comments to explain its various parts and parameters. When creating a new VPC based on it, as a minimum, the following changes are typically required:
terraform.backend.key
: This is the name of the Terraform statefile that'll be stored in S3. Its name should be descriptive and must be unique.
variable.default
: the
default
value in the
AWS_INFRA_REGION
variable defines in which AWS region the VPC should be created.
module.name
: The "vpc" module's
name
defines the name of the VPC as it exists within AWS. As usual, it should be descriptive and must be unique.
module.cluster_name
: The "vpc" module's
cluster_name
sets tags on the new VPC's subnets. These tags are consumed by EKS upon cluster creation. Please contact the SRE team if you have a need for more than one EKS cluster on your VPC.
module.create_database_subnet_group
: If you do not currently need RDS, set to
false
. If
true
, the subsequent
database_subnets
must
be populated.
module.create_elasticache_subnet_group
: If you do not currently need Elasticache, set to
false
. If
true
, the subsequent
elasticache_subnets
must
be populated.
Continuous Security Buddy Tags. There is more information available in the
VPC Variables section of the module README
.
CSBApplicationName
: Set this to match the VPC
name
.
CSBCiscoMailAlias
CSBEnvironment
â¬ï¸âto "Creating a VPC"
EKS Terraform Resources
¶
The SRE team has provided an
example
eks.tf
configuration on which new EKS clusters may be based.
NOTE: A VPC is REQUIRED to be extant before create an EKS cluster.
To use this
example
, simply copy it into the
appropriate directory
of the repository and modify it as explained below.
Note that the
example
contains extensive comments to explain its various parts and parameters. When creating a new EKS cluster based on it, as a minimum, the following changes are typically required:
terraform.backend.s3.key
: This is the name of the Terraform statefile that'll be stored in S3. Its name should be descriptive and must be unique.
variable.AWS_INFRA_REGION.default
: the
default
value in the
AWS_INFRA_REGION
variable defines in which AWS region the cluster should be created. This will be the same region the associated VPC exists in.
module "eks"
options:
cluster_name
: The cluster's name.
Note that this is currently limited to 12 characters.
cluster_os
: The Operating System the worker nodes will run. Can be
Ubuntu20
or
AmazonLinux2
vpc_name
: The
name
of the VPC that was created when you worked through
creating_a_vpc.md
-- you
did
do that part first, right?
Note the various fields for node group capacity and instance type. Be sure to set each of these to the bare minimum and potential maximum for the node group(s).
Continuous Security Buddy Tags. There is more information available in the
EKS Variables section of the module README
.
ApplicationName
: Set this to match the application name. This may be the same as
cluster_name
.
Environment
ResourceOwner
CiscoMailAlias
DataTaxonomy
DataClassification
â¬ï¸âto "Creating an EKS cluster"
Atlantis Configuration
¶
In order for the Atlantis bot to pick up and deploy new resources, changes may need to be made to the (new) repo's
atlantis.yaml
file. This section outlines the changes necessary to properly configure the bot.
VPC
¶
Add a project for the new VPC into the
atlantis.yaml
file in the repo, similar to the following:
-
name
:
us-east-2-vpc
dir
:
aws-eticloud-scratch/vpc/us-east-2/sre-dev-3
terraform_version
:
v0.14.6
workflow
:
standard
EKS
¶
Add a project for the new EKS cluster into the
atlantis.yaml
file in the repo, similar to the following:
-
name
:
us-east-2-eks
dir
:
aws-eticloud-scratch/eks/us-east-2/sre-dev-3
terraform_version
:
v0.14.6
workflow
:
standard
Noteworthy Items
¶
name
: The name by which Atlantis will know the project. This name is used to refer to the project in comments. For example:
atlantis plan -d us-east-2-vpc
dir
: This must point to the repository's directory of interest as it relates to this project. This is where Atlantis will look to process changes within this project.
environment
: An internal Atlantis pointer to the
manifest.yaml in eti-infra
. Ask the SRE team if you are unsure what to use.
Example
¶
See
atlantis.yaml
.
â¬ï¸âto "Creating an EKS cluster"
â¬ï¸âto "Creating a VPC"
2023-10-26
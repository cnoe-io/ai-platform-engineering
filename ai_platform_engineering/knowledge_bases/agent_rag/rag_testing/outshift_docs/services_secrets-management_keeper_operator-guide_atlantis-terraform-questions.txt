Questions about Atlantis and Terraform
¶
Table of Contents
¶
Context and Assumptions
Environment
Known
How do we update Atlantis from kubed-atlantis?
How does Atlantis have access to the state files?
What is the purpose of the vault_generic_secret data call in a Terraform file?
vault_generic_secret to do
What is the purpose of the manifest.yaml file?
How do I use the Cault provider in Atlantis
How is access to Vault limited in Atlantis?
How do I reference existing resources in Terraform?
What are the options to configure our version of Atlantis?
How does Atlantis have access to the state files?
Context and Assumptions
¶
Environment
¶
Old Atlantis assumes the Vault instance is
https://keeper.cisco.com
keeper-atlantis assumes the Vault instance to be
https://keeper.cisco.com
Old Atlantis assumes the Vault namespace is
eticloud/eticcprod
.
keeper-atlantis assumes the Vault namespace is
eticloud
.
The envvars
VAULT_ADDR
and
VAULT_NAMESPACE
are inserted into the pod by the
VAULT_TOKEN
(
example here
) Those envvars map to the Vault provider parameters
namespace
and
address
for Vault related resources.
Known
¶
How do we update Atlantis from kubed-atlantis?
¶
SRE team moved from kubed-atlantis in Q2 2022. In the event a project is encountered that expects kubed-atlantis, update the project Vault credential provider according to the documentation below.
Vault Secrets and Credentials Resources
How does Atlantis have access to the state files?
¶
Terraform has S3 state resources that are accessed through keeper credentials
Vault Secrets and Credentials Resources
What is the purpose of the vault_generic_secret data call in a Terraform file?
¶
The vault_generic_secret in our Terraform looks like:
data
"vault_generic_secret"
"aws_infra_credential"
{
path
=
"secret/eticcprod/infra/prod/aws"
}
NOTE: The path is dependent on the vault namespace being
eticloud/eticcprod
. See the
vault provider
later for use in keeper Atlantis.
That data is into the AWS provider to determine the AWS credentials:
provider
"aws"
{
access_key
=
data.vault_generic_secret.aws_infra_credential.data
[
"AWS_ACCESS_KEY_ID"
]
secret_key
=
data.vault_generic_secret.aws_infra_credential.data
[
"AWS_SECRET_ACCESS_KEY"
]
region
=
var.AWS_INFRA_REGION
max_retries
=
3
}
This interaction determines which account the resources are created in.
Link to credentials above
vault_generic_secret to do
¶
create credentials in a new namespace that is
not
eticloud/eticcprod with:
more explicit pathing and naming
example: eticloud/secret/atlantis_credentials/
/secret½/N
What is the purpose of the manifest.yaml file?
¶
The manifest.yaml file is required by our implementation of Atlantis. It's purpose is to define what Terraform should be run in what manner.
More information is available in the
atlantis.yaml documentation
How do I use the Cault provider in Atlantis
¶
Previously, we assume the vault address and namespace from the Atlantis pod (see
below
for more information).  Now that we we have access to multiple namespaces, we will have to specify the namespace in a vault provider block.
How is access to Vault limited in Atlantis?
¶
The Terraform vault provider assumes the parameters address from the environment variable
VAULT_ADDR
(set in the helm template
here
and namespace from the
VAULT_NAMESPACE
envvar (set in the helm template
here
).
How do I reference existing resources in Terraform?
¶
What are the options to configure our version of Atlantis?
¶
None, yet.
How does Atlantis have access to the state files?
¶
Atlantis is assigned AWS credentials that only have access to the state S3 buckets.
2025-02-09
Maintenance
¶
Prerequisite: Changes are prepared in the
argocd-instances
repository.
Generic maintenance flow
¶
Follow these steps when you do maintenance on ArgoCD instances:
Announce the maintenance in the ETI Platform space
Set the kube context to the target cluster
For P3 clusters:
Verify that the Vault token is up-to-date and that ESO functions properly
For P3 clusters:
Verify the secrets are available in Keeper and are in the necessary format
Apply the changes (git push, merge, ArgoCD sync, etc)
Monitor resource changes in the appropriate namespace:
kubectl -n NAMESPACE get po -w
Check if you can log in to ArgoCD
If necessary, restart Dex:
kubectl -n NAMESPACE rollout restart deploy ARGOCDNAME-dex-server
SRE prod instance maintenance
¶
Follow these steps when you do maintenance on SRE Prod ArgoCD:
Announce the maintenance in the ETI Platform space
Set the kube context to
eti-gitops-1
Verify that the Vault token is up-to-date and that ESO functions properly
Verify the secrets are available in Keeper and are in the necessary format
Apply the manifests to
eti-gitops-1
:
kustomize build sre/prod | kubectl apply -f -
Monitor resource changes in the
argocd
namespace:
kubectl -n argocd get po -w
Check if you can log in to ArgoCD:
https://argocd.prod.eticloud.io
If necessary, restart Dex:
kubectl -n argocd rollout restart deploy argocd-dex-server
(SRE Prod needs a separate maintenance flow because it's managed manually whereas (ideally) all other instances are managed using GitOps with SRE Prod ArgoCD)
2022-07-05
config.lock file
git-plugin
jenkins
master
post mortem
2023-02-21; Jenkins Pipelines Failures due to .git/config.lock (git-plugin) in Master-Controller
¶
Summary
¶
The Jenkins pipelines failed when trying to pull the sre-pipeline-library (GHEC) repo on all build jobs
When
¶
2023-02-21 10:45 CET - 2023-02-21 13:00 CET
Timeline
¶
2023-02-21
¶
10:45 CET: First jenkins pipeline failure on k8sec-server-dev
11:15 CET: Panoptica developers started reaching out to SRE team regarding multiple pipeline failures
11:25 CET: We identified the issue to be on almost all eti-cloud pipelines in jenkins
11:40 CET: The issue has been identified to be similar to all eti-cloud pipelines with error output
hudson.plugins.git.GitException: Command "git config remote.origin.url https://github.com/cisco-eti/sre-pipeline-library" returned status code 255:
stdout: stderr: error: could not lock config file .git/config: File exists
11:50 CET: We found that the root cause might be related to a cache file in $JENKINS_HOME/caches in jenkins master
11:55 CET: We didn't have access to jenkins master machine to investigate the issue
12:10 CET: Reviewing online forums we found an open jenkins bug on git-plugin
JENKINS-65277
12:25 CET: A ticket was opened to EngIT stating the issue and the solution (deleting .git/config.lock file inside jenkins master cache folder)
13:06 CET: EngIT team confirmed that the issue was resolved by deleting the cache file
Impact
¶
System(s) impacted?
¶
All pipelines and jenkins jobs running under eti-cloud (using git-plugin)
Teams impacted?
¶
All teams using Jenkins
Analysis
¶
We didn't get any indication of the wide failure issue except from jenkins users.
Once we understood the problem/RC we didn't have any access to the master node to troubleshoot the problem.
We had two options; either to re-install git-plugin (that will delete the cache folder mentioned above), or to manually ssh to the master node and delete the .lock file.
We decided to open a ticket/incident with EngIT so they could do this manually as they have that access.
Root cause appears:
We suspect this has to do with a triggered edge case/issue with the Jenkins git-plugin, when deleting a multi-branch pipeline after it triggered multiple branches simultaneously. Instead of deleting each scheduled build one-by-one, the multi-branch pipeline was deleted. According to forums this is a known, but unfix-able issue as it is hard to reproduce (only happens sometimes):
JENKINS-65277
Solution:
EngIT deleted the .git/config.lock under $JENKINS_HOME/caches in Jenkins Master-Controller
Takeaways
¶
Monitoring might need to trigger if multiple jenkins jobs fails x amount of times or get that specific error.
Maybe require some limited access from EngIT team to jenkins master node for future faster mitigation.
Create an automation that deletes that plugin config.lock file on request.
Avoid creating that git-plugin lock (needs further investigation).
2023-02-21
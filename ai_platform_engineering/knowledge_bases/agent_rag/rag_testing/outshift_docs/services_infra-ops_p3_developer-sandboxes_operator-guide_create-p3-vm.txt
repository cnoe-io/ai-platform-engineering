P3 VM
create P3 VM
How to create a developer VM in P3 using Terraform
¶
Here is the step by step guide in creating P3 VM.
Steps
¶
Step 1: Gather VM spec
¶
Ask the developer for VM, CPU|Memory spec
flavor
Ask the developer for OS
flavor
.
Step 2: ssh keys
¶
Generate new SSH Keys
¶
Every VM will use a dedicated ssh keys and there will be a master key shared across all VMs.
ssh-keygen
-t
rsa
-b
4096
-C
"eti-sre-admins@cisco.com"
-f
vm-name
Sample output:
â
temp
ssh-keygen
-t
rsa
-b
4096
-C
"eti-sre-admins@cisco.com"
-f
jdetiber
Generating
public/private
rsa
key
pair.
Enter
passphrase
(
empty
for
no
passphrase
)
:
Enter
same
passphrase
again:
Your
identification
has
been
saved
in
jdetiber
Your
public
key
has
been
saved
in
jdetiber.pub
The
key
fingerprint
is:
Omitted
!!
â
temp
ls
jdetiber
jdetiber.pub
Save the Keys in Vault
¶
Navigate to
keeper
Convert the public-key to base64 and copy the text.
cat
jdetiber.pub
|
base64
Create new keeper secret from the above base64 text with
Add public-key
Add private-key
Step 3: Add VM in sre-tf-infra
¶
Clone sre-tf-infra
git
clone
https://wwwin-github.cisco.com/eti/sre-tf-infra.git
Checkout a new branch per Jira ticket.
git
checkout
-b
SRE-#
Create the new vm from already existing VM TF code
¶
Create a directory in
/p3/sandboxes/vms/
, name the directory as the new vm name.
Make a copy from one of the existing VMs TF code into the new directory and update all the vm-name entries with the new vm-name.
Example
Update
atlantis.yaml
file and add the new project information under
VMs
section.
Push the changes to a new PR and interact with Atlantis to plan and apply the changes.
Sample output
Step 4: Access the VM
¶
Change the private-key mode to 600
Access the VM with the SSH private-key you generated.
Sample Output
¶
chmod
600
jdetiber
ssh
-i
jdetiber
ubuntu@eti-jdetiber-1
Add public master-key to SSH authorized-keys
¶
Go to
vault
and copy the public-key.
Add the public-key to authorized-keys
nano
~/.ssh/authorized_keys
Verify if Jenkins master-key is working
¶
Go to
vault
and copy the private-key and SSH with the key as mentioned in
step:4
Step 5: Add the VM to sre-monitoring by running the Jenkins job with ansible
¶
Clone
sre-build-infra-ansible
git
clone
https://wwwin-github.cisco.com/eti/sre-build-infra-ansible.git
Update
atlantis_etiin_hosts
file, under [vm] with the new vm-name.
Sample output
[
nodes
]
eti-maulie-1
consul_iface
=
eth0
consul_node_role
=
client
ansible_ssh_private_key_file
=
private.pem
docker_workspace
=
/mnt
commit the changes.
make sure that sre-build-infra-ansible job built with success. Read the job's console output carefully, some tasks in the playbooks can fail but the build still can be successful.
Step 6: run the sre-build-infra-ansible job with Parameters
¶
Go to
sre-build-infra-ansible
choose
build with Parameters
and fill the form as below.
Finally, hit build button.
Step 7: Verify VM stats in monitoring
¶
Add the VM to the
jenkins-monitoring
endpoints in the
sre-cluster-configs repo
and merge the PR into the
master
branch.
jenkins-monitoring:
namespace:
jenkins-monitoring
endpoints:
...
-
name:
eti-tkircsi-1
ip:
10
.123.223.178
...
Check that the
p3-prod-1-jenkins-monitoring ArgoCD app
synced successfully.
Go to
Per VM Node Exporter Dashboard
In the header select the VM name from the
JOB
list.
Step 8: Register the vm in the P3 vms active list
¶
Add the new vm into the
developer-p3-vms
list.
2024-07-11
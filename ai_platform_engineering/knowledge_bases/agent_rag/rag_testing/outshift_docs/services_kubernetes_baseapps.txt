kubernetes base apps
ETI Kubernetes baseapps
¶
Overview
¶
ETI SRE team installs baseapps in every Kubernetes cluster. Baseapps are sometimes also referred to as cluster addons
â ï¸ baseapps are updated over time. Not all baseapps are represented in the diagram below.
These baseapps provide common operational functionalities such as Secrets management, TLS certificate lifecycle management, Ingress controllers, Observability, etc., a successful deployment of all
required
baseapps is a
pre-requisite
to "hand-off" of the cluster to another team.
Base App Manifest
¶
Required
¶
These baseapps provide critical functionality and must be deployed to every Kubernetes cluster. The list of base applications is maintained as part of the
values.yaml
for the
kubernetes-baseapps
helm chart.
For the current list and versions of base applications reference the
baseapps:
section of the
values.yaml
Optional
¶
The base application manifest can be customized if required.
Some examples of overriding are below:
Application is not required for the cloud provider.
Application not applicable to the environment.
A different version is required.
Deploy to a non-default namespace.
See
Baseapp Manifest
for details.
baseapps deployment overview
¶
Each base-app is defined as an ArgoCD
application
resource
Base-app helm chart is stored in
sre-helm-charts
and artifact is upload to internal
chartmuseum
Deployment destination, overlays are setup in the
Baseapps Repo
for the ArgoCD that manages the target kubernetes cluster.
baseapps are managed via ArgoCD Applicationset for deployment into multiple target K8s clusters.
ArgoCD
ApplicationSet Controller
, which facilitates managing base app deployment to multiple target K8s clusters by automating the generation of
ArgoCD Application
resources
The baseapps applicationset is specified in the
applicationset.yaml
at the root of the
Baseapps Repo
for the ArgoCD that manages the target kubernetes cluster.
baseapps deployments are defined as an app-of-apps in the
kubernetes-baseapps
helm chart.
New Kubernetes Cluster Set Up
¶
Base Applications need to be set up on a new cluster prior to delivery.
Reference the
Install Baseapps
section for details on how to provision and configure base applications for a cluster.
Also, See
How to Add a New Cluster
doc for step-by-step instructions for creating a new Kubernetes cluster and connecting it to ArgoCD to make it available as a deployment target cluster.
Adding a
new
base-app
¶
So far, this document described the set of currently supported baseapps that have
already
been set up for multi-cluster deployment via the ArgoCD applicationset defined in the
Baseapps Repo
for the ArgoCD that manages the target kubernetes cluster.
If there is a
new
common service that needs to be deployed to each managed K8s cluster, you will need to define a new base app helm chart and add it to the
kubernetes-baseapps
manifest. See the
How to setup a new base-app in k8s
doc for detailed steps on adding a net-new service as an addition to the shared-services managed by ClusterOps described above.
Upgrading one or more baseapps.
¶
The process for upgrading one or more baseapps is no different than adding a new baseapp. The chart and version is upgraded and testing is done as described in
How to setup a new base-app in k8s
The difference is that instead of setting up a new baseapp, the version of an existing baseapp is incremented.
Update the upstream chart version.
Test that chart version on an SRE test cluster.
Consume the chart in
kubernetes-baseapps
helm chart.
Update one or more clusters to use the new sre-baseapps helm chart that includes the upstream chart upgrades.
2023-10-17
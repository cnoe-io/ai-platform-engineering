ec2
ssh
users
Adding users to an EC2 instance
¶
Adding individual users to an EC2 instance or a bastion host can be achieved by uploading a file to an S3 bucket.
Prerequisites
¶
The CEC ID for each user to be added
The S3 bucket for the:
EC2 instance
VPC/bastion host
Determining Prerequisites
¶
You'll need to determine the specific instance name(s) and or VPC/bastion host based on who is requesting access to
what; this generally requires some background information about the use case/project/venture.
Example
¶
Research uses a number of
sandbox
VMs which are distributed between two AWS accounts:
cisco-research (509581005347)
(newer/preferred)
eticloud-scratch-c (244624147909)
(which we are moving them out of)
VMs in the
cisco-research
account are exclusively for Research.
Research VMs in the
eticloud-scratch-c
account will have
research
in their name --
research-interns-5-1
is one example.
Note:
Research VMs typically reside in the
eu-west-1
or
us-east-2
regions due to GPU availability.
Given the instance name, we would look for a similarly-named bucket in S3 -- based on the example
research-interns-5-1
, the bucket name is
research-interns-5-users
.
In addition, the user must be allowed access to the VPC via the bastion host created by the
Terraform module
when the VPC is created. To determine
this bucket's name, we must determine the VPC on which the EC2 instance(s) (as above) is located. The bucket naming
convention for the bastion/VPC follows a similar pattern to that of the EC2 instance; given the example above we see
that the
research-interns-5-1
instance is using VPC
eti-mc-1
and, if we look in S3, we find a bucket named
eti-mc-1-vpc-users
.
With the bucket names determined, we can now place the new user's SSH public key into each bucket's
public-keys
directory to be consumed by the
sync_users
script on each instance as described below.
Steps
¶
Ask the user requesting access to create an SSH keypair with their CEC ID as the keypair name (if they already have one, ask that they share the
public
key for that keypair).
Example:
ssh-keygen -t rsa -b 4096 -f $CEC_ID
Upload the public key file (
$CEC_ID.pub
) the appropriate S3 bucket.
Log into the instance and ensure the user was created.
Explanation
¶
The modules the ET&I SRE team uses to create
EC2 instances
and
bastion hosts
each use the same
user_data script
to install a script called
sync_users
when the instance is created. That script is then added to a cronjob that runs
every 5 minutes.
The script lists any files that are in a pre-defined S3 bucket in a path called
public-keys
. The script looks for
files ending with
.pub
in that bucket and path. It then parses the text before the
.pub
and creates a user on the
host with that prefix. The public key data is then added to that user's
~/.ssh/authorized_keys
file.
2023-06-09
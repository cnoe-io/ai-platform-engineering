Using Duo MFA on build environments
¶
This document outlines how we can enable Duo MFA on our build environments as per InfoSec
BES-ACC-LOGIN
.
This is linked to
SRE-4317: CT2146: BES-ACC-LOGIN: Build Environment Interactive Logins (10)
Duo installation
¶
In order to test the Duo installation on the build environments, I've brought up a canary cluster as per
this PR
As you know, our build infra system is managed through
Ansible automation repo
with the
sre-build-infra-ansible job
.
For installing Duo MFA, we're using the
Duo ansible playbook
and linked it in our
requirements
which contained dependencies as per:
-
src
:
git+https://wwwin-github.cisco.com/sto-ccc/ansible-setup.git
version
:
master
-
src
:
git+https://wwwin-github.cisco.com/sto-ccc/ansible-bom_management.git
version
:
master
-
src
:
git+https://wwwin-github.cisco.com/sto-ccc/ansible-authselect.git
version
:
master
-
src
:
https://wwwin-github.cisco.com/sto-ccc/ansible-users
name
:
ansible-users
scm
:
git
version
:
1.14.0
-
src
:
https://wwwin-github.cisco.com/sto-ccc/ansible-duo_install.git
name
:
ansible-duo_install
scm
:
git
version
:
1.8.0
This will be installed by default once running our automation job. Then, once installed, we need to setup the playbook with few parameters as defined in the
Duo ansible playbook
.
Duo configuration on env
¶
In our case, we do have several environments:
common jenkins nodes
,
dedicated jenkins nodes
,
jenkins coud nodes
or also
sandbox
So the benefits of leveraging Duo ansible playbook is that we can now have better configuration in term of users access.
The proposal will be to define list of users/groups per environments and still enable the ubuntu user but only for the automation.
To enable it, we have defined a
Duo playbook
:
-
name
:
Run Duo install as part of Host configuration
hosts
:
all
vars_files
:
-
"./duo/{{duo_auth}}-users.yml"
-
./duo/duo_install.yml
roles
:
-
role
:
ansible-users
-
role
:
ansible-duo_install
-
name
:
Duo Auth debug
ansible.builtin.debug
:
msg
:
Duo auth applied to {{ duo_auth }}
This is going to use the
duo configuration file
:
#TODO: generate our keys
#duo_ikey: <DUO iKEY>
#duo_skey: <DUO sKEY>
#duo_api_host: api-345c0691.duosecurity.com
duo_pam_prompts
:
1
As you can see, we're using the default configuration as per the Duo documentation but moving forward, we will need to use our own Duo keys.
After, as per the Duo playbook, we've defined users per env as per:
-
"./duo/{{duo_auth}}-users.yml"
So this requires to have a duo_auth attribute in the Ansible inventory in order to link a node to a specific env as per
canary inventory
for example:
[
nodes
]
eti-jenkins-canary-test-1 duo_auth=canary consul_iface=eth0
In this example, it will used the
Canary users configuration file canary-user.yaml
:
duo_pam_groups
:
[
"ubuntu"
,
"sre"
]
users_group_add_list
:
-
name
:
sre
users_add_list
:
-
name
:
jegarnie
group
:
'sre'
unlimited_superuser
:
true
require_sudo_passwd
:
false
ssh_key
:
"ssh-rsa
yyy"
-
name
:
matunger
group
:
'sre'
unlimited_superuser
:
false
require_sudo_passwd
:
false
ssh_key
:
"ssh-rsa
xxx"
We can then have several users configuration per environment as for example another one for dedicated nodes for panoptica:
duo_pam_groups
:
[
"ubuntu"
,
"sre"
,
"panoptica"
]
users_group_add_list
:
-
name
:
sre
-
name
:
panoptica
users_add_list
:
-
name
:
jegarnie
group
:
'sre'
unlimited_superuser
:
true
require_sudo_passwd
:
false
ssh_key
:
"ssh-rsa
xxx"
-
name
:
dneduva
groups
:
[
'sre'
,
'panoptica'
]
ssh_key
:
"ssh-rsa
yyy"
So the next steps will be to have our own Duo configuration/keys and setup list of users per environments with right priviledges. This could be used also for Sandbox in order to have better access controls and audit on all our env.
2023-08-25
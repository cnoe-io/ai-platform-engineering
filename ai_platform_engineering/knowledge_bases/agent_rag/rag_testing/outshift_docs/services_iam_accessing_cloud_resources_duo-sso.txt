aws access
aws cli setup
aws login
duo-sso
Duo SSO
¶
Tip
Cisco AWS Web Console Link (UI):
https://go2.cisco.com/aws
- AWS Login Short URL -
https://go2.cisco.com/aws
- AWS New Duo SSO URL -
https://sso-dbbfec7f.sso.duosecurity.com/saml2/sp/DIRGUUDMLYKC10GOCNOR/sso
Usage Guide
¶
Step 0: Install AWS Cli
¶
See the
AWS CLI
.
Step 1: Install duo-sso
¶
See the
duo-sso Installation guide
.
Pre-requisites
¶
Install
homebrew
Mac OS
brew tap ats-operations/homebrew-tap https://wwwin-github.cisco.com/ATS-operations/homebrew-tap
brew install duo-sso
Linux
Download the linux binary from
duo-sso releases
Move duo-sso to system path
sudo mv duo-sso /usr/local/bin
Install
pass
on your linux distributiong
Here are the instructions for
Ubuntu
sudo apt install pass -y
sudo apt install gnupg -y
gpg --full-generate-key
pass init <gpg-id>
Window
Download the windows executable from
duo-sso releases
Install and run cli
Upgrade
¶
brew tap --repair ats-operations/homebrew-tap
brew upgrade duo-sso
# If the above upgrade doesn't work, try to uninstall and re-install duo-sso
brew uninstall duo-sso
brew untap ats-operations/homebrew-tap
brew cleanup
brew tap ats-operations/homebrew-tap https://wwwin-github.cisco.com/ATS-operations/homebrew-tap
brew install duo-sso
Step 2: Login with duo-sso interactively
¶
Run:
duo-sso --session-duration 3600
Note:
If you are running duo-sso for the first time use interactive option to clear brower prompts to select client certificates
duo-sso --session-duration 3600 -interactive
Session duration
¶
The default session duration for
admin
and
devops
IAM roles is 1 hour (3600 seconds).
If this does not suit your needs/use case, it can be increased based on the following rules:
for
non-production
accounts it can be increased up to
4 hours
without SRE approval
or can be further increased with SRE approval (with proper justification)
for
production
accounts the maximum session duration is
1 hour
but it can be further increased with SRE approval (with proper justification)
The session duration for the IAM roles can be modified under
IAM
/
Roles
/
admin
or
devops
/
Edit
/
Session duration
.
Step 3: [Optional] Login with duo-sso using config
¶
It is recommended that you use a configuration file for Duo-SSO (
~/.config/duo-sso/config.json
), as some parameters defaults must be overridden for login to succeed (see
Troubleshooting
).
Two examples of the full configuration are provided below. If you start with
Config Example 1
,
duo-sso
will print all the account IDs and roles you are authorized to access, which you can then specify as distinct profiles in config for non-interactive logins, as described in
Config Example 2
.
Config Example 1 - Choose AWS account and role at runtime
¶
Since a
profile
block is not specified in
~/.config/duo-sso/config.json
,
duo-sso
will  list all available accounts and the roles available to you and prompt you to select the one assume for this session.
~/.config/duo-sso/config.json
without a
profiles
:
{
"url": "https://cloudsso.cisco.com",
"partner_spid": "https://signin.aws.amazon.com/saml",
"aws_urn": "https://signin.aws.amazon.com/saml",
"session_duration_seconds": 3600,
"preferred_device": "phone1",
"preferred_factor": "push",
"debug": false
}
Config Example 2 - Specify account and role as profiles in config file
¶
If you specify multiple accounts and roles as distinct
named profiles
in the
duo-sso
config file, each of them will be authenticated and tokens stored for subsequent selection by the aws cli
--profile
option, as described inte duo-sso docs
here
. This approach enables you to distinguish credentials for different AWS environments in your duo-sso config file (
~/.config/duo-sso/config.json
). For example:
{
"url"
:
"https://cloudsso.cisco.com"
,
"partner_spid"
:
"https://signin.aws.amazon.com/saml"
,
"aws_urn"
:
"https://signin.aws.amazon.com/saml"
,
"session_duration_seconds"
:
3600
,
"preferred_device"
:
"phone1"
,
"preferred_factor"
:
"push"
,
"debug"
:
false
,
"profiles"
:
{
"eticloud"
:
{
"aws_account_id"
:
626007623524
,
"aws_role_name"
:
"admin"
,
"session_duration_seconds"
:
3600
},
"eticloud-scratch"
:
{
"aws_account_id"
:
380642323071
,
"aws_role_name"
:
"admin"
,
"session_duration_seconds"
:
3600
}
}
}
The above example defines two profiles:
-
eticloud
for accessing the
eticloud
environment (AWS account 626007623524) with the
admin
role
-
eticloud-scratch
for accessing the
eticloud
"scratch" environment (AWS account 380642323071) with the
admin
role
This configuration will produce the following output when
duo-sso
is run:
â  ~ duo-sso
â SSO completed successfully
â AWS Accounts / Roles validated successfully
â Assume role 'admin' completed successfully
â AWS Credentials saved for profile 'eticloud'
â Assume role 'admin' completed successfully
â AWS Credentials saved for profile 'eticloud-scratch'
...
When running commands with the
aws
CLI, you'll need to append
--profile [PROFILE_NAME]
to specify which credentials it should use. For example, to use the
eticloud
profile given in the example
config.json
above, the
aws eks update-kubeconfig
would become:
aws eks update-kubeconfig --name eks-dev-1 --region us-east-2 --profile eticloud
Troubleshooting
¶
If you see this error:
Failed to Assume Role '<role>' via STS: ValidationError: The requested DurationSeconds exceeds the MaxSessionDuration set for this role
add the following override to
~/.config/duo-sso/config.json
:
"session_duration_seconds": 3600
See the
duo-sso FAQ
section for more known failures and workarounds.
References
¶
Duo-SSO repo
2025-06-01
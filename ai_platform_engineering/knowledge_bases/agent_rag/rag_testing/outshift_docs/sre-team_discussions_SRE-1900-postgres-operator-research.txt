SRE-1900 - Postgres operator research
¶
When: 2021 October
The scope of this research is to find a good candidate for a Postgres operator suitable for dev and experimental use cases. We consider these databases ephemeral, so destroying and recreating them shouldn't be an issue.
Features we are looking for:
- CRD-based configuration
- Automatic setup (databases, users)
- Monitoring capabilities
Features we are NOT looking for (although they are nice to have):
- Clustering capabilities
- Backup
Candidates
¶
Stolon
Postgres operator
(by Crunchy Data)
Postgres operator
(by Zalando)
Postgres operator
(by movetokube)
KubeDB
StackGres
Preliminary notes
¶
Stolon
No CRs
CrunchyData
Uses Deployments
Zalando*
KubeDB
Interesting CRD approach
Enterprise versions
Bad experience with AppsCode (bias)
StackGres*
The youngest
Decision criteria
¶
CRD-based configuration (yes/no) (weight: 4)
Automatic setup (yes/no) (weight: 3)
Ability to create databases and users using CRDs or other configuration options. Support GitOps and ArgoCD.
Ease of use (0-9) (weight: 2)
Is launching a new database trivial? Could ventures do it?
Open Source (yes/no) (weight: 2)
Documentation (0-9) (weight: 1.5)
Traction (0-9) (weight: 1.5)
Is the project actively developped? Is it likely to disappear on us? Is it actively used by the community?
Nice to have features (0-9) (weight: 0.5)
Backups can be handy sometimes. Testing read-only replicas can be useful too.
Detailed evaluation
¶
Stolon
¶
The biggest problem with Stolon is that it cannot be configured with CRDs, resources have to be created individually. As a result, there is no automatic setup either (creating databases and users) is also manual.
Combined with the
Move to Kube Postgres operator
and a custom built Helm chart it could be a solution, although I'm not sure it's worth the effort.
Scoring details:
- CRD-based configuration: no
- Automatic setup: no
- Ease of use
    - Images have to be built (provided official images are examples)
    - Needs a custom Helm chart + another operator
- Open Source: yes
- Documentation
    - Detailed documentation on GitHub
    - Limited documentation on Kubernetes
    - No information about upgrading
- Traction
    - GitHub stars: 3.4k
    - Last commit: less than a week ago
    - Last release: 2021 September
    - Webex uses it
- Nice to have features
    - Backups (manual)
    - Point in time recovery
    - Clustering
Postgres operator by Crunchy Data
¶
Well-established project that's part of Crunchy Data's offering, so they are interested in keeping the project alive.
The operator is tested on a wide range of platforms.
Scoring details:
- CRD-based configuration: yes
- Automatic setup: yes
    - There is an init SQL option that seems like a good way to setup databases, but less ideal for users
    - Users can be added in the spec
- Ease of use
    - Comes with a custom CLI tool for manual operations
- Open Source: yes
- Documentation
    - Detailed documentation website:
https://access.crunchydata.com/documentation/postgres-operator/v5/
- Comes with detailed release notes
- Traction
    - GitHub stars: 2k
    - Last commit: less than a week ago
    - Last release: 2021 September
- Nice to have features
    - Backups
    - Clustering
Postgres operator by Zalando
¶
Zalando is well-known for their solutions in the Cloud Native space.
Scoring details:
- CRD-based configuration: yes
- Automatic setup: yes
    - Users and databases can be added in the spec
- Ease of use
    - Comes with a fancy UI for quickly launching new databases (helps creating CRs)
    - Creating a new database is ridiculously easy
    - Probably needs custom monitoring
- Open Source: yes
- Documentation
    - Detailed documentation website:
https://postgres-operator.readthedocs.io/en/latest/
- Structure and amount of content is a bit overwhelming
- Traction
    - GitHub stars: 2.1k
    - Last commit: less than a week ago
    - Last release: 2021 August
- Nice to have features
    - Backups
    - Clustering
    - Tons of customization options
Postgres operator by Move to Kube
¶
This operator can only work on existing Postgres databases to create databases and users.
KubeDB
¶
KubeDB supports a lot of different databases, but the available options are limited in the open source version.
Personally, I have bad experience with AppsCode software, but I haven't used KubeDB before.
Scoring details:
- CRD-based configuration: yes
- Automatic setup: no
    - Single user-password pair is created for the default postgres database
- Ease of use
- Open Source: yes (advanced features in enterprise)
- Documentation
    - Detailed documentation website:
https://kubedb.com/
- Traction
    - GitHub stars: 444
    - Last commit: less than a week ago
    - Last release: 2021 October
- Nice to have features
    - Most of them are paid features
StackGres
¶
Youngest solution of all, focusing on Postgres on Kubernetes.
It's actually a complete platform for running Postgres on top of Kubernetes.
Scoring details:
- CRD-based configuration: yes
- Automatic setup: no
    - Single user-password pair is created for the default postgres database
- Ease of use
    - Comes with a fancy UI
    - Creating a new database is ridiculously easy (once you have some of the basics sorted out)
- Open Source: yes
- Documentation
    - Detailed documentation website:
https://stackgres.io/doc/latest/
- Traction
    - GitHub stars: 116
    - Last commit: less than a week ago
    - Last release: no stable release yet, RC1 is 4 days old
- Nice to have features
    - Backups
    - Clustering
    - Tons of customization options
    - Tons of integrations (monitoring, logging)
Review by Flant
¶
Link:
https://blog.flant.com/comparing-kubernetes-operators-for-postgresql/
They had slightly different requirements (ie. they wanted to run Postgres in production).
They went with Zalando:
https://blog.flant.com/our-experience-with-postgres-operator-for-kubernetes-by-zalando/
Decision matrix
¶
5 Options / 7 Criteria
Stolon
Crunchy Data operator
Zalando operator
KubeDB
StackGres
CRD-based configuration (4x)
0
9
9
9
9
Automatic setup (3x)
0
8
9
6
6
Ease of use (2x)
3
7
8
6
8
Open Source (2x)
9
9
9
6
9
Documentation (1.5x)
5
7
8
8
8
Traction (1.5x)
8
8
8
5
6
Nice to have features (0.5x)
6
7
9
4
9
Total Score
46.5
118.0
125.5
99.5
113.5
Created using Ruminate.io:
https://app.ruminate.io/d/ilZtSvZ3MYOPygfam4tZ1g
Conclusion
¶
During this research I focused primarily on three solutions:
- Crunchy Data
- Zalando
- StackGres
Coming up with an objective scoring was hard, because I had to continuously remind myself of the goal: Postgres for dev/experimental use cases.
Zalando came out as a winner with its ridiculously simple workflow and tons of customization options. There is no monitoring integrated into their solution, so that's something we'll have to do.
Crunchy Data is close second. They are in the business of running Postgres (while Zalando is an ecommerce company) which is a good reason to consider choosing it over Zalando, however the documentation of Zalando is a bit more detailed, CRDs are more readable and they are not incentivized to make add paid features to the operator.
StackGres came out as close third. They essentially built a platform for running Postgres on top of Kubernetes. Although they have CRDs, they also ship a UI that seems to be the primary interface at the moment. It's definitely worth considering if we want to let ventures create dev databases without ArgoCD. There are lots of features missing though (authentication, CRD support for creating users and databases, etc).
KubeDB is worth mentioning, although it's far behind StackGres in the fourth place. The fact that it supports several databases might be grounds for picking it if we want to support other DB engines than Postgres, but frankly, it sounds to good to be true.
To sum up:
- Zalando is slightly better at everything at the moment (except monitoring)
- Crunchy Data is built by experts
- StackGres is becoming the new rock star
Since nothing forces us to stick to the solution that we pick now, I'd just go with the winner (Zalando) and keep an eye on StackGres.
2023-08-25
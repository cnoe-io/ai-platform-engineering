User guide
¶
Redis operator
must be present on the Kubernetes cluster in order to use the service.
Ask your SRE contact if it's already available on your cluster.
Installation
¶
For all available parameters and more examples check out the
official documentation
for the Redis Operator.
The most basic Redis installation can be achieved by applying the following custom resource on the cluster:
apiVersion
:
databases.spotahome.com/v1
kind
:
RedisFailover
metadata
:
name
:
redis
spec
:
sentinel
:
replicas
:
1
redis
:
replicas
:
1
This could be part of your deployment config (eg. Helm chart) or you could apply it through ArgoCD.
Don't apply it manually unless it's absolutely necessary!
When in doubt, ask your SRE contact.
You can connect to the Redis instance from your application at
rfs-harbor-redis
on port
26379
.
It's always a good idea to have some resource limits as well:
apiVersion
:
databases.spotahome.com/v1
kind
:
RedisFailover
metadata
:
name
:
redis
spec
:
sentinel
:
replicas
:
1
resources
:
requests
:
cpu
:
100m
limits
:
memory
:
100Mi
redis
:
replicas
:
1
resources
:
requests
:
cpu
:
100m
memory
:
100Mi
limits
:
cpu
:
400m
memory
:
500Mi
Finally, you can emulate a production-ready HA environment with multiple replicas:
apiVersion
:
databases.spotahome.com/v1
kind
:
RedisFailover
metadata
:
name
:
redis
spec
:
sentinel
:
replicas
:
3
resources
:
requests
:
cpu
:
100m
limits
:
memory
:
100Mi
redis
:
replicas
:
3
resources
:
requests
:
cpu
:
100m
memory
:
100Mi
limits
:
cpu
:
400m
memory
:
500Mi
Authentication
¶
It's always a good practice to keep environments as close to each other as possible.
As a result, you might want to enable authentication, so your application is tested with Redis authentication.
The first step for enabling authentication is creating a password and a secret:
echo
-n
"password"
>
password
kubectl
create
secret
generic
redis-auth
--from-file
=
password
You might want to use Keeper and External Secrets instead.
Then enable authentication in Redis:
apiVersion
:
databases.spotahome.com/v1
kind
:
RedisFailover
metadata
:
name
:
redis
spec
:
# ...
auth
:
secretPath
:
redis-auth
2022-07-12
SRE-6685
- Deploy ADOT Collector for Organizational Metrics
¶
ADOT: AWS Distro for OpenTelemetry Collector.
SRE-6685 - Deploy ADOT Collector for Organizational Metrics
Preparation Steps (AWS)
Deployment (Helm \& ArgoCD)
Execute Change
Post-Validation
Roll-Back
Note
¶
The IAM resources can be created and automated with Terraform:
https://wwwin-github.cisco.com/eti/sre-tf-module-aws-eks/tree/main/examples/shared#eks-opentelemetry-collector-iam
. The below covers manual steps if you are not using Terraform.
Preparation Steps (AWS)
¶
Gather cluster OpenID Connect of the cluster where the ADOT Collector will be deployed
Run the below command:
oidc_id=$(aws --profile $AWS_PROFILE --region $AWS_REGION eks describe-cluster --name $CLUSTER_NAME --query "cluster.identity.oidc.issuer" --output text)
Replace the env vars with the corresponding values for your cluster and AWS account.
This OpenID Connect can also be found in the AWS Console UI in EKS > Clusters > $CLUSTER_NAME > Overview.
On a side note, the OpenID Connect could also exist in the
sre-baseapps-configs*
repository for the specific cluster in the
config.json
file.
In the AWS account where the Amazon Managed Prometheus workspace lives (currently
eticloud
), create or use an existing
OpenID Connect
identity provider for the cluster the ADOT Collector is deployed.
Go to the IAM > (Access Management) Identity providers section.
Use the OIDC endpoint from the target cluster (gathered in the previous step) as Provider URL
Click on "Get thumbprint"
Use
sts.amazonaws.com
as the Audience for the identity provider.
Create an IAM Policy for that new cluster. Each cluster uses a 1:1 cluster <-> IAM role and policy relationship (and not one IAM role+policy for all clusters) in order to reduce the possibility of issues when modifying a role/policy.
Give it a name that include the cluster's, i.e
<cluster-name>AMPIngestPolicy
. Example:
eks-dev-3-AMPIngestPolicy
.
Statement:
{
"Statement"
:
[
{
"Action"
:
[
"aps:RemoteWrite"
,
"aps:GetSeries"
,
"aps:GetLabels"
,
"aps:GetMetricMetadata"
],
"Effect"
:
"Allow"
,
"Resource"
:
"*"
}
],
"Version"
:
"2012-10-17"
}
Create a new IAM role in the AWS
eticloud
account. It will be used by each
opentelemetry-collector
in the EKS cluster it'll be running on.
Give it a name that include the cluster's, i.e
<CLUSTERNAME>AMPIngestRole
. Example:
eks-dev-3-AMPIngestRole
.
Create an IAM Role trust relationship to add a statement for the new cluster (amp: Amazon Managed Prometheus).
Example Statement (for a given cluster):
{
"Sid"
:
"EKSDEV3"
,
"Effect"
:
"Allow"
,
"Principal"
:
{
"Federated"
:
"arn:aws:iam::626007623524:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/539C5DE047401AF1E72847F1D0D3A601"
},
"Action"
:
"sts:AssumeRoleWithWebIdentity"
,
"Condition"
:
{
"StringEquals"
:
{
"oidc.eks.us-east-2.amazonaws.com/id/539C5DE047401AF1E72847F1D0D3A601:aud"
:
"sts.amazonaws.com"
,
"oidc.eks.eu-west-1.amazonaws.com/id/1FC3E6AAE2344007591C38F950A45D98:sub"
:
"system:serviceaccount:opentelemetry-collector:<cluster-name>-opentelemetry-collector"
}
}
}
Make sure to check that region is correct (this is the region of the AWS account the cluster is running on). The OIDC issuer is the string gathered during step 1 (
oidc_id
).
Attach the previously created policy to that IAM role: Permissions tab > Add Permissions > Attach policies and choose the policy for the cluster.
Deployment (Helm & ArgoCD)
¶
Create an Instantiation of opentelemetry-collector in the
baseapps-configs
repository applicable to the target cluster.
opentelemetry-collector template
Create a Pull Request for the
sre-baseapps-configs*
repository staging this change. It is recommended that the team member that reviews the change is also available as your deployment partner in the execution step.
Post a message on
Outshift Platform status
with regards to the build infra changes.
Execute Change
¶
Since these changes will impact clusters used for production, or for the development of software, a deployment partner is required prior to.
Merge the approved pull request, which will intiate the change with ArgoCD.
Monitor the ArgoCD deployment to ensure there are no errors. This will be in the
<cluster-name>-opentelemetry-collector
Application.
Post-Validation
¶
Following the ArgoCD deployment, check the pod logs to ensure there are no errors with authentication. If you find errors, double-check your
Trust Relationship
Statement above.
Check for any other errors. If errors are impacting the
opentelemetry-collector
only, try to resolve. If the errors are impacting other cluster resources, remove the collector instance from the baseapps repo.
If there are no errors, monitor the
AmazonPrometheus
datasource to see if metrics have the
etip_source_cluster
label with the newly added baseapp.
Announce in platform status that the migration is complete.
Roll-Back
¶
Remove the instance folder for
opentelemetry-collector
and set the
exclude: true
attribute in the values for the cluster the collector should not be installed on.
2023-12-15
2021 06 02 atlantis failure eticloud scratch
âââââââ
Timeline
:
Resources for eks-sre-1 were created in AWS Prod account via Atlantis, eti-infra and manifest.yaml. (Created during eks cluster creation testing).
5.27.2021
.Â Request to move eks-sre-1 from Prod to Scratch. Â (RequestÂ eks-sre-1 in Scratch account.Â
https://jira-eng-sjc4.cisco.com/jira/browse/SRE-1217
âââââââ
5.27.2021
.Assumption thatÂ Â eks-sre-1 was fully deleted in Prod.
5.27.2021
Â Modified manifest.yaml for eks-sre-1-network to reflect Scratch account.
5.27.2021
Â main.tf was modified to point to Scratch accountÂ (Argo workflow does not work for EKS) and added to a pull request.
5.27.2021
Â Atlantis ran terraform plan on a pull request.
5.27.2021
Â Atlantis errors out running the plan with 403 AccessÂ Denied Error.
5.27.2021
Â Running terraformÂ plan locally (output was not saved) using Scratch account credentials for admin (via samlapi) worked. (S3 bucketÂ terraform-state/network_eks-sre-1.tfstate)
5.27.2021
Â Terraform apply was not run locally.
**5.28.2021Â **Started running atlantis plans against other scratch clusters - eke-observability-2 did failed with same access issues.
**6.1.2021Â **ChangedÂ the name of state file fromÂ terraform-state/network_eks-sre-1.tfstate toÂ  terraform-state/scratch-network_eks-sre-1.tfstate in the branch.
**6.1.2021Â **Atlantis runs in the same PR with a new state file.Â Â Running plan in Atlantis with a different backend file name was successful, which confirms that problem wasÂ
**6.1.2021Â **Â Realized the problem was cross account related and that Atlantis.Â Â
6.3.2021
Â Solution is to delete tf state from S3:Â terraform-state/scratch-network_eks-sre-1.tfstate
6.10.21
Â **Added a better solution - using aws cli to grant full access to Prod admin user.Â **
Summary
:
Resources created with same names in two cloud accounts.
TF State file ownership.
Details:
Atlantis gets a
AccessDenied: Access Denied
    status code: 403
error while re-creating resources previously created in Prod account in Scratch account.
Example:Â
2021/05/28 18:59:52+0000 [INFO] terraform: Terraform: Successfully configured the backend "s3"! Terraform will automatically
2021/05/28 18:59:52+0000 [INFO] terraform: Terraform: use this backend unless the backend configuration changes.
2021/05/28 18:59:53+0000 [WARN] terraform: Terraform err: Error refreshing state: AccessDenied: Access Denied
2021/05/28 18:59:53+0000 [WARN] terraform: Terraform err:   status code: 403, request id: VBBVRX3RNJ94F81T, host id: Ck0DJEKQQiCYhNQwz0KR64zOGDuCxdnEQ1BfkfK4yQZ5cX3x8vIXfxEIfzBKVO/sIgn6qy5yQAk=
2021/05/28 18:59:53+0000 [EROR]
eti/eti-infra#227
: Error=: exit status 1
Upgrading modules...
Downloading git::
https://wwwin-github.cisco.com/vkozel/federated-infra.git?ref=aws-eks
for eks...
- eks in .terraform/modules/eks/modules/aws/eks
Downloading terraform-aws-modules/eks/aws 17.0.2 for eks.eks...
- eks.eks in .terraform/modules/eks.eks
- eks.eks.fargate in .terraform/modules/eks.eks/modules/fargate
- eks.eks.node_groups in .terraform/modules/eks.eks/modules/node_groups
Initializing the backend...
Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.
Error refreshing state: AccessDenied: Access Denied
    status code: 403, request id: VBBVRX3RNJ94F81T, host id: Ck0DJEKQQiCYhNQwz0KR64zOGDuCxdnEQ1BfkfK4yQZ5cX3x8vIXfxEIfzBKVO/sIgn6qy5yQAk= 754
Analysis
:
Atlantis is failing with 403 Access Denied Error due to terraform state bucket being owned by one Prod account while Scratch account is trying to write objects into it.Â
Impact
:
Atlantis fails to run terraform plans.
Resolution
:
As general practice, before moving infrastructure to a different account, make sure it is completely destroyed in the old account via Atlantis.Â
Remove remote sate from terraform from local machine:" terraform state list" command will list all terrafrorm modules; remove them one by one running: "terraform state rm ${module_name}".
Sometimes even after removing shared Terraform backendÂ Â state from a different system (a personal laptop with "terraform state rm ${module}") did not get rid of the error. The solution was to remove an object containing the backend state from a bucket form AWS.
Another way of fixing this error is to remove the object for respective backend in AWS however this will remove entire tf state:
Best workaround is to grant-full-control to a bucket for a user. as described inÂ
Example 3: Bucket owner granting permissions to objects it does not own - Amazon Simple Storage Service
(example excerpt)Â
aws s3api put-object-acl --bucket DOC-EXAMPLE-BUCKET1 --key HappyFace.jpg --grant-full-control id="AccountA-CanonicalUserID" --profile AccountBadmin
As the eticloud_scratch admin:\
aws s3api get-object-acl --bucket tfstate-eticcprod --key "terraform-state/network_eks-example-1.tfstate"
(copy Grantee ID from the output into Â $user_id)
aws s3api put-object-acl --bucket tfstate-eticcprod --key "terraform-state/network_eks-example-1.tfstate" --grant-full-control id=$user_id
6. A resolution for a problem # 2 Â -Â
TF State file ownership
Â in context of running same terraformÂ code from atlantis and from local system:
When Atlantis runs terraform to plan/create/destroy resources in any account,Â it runs it as Prod Admin. To avoid cross-account bucket access, when runningÂ Â terraformÂ locally, Â make sure to login through samplapi asÂ
Prod Account Admin
Â (similar to Atlantis behavior)
This way resource we keep resource access identical between Atlantis and local systems.
Example of samlapi login on local system:
awssamlapi --profile scratch-admin --refresh
where --profile is specified in ~/.aws/samlapi file:
~/.aws/samlapi file:
[samlapi]
mode = swipe
username =
vkozel@cisco.com
[config]
region = us-west-2
output = json
[profiles]
etic-admin = arn:aws:iam::626007623524:role/admin
scratch-admin = arn:aws:iam::380642323071:role/admin
Outstanding questions:
Reason why Atlantis always runs as Prod admin when creating resources in any accounts?
Should naming for tf states in different accounts be different?
2022-05-12
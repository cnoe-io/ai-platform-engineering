SRE-2742: Deploy eti.cisco.com to cloudfront with server-side rendering
¶
Overview
Problem
Solution
Summary of the fix:
Step 1: Create Custom Origin Request Policy
Step 2: New Cache Behavior
api/* cache behavior
_next cache behavior
Rest of the objects cache behavior
References
Overview
¶
eti.cisco.com currently is served from AWS Cloudfront where all website paths/objects are cached for optimal website performance
eti.cisco.com is refactored to
support PLG GTM website
. Refactoring includes dynamic server side rendering of
api/*
path
Problem
¶
'*'
all object cache behavior cannnot serve dynamic content
api/*
client requests need to go directly to origin without cloudfront serving those requests
Client POST requests need all headers and query params to be passed along in the origin request
By default Cloudfront verifies
1
origin using SNI
2
Cloudfront is proxying eti.cisco.com behind an origin eti-blue-a.prod.eticloud.io. Notice that the external and origin url are hosted on different domains
ET&I SRE team cannot create a TLS certificate with both subdomain.cisco.com and subdomain.eticloud.io in the same cert.
^^ Existing cache behavior
Solution
¶
Summary of the fix:
¶
Create a new Origin request policy that does not send "host" header but sends rest of the auth headers and query params to origin.
Cloudfront uses SNI
1
to verify origin when the origin request has "host" header (from the viewer request) and currently there is no way for ETI SRE team to create a TLS cert with subdomain.eticloud.io and subdomain.cisco.com as SAN.
Split origin behavior based on static and dynamic content
Step 1: Create Custom Origin Request Policy
¶
Reference: no-host-header-origin-request
Step 2: New Cache Behavior
¶
api/* cache behavior
¶
_next cache behavior
¶
Rest of the objects cache behavior
¶
References
¶
Cloudfront Origin Configuration
What is SNI?
2022-05-06
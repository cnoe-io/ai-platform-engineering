Jenkins failures
build failures
post mortem
2024-04-20; TBD; All Jenkins build failed
¶
Summary
¶
On Friday evening (CDT timezone), 19
th
/ Saturday morning (CEST timezone) 20
th
, all Jenkins builds started failing and Venture teams started reporting
they could not release to any environment.
When
¶
This incident started circa 1:11 AM CEST on Saturday 20
th
and lasted for about 2h30min.
Timeline
¶
2024-04-19
2324 CEST (Friday) - Sri Aradhyula notifies that there is a wide spread outage of Jenkins Pipeline Library. All builds seem to be affected and are failing
0020 CEST (Saturday) - Matt Shooshtari notices that metrics that should be sent to AppDynamics by the
sre-stage-metrics-exporter
are failing.
0036 CEST (Saturday) - An
urgent ticket is created
to notify the AppDynamics team of the issue.
0111 CEST - Matt opens
an incident via the Service Desk
to notify of the aforementioned incident.
0120 CEST - David and Matt join a WebEx call to start investigating the issue(s). An assumption is made about a potential file system or docker issue on the host
~0136 CEST - Having looked at a specific Jenkins host running in the P3 infrastructure (
eti-jenkins-common-xlarge-2
) in order to check if there were any disk related issues on the host, as well as a potential image layer problem
The
sre-go-helloworld
app is used to test builds
0146 CEST - A
docker system prune -a
command is run on the host, whilst the AppDynamics metric related issue got resolved, builds are still failing and display the
below error
0150 CEST -
eti-jenkins-common-xlarge-7
(another Jenkins host running in P3) is used to try a
docker pull
on the latest
sre-stage-metrics-exporter
container image, which succeeds
0155 CEST -
eti-jenkins-common-xlarge-2
is excluded from the Jenkins host pool. However, builds are still failing both on
eti-jenkins-common-xlarge-7
and
eti-jenkins-common-xlarge-2
and investigation continues, Sri realises the
sre-stage-metrics-exporter
image is based on the
sre-python-docker
image. An assumption is made that this latter image may need rebuilding
0200 CEST - Sri tries to build a fresh image of the
sre-stage-metrics-exporter
using that newly
sre-python-docker
built image:
containers.cisco.com/eti-sre/sre-python-docker:2024.04.10-e248abd-2
. This took some time as ...
Subsequent builds now succeed and the incident was resolved.
Impact
¶
System(s) impacted?
¶
Jenkins
All container builds
Teams impacted?
¶
Vowel
SRE
Analysis
¶
OpenTelemetry log snippet
¶
The first failure within a given Jenkins build included an OpenTelemetry related error:
19-Apr [14:53:43.332]  + docker image inspect --format=ignore ghcr.io/cisco-eti/sre-stage-metrics-exporter:2024.02.27-3af7c1b-9
19-Apr [14:53:43.500]  [Pipeline] sh
19-Apr [14:53:44.339]  + set +x
19-Apr [14:53:45.950]  ERROR:opentelemetry.exporter.otlp.proto.http.metric_exporter:Failed to export batch code: 402, reason: ï¿½[CIS][...] License enforcement check failed for resource appd:lic:resource:ingestion:metrics with reason out_of_tokens+
19-Apr [14:53:45.950]  )type.googleapis.com/google.rpc.BadRequest
This was resolved, but a new error appeared in the build logs:
Container layer
¶
19-Apr [17:52:44.896]  Unable to find image 'ghcr.io/cisco-eti/sre-stage-metrics-exporter:2024.02.27-3af7c1b-9' locally
19-Apr [17:52:45.821]  2024.02.27-3af7c1b-9: Pulling from cisco-eti/sre-stage-metrics-exporter
19-Apr [17:52:45.821]  8a23a9e9fc06: Already exists
...
19-Apr [17:52:45.822]  6a0e5e28d892: Pulling fs layer
...
19-Apr [17:52:45.823]  e597d7d3d9d5: Waiting
...
19-Apr [17:52:45.824]  4f4fb700ef54: Download complete
19-Apr [17:52:46.273]  664647c99dcd: Verifying Checksum
...
19-Apr [17:52:46.713]  1660f4157f50: Download complete
19-Apr [17:52:46.713]  docker: failed to register layer: open /mnt/docker/overlay2/a3d7218ab47cca967babf0a0f97bcad5723339ada6c4a689193a05303bfd54f4/committed: no such file or directory.
This led to believe there was an issue with the host's disk or a container layer.
The first failure within a given Jenkins build included an OpenTelemetry related error. Log snippet:
19-Apr [14:53:43.332]  + docker image inspect --format=ignore ghcr.io/cisco-eti/sre-stage-metrics-exporter:2024.02.27-3af7c1b-9
19-Apr [14:53:43.500]  [Pipeline] sh
19-Apr [14:53:44.339]  + set +x
19-Apr [14:53:45.950]  ERROR:opentelemetry.exporter.otlp.proto.http.metric_exporter:Failed to export batch code: 402, reason: ï¿½[CIS][...] License enforcement check failed for resource appd:lic:resource:ingestion:metrics with reason out_of_tokens+
19-Apr [14:53:45.950]  )type.googleapis.com/google.rpc.BadRequest
This was resolved, but a new error appeared in the build logs:
19-Apr [17:52:44.896]  Unable to find image 'ghcr.io/cisco-eti/sre-stage-metrics-exporter:2024.02.27-3af7c1b-9' locally
19-Apr [17:52:45.821]  2024.02.27-3af7c1b-9: Pulling from cisco-eti/sre-stage-metrics-exporter
19-Apr [17:52:45.821]  8a23a9e9fc06: Already exists
...
19-Apr [17:52:45.822]  6a0e5e28d892: Pulling fs layer
...
19-Apr [17:52:45.823]  e597d7d3d9d5: Waiting
...
19-Apr [17:52:45.824]  4f4fb700ef54: Download complete
19-Apr [17:52:46.273]  664647c99dcd: Verifying Checksum
...
19-Apr [17:52:46.713]  1660f4157f50: Download complete
19-Apr [17:52:46.713]  docker: failed to register layer: open /mnt/docker/overlay2/a3d7218ab47cca967babf0a0f97bcad5723339ada6c4a689193a05303bfd54f4/committed: no such file or directory.
This led to believe there was an issue with the host's disk or a container layer.
Takeaways
¶
Understand how builds are "assigned" to Jenkins hosts, in case a particular host is affected by an issue
Make sure everyone knows how to exclude a given Jenkins host from the host pool
GHCR (GitHub Container Registry) does not have a UI like AWS ECR.
Document the expected behavior of metric collection for Jenkins builds as well as a operator guide for the
sre-stage-metrics-exporter
2024-04-29
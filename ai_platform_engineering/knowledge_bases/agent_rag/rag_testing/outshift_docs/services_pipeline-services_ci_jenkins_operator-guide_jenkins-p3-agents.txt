jenkins agents
jenkins nodes
jenkins p3 agents
Jenkins P3 Agents
¶
Most Jenkins nodes are hosted in the EngIT P3 (OpenStack) environment.
Project:
ETI_SRE_Jenkins_Nodes
A few
"cloud-node"
are hosted in public cloud (AWS)
AWS Account:
eti-ci (009736724745)
(
us-east-1
)
Note
: these cloud-node agents were created to unblock build pipelines that require connectivity to a large and dynamic list of external endpoints
For more context, see
SRE-3278
These cloud-nodes were manually created to quickly unblock the impacted team.
SRE-3297
tracks the effort of migrating these to terraform-managed nodes.
Table of Contents
¶
Jenkins P3 Agents
Creation and automation
SSH to Jenkins nodes using private Key
Pre-requisite - Retrive SSH key from Keeper
SSH to P3 nodes
SSH to
cloud-node
nodes
SSH to Jenkins Nodes using one time password
Jenkins UI SSH config
Creation and automation
¶
Jenkins nodes are created using terraform automation
Repo:
jenkins folder under sre-tf-infra
Once the nodes are created, latest packages are installed using Ansible playbooks
Repo:
sre-build-infra-ansible
Currently, the main packages defined on ansible repository are:
docker, java, jenkins, consul, node_exporter, cadvisor, scan, osquery, splunk, quemu, webserver and otel-collector and some cleanup tasks executed as cron jobs.
otel-collector refers to OpenTelemetry Collector, more details about install context
here
Jenkins nodes are periodically (at present, every three hours) groomed/maintained by a
Jenkins job
which cleans up old files, Docker images, etc. This process is based on the Ansible playbooks mentioned above.
Once a new node is created it must be
whitelisted
by Splunk team to allow forwarding logs to
Splunk
.
SSH to Jenkins nodes using private Key
¶
See
Active Jenkins Nodes
for list of jenkins nodes.
Pre-requisite - Retrive SSH key from Keeper
¶
Access Jenkins SSH key which is currently in Keeper
here
export
VAULT_ADDR
=
https://keeper.cisco.com
vault
kv
get
-namespace
=
eticloud/eticcprod
-field
=
private_key
secret/eticcprod/infra/runon/ETI_SRE_Jenkins_Nodes/master_key
>
jenkins.key
Copy Jenkins SSH key to ~/.ssh and set permissions to 600
cp
jenkins.key
~/.ssh/jenkins.key
chmod
600
~/.ssh/jenkins.key
SSH to P3 nodes
¶
Connect to the Jenkins node using
ssh
-i
~/.ssh/jenkins.key
ubuntu@eti-jenkins-common-large-1
SSH to
cloud-node
nodes
¶
Use the same jenkins nodes master key for P3 nodes
User:
ubuntu
FQDN Domain:
ci.eticloud.io
(append to cloud-node agent name)
ssh
-i
~/.ssh/jenkins.key
ubuntu@eti-cloud-node-1.ci.eticloud.io
SSH to Jenkins Nodes using one time password
¶
SRE team enabled SSH access to Jenkins nodes using
One Time Password
capability using vault
Check the documentation
here
Jenkins UI SSH config
¶
Actually we are facing some issues on our SSH config for jenkins nodes as you can see on screenshot:
Config should be like this:
In order to resolve this issue:
When launch roles/jenkins.yaml we should export JENKINS_TOKEN (on jenkinsfile level) otherwise "-password" will be empty ==> ssh config will fail during update
SSH Launch config has 2 implementations of SSH launchers (it depends on plugin used : cloudBees or not): we should use hudson.plugins.sshslaves.SSHLauncher instead of com.cloudbees.jenkins.plugins.sshslaves.SSHLauncher
"Launch build agents via SSH (Non-blocking I/O)" refer to the SSHLauncher implementation of the CloudBees SSH Build Agents plugin
"Launch build agents via SSH" refer to the SSHLauncher implementation of the SSH Build Agents plugin
  more details here
Create a Permanent Agent from Groovy Console
PR
jira
2023-09-21
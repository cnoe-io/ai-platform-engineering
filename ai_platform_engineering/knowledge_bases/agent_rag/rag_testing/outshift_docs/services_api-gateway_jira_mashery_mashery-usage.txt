How to use/test JIRA Mashery API with Postman Collection
¶
1. Import Postman collection
Click on import
Drag and drop Cisco_JIRA_Mashery_Prod.json
2. Setup MASHERY_PROD environment
Create New Environment
Add environment variables
3. Run Postman request
Generate Access Token
Select API request
Pre-request script automates token creation
Pre-requisite:
Install Postman
1. Import Postman collection
¶
Click on import
¶
Drag and drop
Cisco_JIRA_Mashery_Prod.json
¶
2. Setup MASHERY_PROD environment
¶
Create New Environment
¶
Add environment variables
¶
3. Run Postman request
¶
Generate Access Token
¶
Note:
Mashery OAuth Client Credentials are stored in vault
Cisco SSO URLs
- Dev:
https://cloudsso-test.cisco.com/as/token.oauth2
- Prod:
https://cloudsso.cisco.com/as/token.oauth2
Equivalent curl request
curl
--location
--request
POST
'https://cloudsso.cisco.com/as/token.oauth2?grant_type=&client_id=<CLIENT_ID>&client_secret=<CLIENT_SECRET>'
Select API request
¶
Mashery JIRA API URLs
- Dev:
https://api.cisco.com/api
- Prod:
https://api-dev.cisco.com/api
Equivalent curl request
curl --location --request GET 'https://api.cisco.com/api/jira/rest/api/2/issue/SRE-2135' \
--header 'Authorization: Bearer <ACCESS_TOKEN>'
Pre-request script automates token creation
¶
pm.sendRequest({
url:  pm.environment.get("OAUTH_URL") + '?grant_type=client_credentials&client_id=' + pm.environment.get("OAUTH_CLIENT_ID") + '&client_secret=' + pm.environment.get("OAUTH_CLIENT_SECRET"),
method: 'POST'
}, function (err, res) {
console.log(res)
pm.globals.set("OAUTH_TOKEN", res.json().access_token);
});
2023-08-29
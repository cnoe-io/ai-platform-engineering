jira
prioritization
ETI SRE Prioritization
¶
Goals
Jira Usage Guide
Releases
Initiative
Portfolio Feature
Epic
Stories/Tasks
Bug
Goals
¶
Capture and groom current team priorities with well-defined scope
These are non-static; tool needs to support mutable relationships of captured efforts
Identify major dependencies/blockers to inform prioritization
Define Platform Road Map (upcoming priorities)
Recognize team accomplishments through continuous progress
Bundle related efforts under "releases" to capture the
aggregate
impact of incremental improvements
Jira Usage Guide
¶
There
will
be overlapping concerns when categorizing an item; when there are, consider the
primary
reason for the identified item
Use the
blocks
/
is blocked by
relationship to capture
critical
dependencies between items
Use the
Fix Version/s
field to identify the target
Release
for Epics
Use the
Target start
/
Target end
fields (in
SRE Platform Plan view
) to capture estimated timelines for Stories and Tasks
Releases
¶
We will leverage Jira
Releases
to define and track the ETI Platform Road Map.
A "Release" (e.g.,
ETI-PLATFORM-3.1
) roughly maps to a quarter timeline.
Epic-level Jiras should be assigned a target Release (denoted by the
Fix Version/s
field)
Mapping Epics to specific Releases enables us to quickly see the body of work that are currently in-scope as well as upcoming work that we've identified to be tackled later
Individual Stories/Tasks that are associated with an Epic do not need not be assigned a Release (reduce paperwork)
The assigned Release may change if/when priorities change
Initiative
¶
High-level grouping of focus areas:
ETI Platform
- efforts focused on building and improving the ETI common platform
ETI Security
- efforts focused on ensuring security for ETI products and platform
ETI Ventures
- efforts focused on meeting venture-specific needs
Run the business
- one-off tasks required to "keep the lights on"
key distinction from any of the other efforts:
immediate must-do tasks that do not produce additional technical leverage
ongoing efforts without pre-defined scope and definition of "Done" (e.g.: On-Call)
Portfolio Feature
¶
Provides a timeline view and historical context for ongoing efforts around long-lived services/components provided/created by SRE team.
Epic
¶
Concrete efforts with clearly defined scope, criteria for "Done", and target "release" (which may change). Tech leads should identify and prioritize Epic-level endeavors.
Stories/Tasks
¶
Used to break down Epic-level effort into smaller chunks of work. Epic owners should own creating and managing all stories/tasks related to their epic.
Bug
¶
Used to capture discovered defects
Component
field should identify the impacted functionality/service/solution.
Fix Version/s
field should identify the Release in which the issue was fixed.
2023-01-20
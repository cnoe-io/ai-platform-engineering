argocd autoscaling
argocd karpenter autoscaling
argocd karpenter setup
ArgoCD AutoScaling
¶
Note
5/13/2024: This document is a first draft.
ArgoCD can be setup to both horizontally and vertically scale within the cluster
HPA
PodDisruptionBudgets
ResourceLimits
NodeSelector
Tolerations
ArgoCD Karpenter Setup and Troubleshooting
¶
Setting Karpenter on older clusters without automation can be tricky
Create IAM roles
¶
Example IAM roles
:
eti-gitops-genai-1
Update EKS aws-auth
¶
This snippet should in your aws-auth configmap
- "groups":
- "system:bootstrappers"
- "system:nodes"
"rolearn": "arn:aws:iam::009736724745:role/KarpenterNodeRole-eks-gitops-genai-1"
"username": "system:node:{{EC2PrivateDNSName}}"
Example Full config
:
apiVersion: v1
data:
mapRoles: |
- "groups":
- "system:bootstrappers"
- "system:nodes"
"rolearn": "arn:aws:iam::009736724745:role/eks-gitops-genai-1-private-ng-role-20230913160743150800000014"
"username": "system:node:{{EC2PrivateDNSName}}"
- "groups":
- "system:bootstrappers"
- "system:nodes"
"rolearn": null
"username": "system:node:{{EC2PrivateDNSName}}"
- "groups":
- "system:masters"
"rolearn": "arn:aws:iam::009736724745:role/admin"
"username": "admin"
- "groups":
- "view"
"rolearn": "arn:aws:iam::009736724745:role/sre-audit-ro"
"username": "sre-audit-ro"
- "groups":
- "view"
"rolearn": "arn:aws:iam::009736724745:role/devops"
"username": "devops"
- "groups":
- "system:bootstrappers"
- "system:nodes"
"rolearn": "arn:aws:iam::009736724745:role/KarpenterNodeRole-eks-gitops-genai-1"
"username": "system:node:{{EC2PrivateDNSName}}"
kind: ConfigMap
metadata:
creationTimestamp: "2023-09-13T16:08:42Z"
name: aws-auth
namespace: kube-system
Install Karpenter
¶
Note
Karpenter is not installed by default. It needs to be explictly enabled in
values.yaml
karpenter:
namespace: karpenter
version: 0.33.0-2
syncGroup: "5"
exclude: false
Example Karpenter Config
:
eks-gitops-genai-1/karpenter/values.yaml
Verify Karpeter is working
¶
cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Pod
metadata:
name: ubuntu-test-karpenter-default-nodepool
namespace: default
spec:
containers:
- command:
- "sleep"
- "604800"
image: ubuntu:latest
imagePullPolicy: Always
name: ubuntu
resources:
limits:
cpu: 100m
memory: 512Mi
requests:
cpu: 10m
memory: 64Mi
nodeSelector:
applications: default
priority: 0
restartPolicy: Always
tolerations:
- effect: NoSchedule
key: outshift.ai/default
operator: Exists
EOF
What to check
¶
check
kubectl get nodeclaim -A
check Karpenter pod logs that a new node is getting created
check if the test ubuntu pod has been scheduled and in
Running
state
HPA Setup
¶
Example Reference:
eks-gitops-genai-1 HPA
Caution
When HPA is setup
replicas: x
needs to remove from Deployment/Statefulset. Use the following
Patches
patches:
- target:
group: apps
version: v1
kind: StatefulSet
name: argocd-application-controller
patch: |-
- op: remove
path: /spec/replicas
PDB Setup
¶
Example Reference:
eks-gitops-genai-1 HPA
Resource-Limits/Node-Selector/Karpenter
¶
Caution
Resources Limits have to be defined for a Deployment/Statefulset for Karpenter to work
Example Resource Request/Limits:
eks-gitops-genai-1 Overlays
Verify all pods
¶
Verify all pods are up and running
kubectl get pods -A
Verify HPA
kubectl get hpa -A
â¦ â¯ kubectl get hpa -A
NAMESPACE   NAME                               REFERENCE                                     TARGETS            MINPODS   MAXPODS   REPLICAS   AGE
argocd      argocd-application-controller      StatefulSet/argocd-application-controller     61%/90%, 42%/75%   2         15        3          69d
argocd      argocd-applicationset-controller   Deployment/argocd-applicationset-controller   32%/75%, 42%/75%   2         15        2          69d
argocd      argocd-repo-server                 Deployment/argocd-repo-server                 68%/90%, 17%/75%   3         15        4          69d
argocd      argocd-server                      Deployment/argocd-server                      21%/75%, 18%/75%   3         10        3          86d
- Verify PodDisruption Budget
kubectl get pdb -A
â¦ â¯ kubectl get pdb -A
NAMESPACE             NAME                                     MIN AVAILABLE   MAX UNAVAILABLE   ALLOWED DISRUPTIONS   AGE
argocd                argocd-application-controller-pdb        3               N/A               0                     102m
argocd                argocd-applicationset-controller-pdb     3               N/A               0                     102m
argocd                argocd-dex-server-pdb                    1               N/A               0                     102m
argocd                argocd-notifications-controller-pdb      1               N/A               0                     102m
argocd                argocd-repo-server-pdb                   1               N/A               3                     102m
argocd                argocd-server-pdb                        1               N/A               2                     102m
canary-test-private   eks-gitops-genai-1-canary-test-private   1               N/A               0                     152d
karpenter             karpenter                                N/A             1                 1                     11d
kube-system           coredns                                  N/A             1                 1                     242d
kube-system           ebs-csi-controller                       N/A             1                 1                     242d
- Verify Karpenter Nodeclaims
kubectl get nodeclaim -A
- Verify Karpenter EC2NodeClasses
kubectl get ec2nc -A
- Verify Karpenter Nodepools
kubectl get nodepools -A
2024-05-14
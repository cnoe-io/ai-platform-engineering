CCF-CEK-01.01
CCF-CEK-02.01
CCF-CEK-02.02
CCF-CEK-03.02
CCF-CEK-03.03
CCF-CEK-03.05
Cryptography, Encryption, and Key Management
¶
Key Owner Acknowledgement
¶
CCF: CEK-01.01
During onboarding and once a year, the entire ETI SRE team will formally acknowledge that they are responsible that they know and understand
key management procedures
.
Those official acknowledgements are documented in this
here
. Each user should acknowledge via their own commit and Pull Request so their acknowledgement can be verified by
git blame
.
The ETI SRE team will ensure that the Venture has a methodology for acknowledgment as well.
Key Management Procedures
¶
CCF: CEK-02.01
Key Management Procedures and generated keys will be reviewed quarterly.
Generating Keys
¶
Automation
Our automated systems generate keys that:
Use the RSA algorhithm.
Are 4096 bits in length.
EKS Reference
Manually created keys should be the same as keys created by automation.
Key Storage
¶
All cryptographic keys, whether created manually or via automation, should be stored in
Keeper
or by AWS in KMS. All keys should be versioned, if possible.
Key Distribution
¶
Cryptographic keys that end users (whether human or automated) access, should only be retrieved from
Keeper
.
More information here
.
Keys used solely in AWS should only be accessible to the ETI SRE team.
Key Rotation
¶
Cryptographic keys should be rotated every quarter prior to the quarterly audit.
Confirmation
¶
The ET&I SRE team will confirm with ventures they are following these guidelines or defining their own.
Key Certificate Authorities
¶
CCF: CEK-02.02
Public keys certificates should be generated by:
sslcerts.cisco.com
AWS Certificate Management
Cloudfront Terrafrom code example
The ETI SRE team will confirm with Ventures that they are not using alternate Key Certificate Authorities.
Let's Encrypt
is used by
cert-manager
in our kubernetes clusters.
Cryptographic Algorithms
¶
CCF: CEK-03.02
Algorithms
¶
The SRE team does not use
Cisco Common Security Modules
The SRE team uses SSH keypairs created by the RSA cryptosystem with 4096 bits.
VPC Bastion keypair
EC2 instance keypair
Manually created key pairs created for end users follow the same standard.
The ETI SRE team will confirm with Ventures what Cryptographic Algorithms they are using.
Encryption at Rest
¶
Any data store implemented by the ETI SRE team is encrypted at rest.
Relational data store encryption
¶
The public RDS Terraform module we customize defaults to encrypted storage and we do not modify that value.
Public RDS module link
sre-tf-aws-module-rds
Object storage encryption
¶
Object storage in AWS is in Simple Storage Service (S3). The SRE team automatically encrypts S3 buckets via our custom S3 module.
sre-tf-module-aws-s3 bucket encryption
Kubernetes encryption
¶
Envelope encryption
¶
Envelope encryption (for encryption of Kubernetes secrets) is enabled in the ETI SRE team's custom EKS module.
However, the latest version of that EKS module is not yet deployed to our Production clusters.
Envelope encryption will continue to be enabled as a part of our regular side-grade process.
Kubernetes node volume encryption
¶
The EBS volumes nodes in the Kubernetes cluster are encrypted.
sre-tf-module-aws-eks private node group encryption
sre-tf-module-aws-eks public node group encryption
Kuberentes Persistent Volume Claim encryption
¶
The ETI SRE team does not currently enforce standards on encryption of Persistent Volume Claims.
Encryption in Transit
¶
All communications into and out of the Platform will use TLS and encryption.
There is currently no enforcement of secure communications internal to the Platform.
The ETI SRE team will identify potential unsecured connections as a part of the CSDL assessment process.
Known unenforced secure connections
¶
Production RDS has TLS enabled for client connections, but is not enforced.
Secure communications is possible within a kubernetes cluster, but is not enforced.
Random Number Generator Algorithms
¶
CCF: CEK-03.05
The ETI SRE team does not currently employ Random Number Generators in production.
Secret and private key storage
¶
CCF: CEK-04.01
Secret and private key storage should only occur in
Keeper
.
More information here
.
The ETI SRE team will confirm with Ventures what secret and private key storage methodology when during the initial CSDL consultation between the ETI SRE team and the Venture as well as during the regularly schedule CSDL reassessments.
2024-03-03
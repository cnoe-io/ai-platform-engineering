Jenkins Access Control with AWS Assumed Role Secrets Engine
¶
Summary
Context
Solution
Summary
¶
This page describes security improvement for Jenkins access to AWS that leverage Vault's
assumed_role
AWS secrets engine.
Context
¶
Investigation into
SRE-1976
revealed that build jobs were intermittently failing after a
change
was rolled out to sre-pipeline-library to default to dynamically generated IAM user's credentials (via Vault's
iam-user AWS secrets engine
) for AWS logins. 
This was done to improve security in Jenkins by creating ephemeral credentials during build jobs that require authenticating against AWS (e.g.
ecr
login to push new images), rather than using long-lived credentials of a static IAM user with wide access to AWS. However, build jobs with many parallel jobs started failing intermittently when this change was rolled out because multiple IAM user creations were being triggered simultaneously for each run (for example, the
AppN Backyards/SMM job
)
The quick fix was to revert back to the previous static IAM user auth mechanism (after rotating its keys) to prevent more build failures, but this is clearly a regression in security. A better solution that avoids AWS's rate-limit for IAM user creation without sacrificing security posture in Jenkins is needed.
Solution
¶
To address the IAM user creation failures and security concerns raise above, we will leverage Vault's
assumed_role
AWS secrets engine. The
assumed_role
secrets engine invokes the AWS
AssumeRole API
to fetch temporary credentials and session token, thereby bypassing IAM user creation rate-limit altogether. 
Since the fetched tokens are tied to access policies associated with a specific IAM role, we can improve access control in Jenkins by defining multiple roles with finer-grained access policies. 
For example, a proof-of-concept of this mechanism was implemented with a new
jenkins-ecr-push-role
IAM role whose access is restricted to
ecr
, as opposed to the broad, generalized access to many AWS services that the pre-existing jenkins users have.
2023-08-25
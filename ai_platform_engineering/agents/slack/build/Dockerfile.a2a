# ---------- Stage 1: Build dependencies ----------
FROM python:3.13-slim AS builder

# Install system dependencies and uv in one layer
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    && pip install uv \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy only the necessary directories for the slack agent
COPY --chown=root:root utils /app/ai_platform_engineering/utils/
COPY --chown=root:root agents/slack /app/ai_platform_engineering/agents/slack/

# Set working directory to the slack agent
WORKDIR /app/ai_platform_engineering/agents/slack

# Install dependencies into venv (no dev deps)
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --no-dev

# ---------- Stage 2: Final runtime image ----------
FROM python:3.13-slim

# Install only runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create appuser in final image
RUN groupadd -r appuser && useradd -r -g appuser -u 1001 -m appuser

WORKDIR /app/ai_platform_engineering/agents/slack

# Set env vars for uv & PATH
ENV UV_PROJECT_ENVIRONMENT=/app/ai_platform_engineering/agents/slack/.venv \
    PATH="/app/ai_platform_engineering/agents/slack/.venv/bin:${PATH}" \
    PYTHONPATH="/app:${PYTHONPATH}" \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1

# Copy venv & code from builder (maintain directory structure)
COPY --from=builder --chown=appuser:appuser /app /app

USER appuser

EXPOSE 8000

CMD ["python", "-m", "agent_slack", "--host", "0.0.0.0", "--port", "8000"]

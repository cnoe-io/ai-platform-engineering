# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

"""Tools for /api-public/v2/user operations"""

import logging
from typing import Dict, Any, Optional
from ..api.client import make_api_request, assemble_nested_body
#from mcp_victorops_mcpapi.api.client import make_api_request, assemble_nested_body

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger("mcp_tools")


async def get_api_public_v2_user(param_email: Optional[str] = None) -> Dict[str, Any]:
    """
        List users

        OpenAPI Description:
            Get a list of users for your organization. Optionally, search for users by email address.

    This API may be called a maximum of 2 times per second.


        Args:

            param_email (str): An email address with which to search for users


        Returns:
            Dict[str, Any]: The JSON response from the API call.

        Raises:
            Exception: If the API request fails or returns an error.
    """
    logger.debug("Making GET request to /api-public/v2/user")

    params = {}
    data = {}

    if param_email is not None:
        params["email"] = str(param_email).lower() if isinstance(param_email, bool) else param_email

    flat_body = {}
    data = assemble_nested_body(flat_body)

    success, response = await make_api_request("/api-public/v2/user", method="GET", params=params, data=data)

    if not success:
        logger.error(f"Request failed: {response.get('error')}")
        return {"error": response.get("error", "Request failed")}
    return response

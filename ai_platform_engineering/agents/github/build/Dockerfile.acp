FROM ghcr.io/sriaradhyula/acp/wfsrv:latest

# Set the working directory
WORKDIR /opt/agent-workflow-server

# Install Docker CLI
RUN apt-get update && \
    apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    lsb-release && \
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
    echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \
    $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    apt-get update && \
    apt-get install -y docker-ce-cli && \
    rm -rf /var/lib/apt/lists/*

# Configure Poetry to NOT create a new virtualenv but use the existing one
RUN poetry config virtualenvs.create false

# Copy the agent source directory to the container
COPY . /opt/agent_src

COPY ./agent_github/protocol_bindings/acp_server/agent.json /opt/agent_src/agent_github/manifest.json

# Print which Python is being used
RUN which python

# Activate the virtual environment
ENV VIRTUAL_ENV=/opt/agent-workflow-server/.venv
ENV PATH="$VIRTUAL_ENV/bin:$PATH"
RUN . /opt/agent-workflow-server/.venv/bin/activate || echo "Virtual environment not found"

# Change to the agent source directory and install the package
WORKDIR /opt/agent_src
RUN poetry install --no-interaction

# Return to the workflow server directory
WORKDIR /opt/agent-workflow-server

# Print where the package was installed
RUN poetry show -v && pip list

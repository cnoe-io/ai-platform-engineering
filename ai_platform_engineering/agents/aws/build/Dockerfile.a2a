# ---------- Stage 1: Build dependencies ----------
FROM python:3.13-slim AS builder

# Install system dependencies and uv in one layer
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    && pip install uv \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy necessary directories for the build
COPY --chown=root:root ./ai_platform_engineering/__init__.py /app/ai_platform_engineering/
COPY --chown=root:root ./ai_platform_engineering/utils /app/ai_platform_engineering/utils/
COPY --chown=root:root ./ai_platform_engineering/agents/aws /app/ai_platform_engineering/agents/aws/

# Set working directory to the AWS agent
WORKDIR /app/ai_platform_engineering/agents/aws

# Create README.md if not present (due to .dockerignore)
RUN [ ! -f "README.md" ] && echo "# AWS Agent" > README.md || true

# Install dependencies into venv (no dev deps)
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --no-dev

# Pre-cache all AWS MCP servers to avoid download on first run
# Run them without cache mount so they persist in the image
RUN uvx awslabs.eks-mcp-server@0.1.15 --help > /dev/null 2>&1 || true && \
    uvx awslabs.ecs-mcp-server@latest --help > /dev/null 2>&1 || true && \
    uvx awslabs.iam-mcp-server@latest --help > /dev/null 2>&1 || true && \
    uvx awslabs.cost-explorer-mcp-server@latest --help > /dev/null 2>&1 || true && \
    uvx awslabs.cloudtrail-mcp-server@latest --help > /dev/null 2>&1 || true && \
    uvx awslabs.cloudwatch-mcp-server@latest --help > /dev/null 2>&1 || true && \
    cp -r /root/.cache/uv /tmp/uv-cache 2>/dev/null || mkdir -p /tmp/uv-cache

# ---------- Stage 2: Final runtime image ----------
FROM python:3.13-slim

# Install only runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create appuser in final image
RUN groupadd -r appuser && useradd -r -g appuser -u 1001 -m appuser

WORKDIR /app/ai_platform_engineering/agents/aws

# Set env vars for uv & PATH
ENV UV_PROJECT_ENVIRONMENT=/app/ai_platform_engineering/agents/aws/.venv \
    PATH="/app/ai_platform_engineering/agents/aws/.venv/bin:${PATH}" \
    PYTHONPATH="/app:/app/ai_platform_engineering/agents/aws:${PYTHONPATH}" \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1

# Copy venv & code from builder (maintain directory structure)
COPY --from=builder --chown=appuser:appuser /app /app

# Copy pre-cached uv packages to appuser's cache directory
COPY --from=builder --chown=appuser:appuser /tmp/uv-cache /home/appuser/.cache/uv

# Create startup script for the AWS agent
RUN echo '#!/bin/sh\n\
echo "Starting AWS agent..."\n\
exec python -m agent_aws --host 0.0.0.0 --port 8000' > /app/start.sh && chmod +x /app/start.sh

USER appuser

EXPOSE 8000

CMD ["/app/start.sh"]


# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

"""Tools for /pages/{id}/classification-level/reset operations"""

import logging
from typing import Dict, Any, Optional, List
from pydantic import BaseModel
from agent_confluence.protocol_bindings.mcp_server.mcp_confluence.api.client import make_api_request

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger("mcp_tools")


async def post_page_classification_level(path_id: int) -> Dict[str, Any]:
    """
    Reset page classification level

    OpenAPI Description:
        Resets the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)
for a specific page for the space 
[default classification level](https://support.atlassian.com/security-and-access-policies/docs/what-is-a-default-classification-level/).

**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
'Permission to access the Confluence site ('Can use' global permission) and permission to view the page.

    Args:
    
        path_id (int): The ID of the page for which classification level should be updated.
    

    Returns:
        Dict[str, Any]: The JSON response from the API call.

    Raises:
        Exception: If the API request fails or returns an error.
    """
    logger.debug("Making POST request to /pages/{id}/classification-level/reset")

    params = {}
    data = {}
      

      

    success, response = await make_api_request(
        f"/pages/{path_id}/classification-level/reset",
        method="POST",
        params=params,
        data=data
    )

    if not success:
        logger.error(f"Request failed: {response.get('error')}")
        return {"error": response.get('error', 'Request failed')}
    return response


# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

"""Tools for /pages/{id}/custom-content operations"""

import logging
from typing import Dict, Any, Optional, List
from pydantic import BaseModel
from agent_confluence.protocol_bindings.mcp_server.mcp_confluence.api.client import make_api_request

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger("mcp_tools")


async def get_custom_content_by_type_in_page(path_id: int, param_type: str, param_sort: str = None, param_cursor: str = None, param_limit: int = None, param_body_format: str = None) -> Dict[str, Any]:
    """
    Get custom content by type in page

    OpenAPI Description:
        Returns all custom content for a given type within a given page. The number of results is limited by the `limit` parameter and additional results (if available)
will be available through the `next` URL present in the `Link` response header.

**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
Permission to view the custom content, the container of the custom content (page), and the corresponding space.

    Args:
    
        path_id (int): The ID of the page for which custom content should be returned.
    
        param_type (str): The type of custom content being requested. See: https://developer.atlassian.com/cloud/confluence/custom-content/ for additional details on custom content.
    
        param_sort (str): Used to sort the result by a particular field.
    
        param_cursor (str): Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results.
    
        param_limit (int): Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results.
    
        param_body_format (str): The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.

Note: If the custom content body type is `storage`, the `storage` and `atlas_doc_format` body formats are able to be returned. If the custom content body type is `raw`, only the `raw` body format is able to be returned.
    

    Returns:
        Dict[str, Any]: The JSON response from the API call.

    Raises:
        Exception: If the API request fails or returns an error.
    """
    logger.debug("Making GET request to /pages/{id}/custom-content")

    params = {}
    data = {}
       
    params["type"] = param_type   
    params["sort"] = param_sort   
    params["cursor"] = param_cursor   
    params["limit"] = param_limit   
    params["body-format"] = param_body_format  

                

    success, response = await make_api_request(
        f"/pages/{path_id}/custom-content",
        method="GET",
        params=params,
        data=data
    )

    if not success:
        logger.error(f"Request failed: {response.get('error')}")
        return {"error": response.get('error', 'Request failed')}
    return response

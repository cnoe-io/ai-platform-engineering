# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

"""Pydantic models for log-related operations"""

from pydantic import BaseModel, Field
from typing import List


class LogResult(BaseModel):
    """Model for individual log result entry."""
    content: str = Field(..., description="Log content message")
    timeStamp: str = Field(..., description="Timestamp in ISO format")
    last: bool = Field(False, description="Whether this is the last log entry")
    timeStampStr: str = Field(..., description="Detailed timestamp string")
    podName: str = Field(..., description="Name of the pod")


class LogResponse(BaseModel):
    """Model for the complete log response."""
    result: LogResult = Field(..., description="Log result data")


class ParsedLogEntry(BaseModel):
    """Model for parsed log entry."""
    content: str = Field(..., description="Log content message")
    timestamp: str = Field(..., description="Timestamp in ISO format")
    timestamp_str: str = Field(..., description="Detailed timestamp string")
    pod_name: str = Field(..., description="Name of the pod")
    last: bool = Field(False, description="Whether this is the last log entry")


class ProcessedLogs(BaseModel):
    """Model for processed logs response."""
    success: bool = Field(..., description="Whether the operation was successful")
    parsed_logs: List[ParsedLogEntry] = Field(..., description="List of parsed log entries")
    concatenated_logs: str = Field(..., description="Concatenated log content")
    total_logs: int = Field(..., description="Total number of log entries")
    raw_response: str = Field(..., description="Original raw response")

# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

"""Tools for /api/v1/applications/{application.metadata.name} operations"""

import logging
from typing import Dict, Any, List
from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.api.client import make_api_request, assemble_nested_body

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger("mcp_tools")


async def application_service__update(
    path_application_metadata_name: str,
    body_metadata_annotations: Dict[str, Any] = None,
    body_metadata_creationTimestamp: str = None,
    body_metadata_deletionGracePeriodSeconds: int = None,
    body_metadata_deletionTimestamp: str = None,
    body_metadata_finalizers: List[str] = None,
    body_metadata_generateName: str = None,
    body_metadata_generation: int = None,
    body_metadata_labels: Dict[str, Any] = None,
    body_metadata_managedFields: List[str] = None,
    body_metadata_name: str = None,
    body_metadata_namespace: str = None,
    body_metadata_ownerReferences: List[str] = None,
    body_metadata_resourceVersion: str = None,
    body_metadata_selfLink: str = None,
    body_metadata_uid: str = None,
    body_operation_info: List[str] = None,
    body_operation_initiatedBy_automated: bool = None,
    body_operation_initiatedBy_username: str = None,
    body_operation_retry_backoff_duration: str = None,
    body_operation_retry_backoff_factor: int = None,
    body_operation_retry_backoff_maxDuration: str = None,
    body_operation_retry_limit: int = None,
    body_operation_sync_autoHealAttemptsCount: int = None,
    body_operation_sync_dryRun: bool = None,
    body_operation_sync_manifests: List[str] = None,
    body_operation_sync_prune: bool = None,
    body_operation_sync_resources: List[str] = None,
    body_operation_sync_revision: str = None,
    body_operation_sync_revisions: List[str] = None,
    body_operation_sync_source_chart: str = None,
    body_operation_sync_source_directory_exclude: str = None,
    body_operation_sync_source_directory_include: str = None,
    body_operation_sync_source_directory_jsonnet_extVars: List[str] = None,
    body_operation_sync_source_directory_jsonnet_libs: List[str] = None,
    body_operation_sync_source_directory_jsonnet_tlas: List[str] = None,
    body_operation_sync_source_directory_recurse: bool = None,
    body_operation_sync_source_helm_apiVersions: List[str] = None,
    body_operation_sync_source_helm_fileParameters: List[str] = None,
    body_operation_sync_source_helm_ignoreMissingValueFiles: bool = None,
    body_operation_sync_source_helm_kubeVersion: str = None,
    body_operation_sync_source_helm_namespace: str = None,
    body_operation_sync_source_helm_parameters: List[str] = None,
    body_operation_sync_source_helm_passCredentials: bool = None,
    body_operation_sync_source_helm_releaseName: str = None,
    body_operation_sync_source_helm_skipCrds: bool = None,
    body_operation_sync_source_helm_skipSchemaValidation: bool = None,
    body_operation_sync_source_helm_skipTests: bool = None,
    body_operation_sync_source_helm_valueFiles: List[str] = None,
    body_operation_sync_source_helm_values: str = None,
    body_operation_sync_source_helm_valuesObject_raw: str = None,
    body_operation_sync_source_helm_version: str = None,
    body_operation_sync_source_kustomize_apiVersions: List[str] = None,
    body_operation_sync_source_kustomize_commonAnnotations: Dict[str, Any] = None,
    body_operation_sync_source_kustomize_commonAnnotationsEnvsubst: bool = None,
    body_operation_sync_source_kustomize_commonLabels: Dict[str, Any] = None,
    body_operation_sync_source_kustomize_components: List[str] = None,
    body_operation_sync_source_kustomize_forceCommonAnnotations: bool = None,
    body_operation_sync_source_kustomize_forceCommonLabels: bool = None,
    body_operation_sync_source_kustomize_ignoreMissingComponents: bool = None,
    body_operation_sync_source_kustomize_images: List[str] = None,
    body_operation_sync_source_kustomize_kubeVersion: str = None,
    body_operation_sync_source_kustomize_labelIncludeTemplates: bool = None,
    body_operation_sync_source_kustomize_labelWithoutSelector: bool = None,
    body_operation_sync_source_kustomize_namePrefix: str = None,
    body_operation_sync_source_kustomize_nameSuffix: str = None,
    body_operation_sync_source_kustomize_namespace: str = None,
    body_operation_sync_source_kustomize_patches: List[str] = None,
    body_operation_sync_source_kustomize_replicas: List[str] = None,
    body_operation_sync_source_kustomize_version: str = None,
    body_operation_sync_source_name: str = None,
    body_operation_sync_source_path: str = None,
    body_operation_sync_source_plugin_env: List[str] = None,
    body_operation_sync_source_plugin_name: str = None,
    body_operation_sync_source_plugin_parameters: List[str] = None,
    body_operation_sync_source_ref: str = None,
    body_operation_sync_source_repoURL: str = None,
    body_operation_sync_source_targetRevision: str = None,
    body_operation_sync_sources: List[str] = None,
    body_operation_sync_syncOptions: List[str] = None,
    body_operation_sync_syncStrategy_apply_force: bool = None,
    body_operation_sync_syncStrategy_hook_syncStrategyApply_force: bool = None,
    body_spec_destination_name: str = None,
    body_spec_destination_namespace: str = None,
    body_spec_destination_server: str = None,
    body_spec_ignoreDifferences: List[str] = None,
    body_spec_info: List[str] = None,
    body_spec_project: str = None,
    body_spec_revisionHistoryLimit: int = None,
    body_spec_source_chart: str = None,
    body_spec_source_directory_exclude: str = None,
    body_spec_source_directory_include: str = None,
    body_spec_source_directory_jsonnet_extVars: List[str] = None,
    body_spec_source_directory_jsonnet_libs: List[str] = None,
    body_spec_source_directory_jsonnet_tlas: List[str] = None,
    body_spec_source_directory_recurse: bool = None,
    body_spec_source_helm_apiVersions: List[str] = None,
    body_spec_source_helm_fileParameters: List[str] = None,
    body_spec_source_helm_ignoreMissingValueFiles: bool = None,
    body_spec_source_helm_kubeVersion: str = None,
    body_spec_source_helm_namespace: str = None,
    body_spec_source_helm_parameters: List[str] = None,
    body_spec_source_helm_passCredentials: bool = None,
    body_spec_source_helm_releaseName: str = None,
    body_spec_source_helm_skipCrds: bool = None,
    body_spec_source_helm_skipSchemaValidation: bool = None,
    body_spec_source_helm_skipTests: bool = None,
    body_spec_source_helm_valueFiles: List[str] = None,
    body_spec_source_helm_values: str = None,
    body_spec_source_helm_valuesObject_raw: str = None,
    body_spec_source_helm_version: str = None,
    body_spec_source_kustomize_apiVersions: List[str] = None,
    body_spec_source_kustomize_commonAnnotations: Dict[str, Any] = None,
    body_spec_source_kustomize_commonAnnotationsEnvsubst: bool = None,
    body_spec_source_kustomize_commonLabels: Dict[str, Any] = None,
    body_spec_source_kustomize_components: List[str] = None,
    body_spec_source_kustomize_forceCommonAnnotations: bool = None,
    body_spec_source_kustomize_forceCommonLabels: bool = None,
    body_spec_source_kustomize_ignoreMissingComponents: bool = None,
    body_spec_source_kustomize_images: List[str] = None,
    body_spec_source_kustomize_kubeVersion: str = None,
    body_spec_source_kustomize_labelIncludeTemplates: bool = None,
    body_spec_source_kustomize_labelWithoutSelector: bool = None,
    body_spec_source_kustomize_namePrefix: str = None,
    body_spec_source_kustomize_nameSuffix: str = None,
    body_spec_source_kustomize_namespace: str = None,
    body_spec_source_kustomize_patches: List[str] = None,
    body_spec_source_kustomize_replicas: List[str] = None,
    body_spec_source_kustomize_version: str = None,
    body_spec_source_name: str = None,
    body_spec_source_path: str = None,
    body_spec_source_plugin_env: List[str] = None,
    body_spec_source_plugin_name: str = None,
    body_spec_source_plugin_parameters: List[str] = None,
    body_spec_source_ref: str = None,
    body_spec_source_repoURL: str = None,
    body_spec_source_targetRevision: str = None,
    body_spec_sourceHydrator_drySource_path: str = None,
    body_spec_sourceHydrator_drySource_repoURL: str = None,
    body_spec_sourceHydrator_drySource_targetRevision: str = None,
    body_spec_sourceHydrator_hydrateTo_targetBranch: str = None,
    body_spec_sourceHydrator_syncSource_path: str = None,
    body_spec_sourceHydrator_syncSource_targetBranch: str = None,
    body_spec_sources: List[str] = None,
    body_spec_syncPolicy_automated_allowEmpty: bool = None,
    body_spec_syncPolicy_automated_enable: bool = None,
    body_spec_syncPolicy_automated_prune: bool = None,
    body_spec_syncPolicy_automated_selfHeal: bool = None,
    body_spec_syncPolicy_managedNamespaceMetadata_annotations: Dict[str, Any] = None,
    body_spec_syncPolicy_managedNamespaceMetadata_labels: Dict[str, Any] = None,
    body_spec_syncPolicy_retry_backoff_duration: str = None,
    body_spec_syncPolicy_retry_backoff_factor: int = None,
    body_spec_syncPolicy_retry_backoff_maxDuration: str = None,
    body_spec_syncPolicy_retry_limit: int = None,
    body_spec_syncPolicy_syncOptions: List[str] = None,
    body_status_conditions: List[str] = None,
    body_status_controllerNamespace: str = None,
    body_status_health_lastTransitionTime: str = None,
    body_status_health_message: str = None,
    body_status_health_status: str = None,
    body_status_history: List[str] = None,
    body_status_observedAt: str = None,
    body_status_operationState_finishedAt: str = None,
    body_status_operationState_message: str = None,
    body_status_operationState_operation_info: List[str] = None,
    body_status_operationState_operation_initiatedBy_automated: bool = None,
    body_status_operationState_operation_initiatedBy_username: str = None,
    body_status_operationState_operation_retry_backoff_duration: str = None,
    body_status_operationState_operation_retry_backoff_factor: int = None,
    body_status_operationState_operation_retry_backoff_maxDuration: str = None,
    body_status_operationState_operation_retry_limit: int = None,
    body_status_operationState_operation_sync_autoHealAttemptsCount: int = None,
    body_status_operationState_operation_sync_dryRun: bool = None,
    body_status_operationState_operation_sync_manifests: List[str] = None,
    body_status_operationState_operation_sync_prune: bool = None,
    body_status_operationState_operation_sync_resources: List[str] = None,
    body_status_operationState_operation_sync_revision: str = None,
    body_status_operationState_operation_sync_revisions: List[str] = None,
    body_status_operationState_operation_sync_source_chart: str = None,
    body_status_operationState_operation_sync_source_directory_exclude: str = None,
    body_status_operationState_operation_sync_source_directory_include: str = None,
    body_status_operationState_operation_sync_source_directory_jsonnet_extVars: List[str] = None,
    body_status_operationState_operation_sync_source_directory_jsonnet_libs: List[str] = None,
    body_status_operationState_operation_sync_source_directory_jsonnet_tlas: List[str] = None,
    body_status_operationState_operation_sync_source_directory_recurse: bool = None,
    body_status_operationState_operation_sync_source_helm_apiVersions: List[str] = None,
    body_status_operationState_operation_sync_source_helm_fileParameters: List[str] = None,
    body_status_operationState_operation_sync_source_helm_ignoreMissingValueFiles: bool = None,
    body_status_operationState_operation_sync_source_helm_kubeVersion: str = None,
    body_status_operationState_operation_sync_source_helm_namespace: str = None,
    body_status_operationState_operation_sync_source_helm_parameters: List[str] = None,
    body_status_operationState_operation_sync_source_helm_passCredentials: bool = None,
    body_status_operationState_operation_sync_source_helm_releaseName: str = None,
    body_status_operationState_operation_sync_source_helm_skipCrds: bool = None,
    body_status_operationState_operation_sync_source_helm_skipSchemaValidation: bool = None,
    body_status_operationState_operation_sync_source_helm_skipTests: bool = None,
    body_status_operationState_operation_sync_source_helm_valueFiles: List[str] = None,
    body_status_operationState_operation_sync_source_helm_values: str = None,
    body_status_operationState_operation_sync_source_helm_valuesObject_raw: str = None,
    body_status_operationState_operation_sync_source_helm_version: str = None,
    body_status_operationState_operation_sync_source_kustomize_apiVersions: List[str] = None,
    body_status_operationState_operation_sync_source_kustomize_commonAnnotations: Dict[str, Any] = None,
    body_status_operationState_operation_sync_source_kustomize_commonAnnotationsEnvsubst: bool = None,
    body_status_operationState_operation_sync_source_kustomize_commonLabels: Dict[str, Any] = None,
    body_status_operationState_operation_sync_source_kustomize_components: List[str] = None,
    body_status_operationState_operation_sync_source_kustomize_forceCommonAnnotations: bool = None,
    body_status_operationState_operation_sync_source_kustomize_forceCommonLabels: bool = None,
    body_status_operationState_operation_sync_source_kustomize_ignoreMissingComponents: bool = None,
    body_status_operationState_operation_sync_source_kustomize_images: List[str] = None,
    body_status_operationState_operation_sync_source_kustomize_kubeVersion: str = None,
    body_status_operationState_operation_sync_source_kustomize_labelIncludeTemplates: bool = None,
    body_status_operationState_operation_sync_source_kustomize_labelWithoutSelector: bool = None,
    body_status_operationState_operation_sync_source_kustomize_namePrefix: str = None,
    body_status_operationState_operation_sync_source_kustomize_nameSuffix: str = None,
    body_status_operationState_operation_sync_source_kustomize_namespace: str = None,
    body_status_operationState_operation_sync_source_kustomize_patches: List[str] = None,
    body_status_operationState_operation_sync_source_kustomize_replicas: List[str] = None,
    body_status_operationState_operation_sync_source_kustomize_version: str = None,
    body_status_operationState_operation_sync_source_name: str = None,
    body_status_operationState_operation_sync_source_path: str = None,
    body_status_operationState_operation_sync_source_plugin_env: List[str] = None,
    body_status_operationState_operation_sync_source_plugin_name: str = None,
    body_status_operationState_operation_sync_source_plugin_parameters: List[str] = None,
    body_status_operationState_operation_sync_source_ref: str = None,
    body_status_operationState_operation_sync_source_repoURL: str = None,
    body_status_operationState_operation_sync_source_targetRevision: str = None,
    body_status_operationState_operation_sync_sources: List[str] = None,
    body_status_operationState_operation_sync_syncOptions: List[str] = None,
    body_status_operationState_operation_sync_syncStrategy_apply_force: bool = None,
    body_status_operationState_operation_sync_syncStrategy_hook_syncStrategyApply_force: bool = None,
    body_status_operationState_phase: str = None,
    body_status_operationState_retryCount: int = None,
    body_status_operationState_startedAt: str = None,
    body_status_operationState_syncResult_managedNamespaceMetadata_annotations: Dict[str, Any] = None,
    body_status_operationState_syncResult_managedNamespaceMetadata_labels: Dict[str, Any] = None,
    body_status_operationState_syncResult_resources: List[str] = None,
    body_status_operationState_syncResult_revision: str = None,
    body_status_operationState_syncResult_revisions: List[str] = None,
    body_status_operationState_syncResult_source_chart: str = None,
    body_status_operationState_syncResult_source_directory_exclude: str = None,
    body_status_operationState_syncResult_source_directory_include: str = None,
    body_status_operationState_syncResult_source_directory_jsonnet_extVars: List[str] = None,
    body_status_operationState_syncResult_source_directory_jsonnet_libs: List[str] = None,
    body_status_operationState_syncResult_source_directory_jsonnet_tlas: List[str] = None,
    body_status_operationState_syncResult_source_directory_recurse: bool = None,
    body_status_operationState_syncResult_source_helm_apiVersions: List[str] = None,
    body_status_operationState_syncResult_source_helm_fileParameters: List[str] = None,
    body_status_operationState_syncResult_source_helm_ignoreMissingValueFiles: bool = None,
    body_status_operationState_syncResult_source_helm_kubeVersion: str = None,
    body_status_operationState_syncResult_source_helm_namespace: str = None,
    body_status_operationState_syncResult_source_helm_parameters: List[str] = None,
    body_status_operationState_syncResult_source_helm_passCredentials: bool = None,
    body_status_operationState_syncResult_source_helm_releaseName: str = None,
    body_status_operationState_syncResult_source_helm_skipCrds: bool = None,
    body_status_operationState_syncResult_source_helm_skipSchemaValidation: bool = None,
    body_status_operationState_syncResult_source_helm_skipTests: bool = None,
    body_status_operationState_syncResult_source_helm_valueFiles: List[str] = None,
    body_status_operationState_syncResult_source_helm_values: str = None,
    body_status_operationState_syncResult_source_helm_valuesObject_raw: str = None,
    body_status_operationState_syncResult_source_helm_version: str = None,
    body_status_operationState_syncResult_source_kustomize_apiVersions: List[str] = None,
    body_status_operationState_syncResult_source_kustomize_commonAnnotations: Dict[str, Any] = None,
    body_status_operationState_syncResult_source_kustomize_commonAnnotationsEnvsubst: bool = None,
    body_status_operationState_syncResult_source_kustomize_commonLabels: Dict[str, Any] = None,
    body_status_operationState_syncResult_source_kustomize_components: List[str] = None,
    body_status_operationState_syncResult_source_kustomize_forceCommonAnnotations: bool = None,
    body_status_operationState_syncResult_source_kustomize_forceCommonLabels: bool = None,
    body_status_operationState_syncResult_source_kustomize_ignoreMissingComponents: bool = None,
    body_status_operationState_syncResult_source_kustomize_images: List[str] = None,
    body_status_operationState_syncResult_source_kustomize_kubeVersion: str = None,
    body_status_operationState_syncResult_source_kustomize_labelIncludeTemplates: bool = None,
    body_status_operationState_syncResult_source_kustomize_labelWithoutSelector: bool = None,
    body_status_operationState_syncResult_source_kustomize_namePrefix: str = None,
    body_status_operationState_syncResult_source_kustomize_nameSuffix: str = None,
    body_status_operationState_syncResult_source_kustomize_namespace: str = None,
    body_status_operationState_syncResult_source_kustomize_patches: List[str] = None,
    body_status_operationState_syncResult_source_kustomize_replicas: List[str] = None,
    body_status_operationState_syncResult_source_kustomize_version: str = None,
    body_status_operationState_syncResult_source_name: str = None,
    body_status_operationState_syncResult_source_path: str = None,
    body_status_operationState_syncResult_source_plugin_env: List[str] = None,
    body_status_operationState_syncResult_source_plugin_name: str = None,
    body_status_operationState_syncResult_source_plugin_parameters: List[str] = None,
    body_status_operationState_syncResult_source_ref: str = None,
    body_status_operationState_syncResult_source_repoURL: str = None,
    body_status_operationState_syncResult_source_targetRevision: str = None,
    body_status_operationState_syncResult_sources: List[str] = None,
    body_status_reconciledAt: str = None,
    body_status_resourceHealthSource: str = None,
    body_status_resources: List[str] = None,
    body_status_sourceHydrator_currentOperation_drySHA: str = None,
    body_status_sourceHydrator_currentOperation_finishedAt: str = None,
    body_status_sourceHydrator_currentOperation_hydratedSHA: str = None,
    body_status_sourceHydrator_currentOperation_message: str = None,
    body_status_sourceHydrator_currentOperation_phase: str = None,
    body_status_sourceHydrator_currentOperation_sourceHydrator_drySource_path: str = None,
    body_status_sourceHydrator_currentOperation_sourceHydrator_drySource_repoURL: str = None,
    body_status_sourceHydrator_currentOperation_sourceHydrator_drySource_targetRevision: str = None,
    body_status_sourceHydrator_currentOperation_sourceHydrator_hydrateTo_targetBranch: str = None,
    body_status_sourceHydrator_currentOperation_sourceHydrator_syncSource_path: str = None,
    body_status_sourceHydrator_currentOperation_sourceHydrator_syncSource_targetBranch: str = None,
    body_status_sourceHydrator_currentOperation_startedAt: str = None,
    body_status_sourceHydrator_lastSuccessfulOperation_drySHA: str = None,
    body_status_sourceHydrator_lastSuccessfulOperation_hydratedSHA: str = None,
    body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_drySource_path: str = None,
    body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_drySource_repoURL: str = None,
    body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_drySource_targetRevision: str = None,
    body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_hydrateTo_targetBranch: str = None,
    body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_syncSource_path: str = None,
    body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_syncSource_targetBranch: str = None,
    body_status_sourceType: str = None,
    body_status_sourceTypes: List[str] = None,
    body_status_summary_externalURLs: List[str] = None,
    body_status_summary_images: List[str] = None,
    body_status_sync_comparedTo_destination_name: str = None,
    body_status_sync_comparedTo_destination_namespace: str = None,
    body_status_sync_comparedTo_destination_server: str = None,
    body_status_sync_comparedTo_ignoreDifferences: List[str] = None,
    body_status_sync_comparedTo_source_chart: str = None,
    body_status_sync_comparedTo_source_directory_exclude: str = None,
    body_status_sync_comparedTo_source_directory_include: str = None,
    body_status_sync_comparedTo_source_directory_jsonnet_extVars: List[str] = None,
    body_status_sync_comparedTo_source_directory_jsonnet_libs: List[str] = None,
    body_status_sync_comparedTo_source_directory_jsonnet_tlas: List[str] = None,
    body_status_sync_comparedTo_source_directory_recurse: bool = None,
    body_status_sync_comparedTo_source_helm_apiVersions: List[str] = None,
    body_status_sync_comparedTo_source_helm_fileParameters: List[str] = None,
    body_status_sync_comparedTo_source_helm_ignoreMissingValueFiles: bool = None,
    body_status_sync_comparedTo_source_helm_kubeVersion: str = None,
    body_status_sync_comparedTo_source_helm_namespace: str = None,
    body_status_sync_comparedTo_source_helm_parameters: List[str] = None,
    body_status_sync_comparedTo_source_helm_passCredentials: bool = None,
    body_status_sync_comparedTo_source_helm_releaseName: str = None,
    body_status_sync_comparedTo_source_helm_skipCrds: bool = None,
    body_status_sync_comparedTo_source_helm_skipSchemaValidation: bool = None,
    body_status_sync_comparedTo_source_helm_skipTests: bool = None,
    body_status_sync_comparedTo_source_helm_valueFiles: List[str] = None,
    body_status_sync_comparedTo_source_helm_values: str = None,
    body_status_sync_comparedTo_source_helm_valuesObject_raw: str = None,
    body_status_sync_comparedTo_source_helm_version: str = None,
    body_status_sync_comparedTo_source_kustomize_apiVersions: List[str] = None,
    body_status_sync_comparedTo_source_kustomize_commonAnnotations: Dict[str, Any] = None,
    body_status_sync_comparedTo_source_kustomize_commonAnnotationsEnvsubst: bool = None,
    body_status_sync_comparedTo_source_kustomize_commonLabels: Dict[str, Any] = None,
    body_status_sync_comparedTo_source_kustomize_components: List[str] = None,
    body_status_sync_comparedTo_source_kustomize_forceCommonAnnotations: bool = None,
    body_status_sync_comparedTo_source_kustomize_forceCommonLabels: bool = None,
    body_status_sync_comparedTo_source_kustomize_ignoreMissingComponents: bool = None,
    body_status_sync_comparedTo_source_kustomize_images: List[str] = None,
    body_status_sync_comparedTo_source_kustomize_kubeVersion: str = None,
    body_status_sync_comparedTo_source_kustomize_labelIncludeTemplates: bool = None,
    body_status_sync_comparedTo_source_kustomize_labelWithoutSelector: bool = None,
    body_status_sync_comparedTo_source_kustomize_namePrefix: str = None,
    body_status_sync_comparedTo_source_kustomize_nameSuffix: str = None,
    body_status_sync_comparedTo_source_kustomize_namespace: str = None,
    body_status_sync_comparedTo_source_kustomize_patches: List[str] = None,
    body_status_sync_comparedTo_source_kustomize_replicas: List[str] = None,
    body_status_sync_comparedTo_source_kustomize_version: str = None,
    body_status_sync_comparedTo_source_name: str = None,
    body_status_sync_comparedTo_source_path: str = None,
    body_status_sync_comparedTo_source_plugin_env: List[str] = None,
    body_status_sync_comparedTo_source_plugin_name: str = None,
    body_status_sync_comparedTo_source_plugin_parameters: List[str] = None,
    body_status_sync_comparedTo_source_ref: str = None,
    body_status_sync_comparedTo_source_repoURL: str = None,
    body_status_sync_comparedTo_source_targetRevision: str = None,
    body_status_sync_comparedTo_sources: List[str] = None,
    body_status_sync_revision: str = None,
    body_status_sync_revisions: List[str] = None,
    body_status_sync_status: str = None,
    param_validate: bool = False,
    param_project: str = None,
) -> Dict[str, Any]:
    """
        Update updates an application

        OpenAPI Description:


        Args:

            path_application_metadata_name (str): Name must be unique within a namespace. Is required when creating resources, although
    some resources may allow a client to request the generation of an appropriate name
    automatically. Name is primarily intended for creation idempotence and configuration
    definition.
    Cannot be updated.
    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
    +optional

            body_metadata_annotations (Dict[str, Any]): OpenAPI parameter corresponding to 'body_metadata_annotations'

            body_metadata_creationTimestamp (str): Time is a wrapper around time.Time which supports correct
    marshaling to YAML and JSON.  Wrappers are provided for many
    of the factory methods that the time package offers.

    +protobuf.options.marshal=false
    +protobuf.as=Timestamp
    +protobuf.options.(gogoproto.goproto_stringer)=false

            body_metadata_deletionGracePeriodSeconds (int): OpenAPI parameter corresponding to 'body_metadata_deletionGracePeriodSeconds'

            body_metadata_deletionTimestamp (str): Time is a wrapper around time.Time which supports correct
    marshaling to YAML and JSON.  Wrappers are provided for many
    of the factory methods that the time package offers.

    +protobuf.options.marshal=false
    +protobuf.as=Timestamp
    +protobuf.options.(gogoproto.goproto_stringer)=false

            body_metadata_finalizers (List[str]): OpenAPI parameter corresponding to 'body_metadata_finalizers'

            body_metadata_generateName (str): GenerateName is an optional prefix, used by the server, to generate a unique
    name ONLY IF the Name field has not been provided.
    If this field is used, the name returned to the client will be different
    than the name passed. This value will also be combined with a unique suffix.
    The provided value has the same validation rules as the Name field,
    and may be truncated by the length of the suffix required to make the value
    unique on the server.

    If this field is specified and the generated name exists, the server will return a 409.

    Applied only if Name is not specified.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
    +optional

            body_metadata_generation (int): OpenAPI parameter corresponding to 'body_metadata_generation'

            body_metadata_labels (Dict[str, Any]): OpenAPI parameter corresponding to 'body_metadata_labels'

            body_metadata_managedFields (List[str]): ManagedFields maps workflow-id and version to the set of fields
    that are managed by that workflow. This is mostly for internal
    housekeeping, and users typically shouldn't need to set or
    understand this field. A workflow can be the user's name, a
    controller's name, or the name of a specific apply path like
    "ci-cd". The set of fields is always in the version that the
    workflow used when modifying the object.

    +optional
    +listType=atomic

            body_metadata_name (str): OpenAPI parameter corresponding to 'body_metadata_name'

            body_metadata_namespace (str): Namespace defines the space within which each name must be unique. An empty namespace is
    equivalent to the "default" namespace, but "default" is the canonical representation.
    Not all objects are required to be scoped to a namespace - the value of this field for
    those objects will be empty.

    Must be a DNS_LABEL.
    Cannot be updated.
    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
    +optional

            body_metadata_ownerReferences (List[str]): OpenAPI parameter corresponding to 'body_metadata_ownerReferences'

            body_metadata_resourceVersion (str): An opaque value that represents the internal version of this object that can
    be used by clients to determine when objects have changed. May be used for optimistic
    concurrency, change detection, and the watch operation on a resource or set of resources.
    Clients must treat these values as opaque and passed unmodified back to the server.
    They may only be valid for a particular resource or set of resources.

    Populated by the system.
    Read-only.
    Value must be treated as opaque by clients and .
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    +optional

            body_metadata_selfLink (str): OpenAPI parameter corresponding to 'body_metadata_selfLink'

            body_metadata_uid (str): UID is the unique in time and space value for this object. It is typically generated by
    the server on successful creation of a resource and is not allowed to change on PUT
    operations.

    Populated by the system.
    Read-only.
    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
    +optional

            body_operation_info (List[str]): OpenAPI parameter corresponding to 'body_operation_info'

            body_operation_initiatedBy_automated (bool): Automated is set to true if operation was initiated automatically by the application controller.

            body_operation_initiatedBy_username (str): OpenAPI parameter corresponding to 'body_operation_initiatedBy_username'

            body_operation_retry_backoff_duration (str): OpenAPI parameter corresponding to 'body_operation_retry_backoff_duration'

            body_operation_retry_backoff_factor (int): OpenAPI parameter corresponding to 'body_operation_retry_backoff_factor'

            body_operation_retry_backoff_maxDuration (str): OpenAPI parameter corresponding to 'body_operation_retry_backoff_maxDuration'

            body_operation_retry_limit (int): Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.

            body_operation_sync_autoHealAttemptsCount (int): OpenAPI parameter corresponding to 'body_operation_sync_autoHealAttemptsCount'

            body_operation_sync_dryRun (bool): OpenAPI parameter corresponding to 'body_operation_sync_dryRun'

            body_operation_sync_manifests (List[str]): OpenAPI parameter corresponding to 'body_operation_sync_manifests'

            body_operation_sync_prune (bool): OpenAPI parameter corresponding to 'body_operation_sync_prune'

            body_operation_sync_resources (List[str]): OpenAPI parameter corresponding to 'body_operation_sync_resources'

            body_operation_sync_revision (str): Revision is the revision (Git) or chart version (Helm) which to sync the application to
    If omitted, will use the revision specified in app spec.

            body_operation_sync_revisions (List[str]): Revisions is the list of revision (Git) or chart version (Helm) which to sync each source in sources field for the application to
    If omitted, will use the revision specified in app spec.

            body_operation_sync_source_chart (str): Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.

            body_operation_sync_source_directory_exclude (str): OpenAPI parameter corresponding to 'body_operation_sync_source_directory_exclude'

            body_operation_sync_source_directory_include (str): OpenAPI parameter corresponding to 'body_operation_sync_source_directory_include'

            body_operation_sync_source_directory_jsonnet_extVars (List[str]): OpenAPI parameter corresponding to 'body_operation_sync_source_directory_jsonnet_extVars'

            body_operation_sync_source_directory_jsonnet_libs (List[str]): OpenAPI parameter corresponding to 'body_operation_sync_source_directory_jsonnet_libs'

            body_operation_sync_source_directory_jsonnet_tlas (List[str]): OpenAPI parameter corresponding to 'body_operation_sync_source_directory_jsonnet_tlas'

            body_operation_sync_source_directory_recurse (bool): OpenAPI parameter corresponding to 'body_operation_sync_source_directory_recurse'

            body_operation_sync_source_helm_apiVersions (List[str]): APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
    Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.

            body_operation_sync_source_helm_fileParameters (List[str]): OpenAPI parameter corresponding to 'body_operation_sync_source_helm_fileParameters'

            body_operation_sync_source_helm_ignoreMissingValueFiles (bool): OpenAPI parameter corresponding to 'body_operation_sync_source_helm_ignoreMissingValueFiles'

            body_operation_sync_source_helm_kubeVersion (str): KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
    uses the Kubernetes version of the target cluster.

            body_operation_sync_source_helm_namespace (str): Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.

            body_operation_sync_source_helm_parameters (List[str]): OpenAPI parameter corresponding to 'body_operation_sync_source_helm_parameters'

            body_operation_sync_source_helm_passCredentials (bool): OpenAPI parameter corresponding to 'body_operation_sync_source_helm_passCredentials'

            body_operation_sync_source_helm_releaseName (str): OpenAPI parameter corresponding to 'body_operation_sync_source_helm_releaseName'

            body_operation_sync_source_helm_skipCrds (bool): OpenAPI parameter corresponding to 'body_operation_sync_source_helm_skipCrds'

            body_operation_sync_source_helm_skipSchemaValidation (bool): OpenAPI parameter corresponding to 'body_operation_sync_source_helm_skipSchemaValidation'

            body_operation_sync_source_helm_skipTests (bool): SkipTests skips test manifest installation step (Helm's --skip-tests).

            body_operation_sync_source_helm_valueFiles (List[str]): OpenAPI parameter corresponding to 'body_operation_sync_source_helm_valueFiles'

            body_operation_sync_source_helm_values (str): OpenAPI parameter corresponding to 'body_operation_sync_source_helm_values'

            body_operation_sync_source_helm_valuesObject_raw (str): Raw is the underlying serialization of this object.

    TODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.

            body_operation_sync_source_helm_version (str): OpenAPI parameter corresponding to 'body_operation_sync_source_helm_version'

            body_operation_sync_source_kustomize_apiVersions (List[str]): APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
    Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.

            body_operation_sync_source_kustomize_commonAnnotations (Dict[str, Any]): OpenAPI parameter corresponding to 'body_operation_sync_source_kustomize_commonAnnotations'

            body_operation_sync_source_kustomize_commonAnnotationsEnvsubst (bool): OpenAPI parameter corresponding to 'body_operation_sync_source_kustomize_commonAnnotationsEnvsubst'

            body_operation_sync_source_kustomize_commonLabels (Dict[str, Any]): OpenAPI parameter corresponding to 'body_operation_sync_source_kustomize_commonLabels'

            body_operation_sync_source_kustomize_components (List[str]): OpenAPI parameter corresponding to 'body_operation_sync_source_kustomize_components'

            body_operation_sync_source_kustomize_forceCommonAnnotations (bool): OpenAPI parameter corresponding to 'body_operation_sync_source_kustomize_forceCommonAnnotations'

            body_operation_sync_source_kustomize_forceCommonLabels (bool): OpenAPI parameter corresponding to 'body_operation_sync_source_kustomize_forceCommonLabels'

            body_operation_sync_source_kustomize_ignoreMissingComponents (bool): OpenAPI parameter corresponding to 'body_operation_sync_source_kustomize_ignoreMissingComponents'

            body_operation_sync_source_kustomize_images (List[str]): OpenAPI parameter corresponding to 'body_operation_sync_source_kustomize_images'

            body_operation_sync_source_kustomize_kubeVersion (str): KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
    uses the Kubernetes version of the target cluster.

            body_operation_sync_source_kustomize_labelIncludeTemplates (bool): OpenAPI parameter corresponding to 'body_operation_sync_source_kustomize_labelIncludeTemplates'

            body_operation_sync_source_kustomize_labelWithoutSelector (bool): OpenAPI parameter corresponding to 'body_operation_sync_source_kustomize_labelWithoutSelector'

            body_operation_sync_source_kustomize_namePrefix (str): OpenAPI parameter corresponding to 'body_operation_sync_source_kustomize_namePrefix'

            body_operation_sync_source_kustomize_nameSuffix (str): OpenAPI parameter corresponding to 'body_operation_sync_source_kustomize_nameSuffix'

            body_operation_sync_source_kustomize_namespace (str): OpenAPI parameter corresponding to 'body_operation_sync_source_kustomize_namespace'

            body_operation_sync_source_kustomize_patches (List[str]): OpenAPI parameter corresponding to 'body_operation_sync_source_kustomize_patches'

            body_operation_sync_source_kustomize_replicas (List[str]): OpenAPI parameter corresponding to 'body_operation_sync_source_kustomize_replicas'

            body_operation_sync_source_kustomize_version (str): OpenAPI parameter corresponding to 'body_operation_sync_source_kustomize_version'

            body_operation_sync_source_name (str): Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.

            body_operation_sync_source_path (str): Path is a directory path within the Git repository, and is only valid for applications sourced from Git.

            body_operation_sync_source_plugin_env (List[str]): OpenAPI parameter corresponding to 'body_operation_sync_source_plugin_env'

            body_operation_sync_source_plugin_name (str): OpenAPI parameter corresponding to 'body_operation_sync_source_plugin_name'

            body_operation_sync_source_plugin_parameters (List[str]): OpenAPI parameter corresponding to 'body_operation_sync_source_plugin_parameters'

            body_operation_sync_source_ref (str): Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.

            body_operation_sync_source_repoURL (str): OpenAPI parameter corresponding to 'body_operation_sync_source_repoURL'

            body_operation_sync_source_targetRevision (str): TargetRevision defines the revision of the source to sync the application to.
    In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.
    In case of Helm, this is a semver tag for the Chart's version.

            body_operation_sync_sources (List[str]): OpenAPI parameter corresponding to 'body_operation_sync_sources'

            body_operation_sync_syncOptions (List[str]): OpenAPI parameter corresponding to 'body_operation_sync_syncOptions'

            body_operation_sync_syncStrategy_apply_force (bool): Force indicates whether or not to supply the --force flag to `kubectl apply`.
    The --force flag deletes and re-create the resource, when PATCH encounters conflict and has
    retried for 5 times.

            body_operation_sync_syncStrategy_hook_syncStrategyApply_force (bool): Force indicates whether or not to supply the --force flag to `kubectl apply`.
    The --force flag deletes and re-create the resource, when PATCH encounters conflict and has
    retried for 5 times.

            body_spec_destination_name (str): Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.

            body_spec_destination_namespace (str): OpenAPI parameter corresponding to 'body_spec_destination_namespace'

            body_spec_destination_server (str): Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.

            body_spec_ignoreDifferences (List[str]): OpenAPI parameter corresponding to 'body_spec_ignoreDifferences'

            body_spec_info (List[str]): OpenAPI parameter corresponding to 'body_spec_info'

            body_spec_project (str): Project is a reference to the project this application belongs to.
    The empty string means that application belongs to the 'default' project.

            body_spec_revisionHistoryLimit (int): RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.
    This should only be changed in exceptional circumstances.
    Setting to zero will store no history. This will reduce storage used.
    Increasing will increase the space used to store the history, so we do not recommend increasing it.
    Default is 10.

            body_spec_source_chart (str): Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.

            body_spec_source_directory_exclude (str): OpenAPI parameter corresponding to 'body_spec_source_directory_exclude'

            body_spec_source_directory_include (str): OpenAPI parameter corresponding to 'body_spec_source_directory_include'

            body_spec_source_directory_jsonnet_extVars (List[str]): OpenAPI parameter corresponding to 'body_spec_source_directory_jsonnet_extVars'

            body_spec_source_directory_jsonnet_libs (List[str]): OpenAPI parameter corresponding to 'body_spec_source_directory_jsonnet_libs'

            body_spec_source_directory_jsonnet_tlas (List[str]): OpenAPI parameter corresponding to 'body_spec_source_directory_jsonnet_tlas'

            body_spec_source_directory_recurse (bool): OpenAPI parameter corresponding to 'body_spec_source_directory_recurse'

            body_spec_source_helm_apiVersions (List[str]): APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
    Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.

            body_spec_source_helm_fileParameters (List[str]): OpenAPI parameter corresponding to 'body_spec_source_helm_fileParameters'

            body_spec_source_helm_ignoreMissingValueFiles (bool): OpenAPI parameter corresponding to 'body_spec_source_helm_ignoreMissingValueFiles'

            body_spec_source_helm_kubeVersion (str): KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
    uses the Kubernetes version of the target cluster.

            body_spec_source_helm_namespace (str): Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.

            body_spec_source_helm_parameters (List[str]): OpenAPI parameter corresponding to 'body_spec_source_helm_parameters'

            body_spec_source_helm_passCredentials (bool): OpenAPI parameter corresponding to 'body_spec_source_helm_passCredentials'

            body_spec_source_helm_releaseName (str): OpenAPI parameter corresponding to 'body_spec_source_helm_releaseName'

            body_spec_source_helm_skipCrds (bool): OpenAPI parameter corresponding to 'body_spec_source_helm_skipCrds'

            body_spec_source_helm_skipSchemaValidation (bool): OpenAPI parameter corresponding to 'body_spec_source_helm_skipSchemaValidation'

            body_spec_source_helm_skipTests (bool): SkipTests skips test manifest installation step (Helm's --skip-tests).

            body_spec_source_helm_valueFiles (List[str]): OpenAPI parameter corresponding to 'body_spec_source_helm_valueFiles'

            body_spec_source_helm_values (str): OpenAPI parameter corresponding to 'body_spec_source_helm_values'

            body_spec_source_helm_valuesObject_raw (str): Raw is the underlying serialization of this object.

    TODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.

            body_spec_source_helm_version (str): OpenAPI parameter corresponding to 'body_spec_source_helm_version'

            body_spec_source_kustomize_apiVersions (List[str]): APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
    Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.

            body_spec_source_kustomize_commonAnnotations (Dict[str, Any]): OpenAPI parameter corresponding to 'body_spec_source_kustomize_commonAnnotations'

            body_spec_source_kustomize_commonAnnotationsEnvsubst (bool): OpenAPI parameter corresponding to 'body_spec_source_kustomize_commonAnnotationsEnvsubst'

            body_spec_source_kustomize_commonLabels (Dict[str, Any]): OpenAPI parameter corresponding to 'body_spec_source_kustomize_commonLabels'

            body_spec_source_kustomize_components (List[str]): OpenAPI parameter corresponding to 'body_spec_source_kustomize_components'

            body_spec_source_kustomize_forceCommonAnnotations (bool): OpenAPI parameter corresponding to 'body_spec_source_kustomize_forceCommonAnnotations'

            body_spec_source_kustomize_forceCommonLabels (bool): OpenAPI parameter corresponding to 'body_spec_source_kustomize_forceCommonLabels'

            body_spec_source_kustomize_ignoreMissingComponents (bool): OpenAPI parameter corresponding to 'body_spec_source_kustomize_ignoreMissingComponents'

            body_spec_source_kustomize_images (List[str]): OpenAPI parameter corresponding to 'body_spec_source_kustomize_images'

            body_spec_source_kustomize_kubeVersion (str): KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
    uses the Kubernetes version of the target cluster.

            body_spec_source_kustomize_labelIncludeTemplates (bool): OpenAPI parameter corresponding to 'body_spec_source_kustomize_labelIncludeTemplates'

            body_spec_source_kustomize_labelWithoutSelector (bool): OpenAPI parameter corresponding to 'body_spec_source_kustomize_labelWithoutSelector'

            body_spec_source_kustomize_namePrefix (str): OpenAPI parameter corresponding to 'body_spec_source_kustomize_namePrefix'

            body_spec_source_kustomize_nameSuffix (str): OpenAPI parameter corresponding to 'body_spec_source_kustomize_nameSuffix'

            body_spec_source_kustomize_namespace (str): OpenAPI parameter corresponding to 'body_spec_source_kustomize_namespace'

            body_spec_source_kustomize_patches (List[str]): OpenAPI parameter corresponding to 'body_spec_source_kustomize_patches'

            body_spec_source_kustomize_replicas (List[str]): OpenAPI parameter corresponding to 'body_spec_source_kustomize_replicas'

            body_spec_source_kustomize_version (str): OpenAPI parameter corresponding to 'body_spec_source_kustomize_version'

            body_spec_source_name (str): Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.

            body_spec_source_path (str): Path is a directory path within the Git repository, and is only valid for applications sourced from Git.

            body_spec_source_plugin_env (List[str]): OpenAPI parameter corresponding to 'body_spec_source_plugin_env'

            body_spec_source_plugin_name (str): OpenAPI parameter corresponding to 'body_spec_source_plugin_name'

            body_spec_source_plugin_parameters (List[str]): OpenAPI parameter corresponding to 'body_spec_source_plugin_parameters'

            body_spec_source_ref (str): Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.

            body_spec_source_repoURL (str): OpenAPI parameter corresponding to 'body_spec_source_repoURL'

            body_spec_source_targetRevision (str): TargetRevision defines the revision of the source to sync the application to.
    In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.
    In case of Helm, this is a semver tag for the Chart's version.

            body_spec_sourceHydrator_drySource_path (str): OpenAPI parameter corresponding to 'body_spec_sourceHydrator_drySource_path'

            body_spec_sourceHydrator_drySource_repoURL (str): OpenAPI parameter corresponding to 'body_spec_sourceHydrator_drySource_repoURL'

            body_spec_sourceHydrator_drySource_targetRevision (str): OpenAPI parameter corresponding to 'body_spec_sourceHydrator_drySource_targetRevision'

            body_spec_sourceHydrator_hydrateTo_targetBranch (str): OpenAPI parameter corresponding to 'body_spec_sourceHydrator_hydrateTo_targetBranch'

            body_spec_sourceHydrator_syncSource_path (str): Path is a directory path within the git repository where hydrated manifests should be committed to and synced
    from. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.

            body_spec_sourceHydrator_syncSource_targetBranch (str): OpenAPI parameter corresponding to 'body_spec_sourceHydrator_syncSource_targetBranch'

            body_spec_sources (List[str]): OpenAPI parameter corresponding to 'body_spec_sources'

            body_spec_syncPolicy_automated_allowEmpty (bool): OpenAPI parameter corresponding to 'body_spec_syncPolicy_automated_allowEmpty'

            body_spec_syncPolicy_automated_enable (bool): OpenAPI parameter corresponding to 'body_spec_syncPolicy_automated_enable'

            body_spec_syncPolicy_automated_prune (bool): OpenAPI parameter corresponding to 'body_spec_syncPolicy_automated_prune'

            body_spec_syncPolicy_automated_selfHeal (bool): OpenAPI parameter corresponding to 'body_spec_syncPolicy_automated_selfHeal'

            body_spec_syncPolicy_managedNamespaceMetadata_annotations (Dict[str, Any]): OpenAPI parameter corresponding to 'body_spec_syncPolicy_managedNamespaceMetadata_annotations'

            body_spec_syncPolicy_managedNamespaceMetadata_labels (Dict[str, Any]): OpenAPI parameter corresponding to 'body_spec_syncPolicy_managedNamespaceMetadata_labels'

            body_spec_syncPolicy_retry_backoff_duration (str): OpenAPI parameter corresponding to 'body_spec_syncPolicy_retry_backoff_duration'

            body_spec_syncPolicy_retry_backoff_factor (int): OpenAPI parameter corresponding to 'body_spec_syncPolicy_retry_backoff_factor'

            body_spec_syncPolicy_retry_backoff_maxDuration (str): OpenAPI parameter corresponding to 'body_spec_syncPolicy_retry_backoff_maxDuration'

            body_spec_syncPolicy_retry_limit (int): Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.

            body_spec_syncPolicy_syncOptions (List[str]): OpenAPI parameter corresponding to 'body_spec_syncPolicy_syncOptions'

            body_status_conditions (List[str]): OpenAPI parameter corresponding to 'body_status_conditions'

            body_status_controllerNamespace (str): OpenAPI parameter corresponding to 'body_status_controllerNamespace'

            body_status_health_lastTransitionTime (str): Time is a wrapper around time.Time which supports correct
    marshaling to YAML and JSON.  Wrappers are provided for many
    of the factory methods that the time package offers.

    +protobuf.options.marshal=false
    +protobuf.as=Timestamp
    +protobuf.options.(gogoproto.goproto_stringer)=false

            body_status_health_message (str): Deprecated: this field is not used and will be removed in a future release.

            body_status_health_status (str): OpenAPI parameter corresponding to 'body_status_health_status'

            body_status_history (List[str]): OpenAPI parameter corresponding to 'body_status_history'

            body_status_observedAt (str): Time is a wrapper around time.Time which supports correct
    marshaling to YAML and JSON.  Wrappers are provided for many
    of the factory methods that the time package offers.

    +protobuf.options.marshal=false
    +protobuf.as=Timestamp
    +protobuf.options.(gogoproto.goproto_stringer)=false

            body_status_operationState_finishedAt (str): Time is a wrapper around time.Time which supports correct
    marshaling to YAML and JSON.  Wrappers are provided for many
    of the factory methods that the time package offers.

    +protobuf.options.marshal=false
    +protobuf.as=Timestamp
    +protobuf.options.(gogoproto.goproto_stringer)=false

            body_status_operationState_message (str): Message holds any pertinent messages when attempting to perform operation (typically errors).

            body_status_operationState_operation_info (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_operation_info'

            body_status_operationState_operation_initiatedBy_automated (bool): Automated is set to true if operation was initiated automatically by the application controller.

            body_status_operationState_operation_initiatedBy_username (str): OpenAPI parameter corresponding to 'body_status_operationState_operation_initiatedBy_username'

            body_status_operationState_operation_retry_backoff_duration (str): OpenAPI parameter corresponding to 'body_status_operationState_operation_retry_backoff_duration'

            body_status_operationState_operation_retry_backoff_factor (int): OpenAPI parameter corresponding to 'body_status_operationState_operation_retry_backoff_factor'

            body_status_operationState_operation_retry_backoff_maxDuration (str): OpenAPI parameter corresponding to 'body_status_operationState_operation_retry_backoff_maxDuration'

            body_status_operationState_operation_retry_limit (int): Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.

            body_status_operationState_operation_sync_autoHealAttemptsCount (int): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_autoHealAttemptsCount'

            body_status_operationState_operation_sync_dryRun (bool): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_dryRun'

            body_status_operationState_operation_sync_manifests (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_manifests'

            body_status_operationState_operation_sync_prune (bool): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_prune'

            body_status_operationState_operation_sync_resources (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_resources'

            body_status_operationState_operation_sync_revision (str): Revision is the revision (Git) or chart version (Helm) which to sync the application to
    If omitted, will use the revision specified in app spec.

            body_status_operationState_operation_sync_revisions (List[str]): Revisions is the list of revision (Git) or chart version (Helm) which to sync each source in sources field for the application to
    If omitted, will use the revision specified in app spec.

            body_status_operationState_operation_sync_source_chart (str): Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.

            body_status_operationState_operation_sync_source_directory_exclude (str): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_directory_exclude'

            body_status_operationState_operation_sync_source_directory_include (str): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_directory_include'

            body_status_operationState_operation_sync_source_directory_jsonnet_extVars (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_directory_jsonnet_extVars'

            body_status_operationState_operation_sync_source_directory_jsonnet_libs (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_directory_jsonnet_libs'

            body_status_operationState_operation_sync_source_directory_jsonnet_tlas (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_directory_jsonnet_tlas'

            body_status_operationState_operation_sync_source_directory_recurse (bool): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_directory_recurse'

            body_status_operationState_operation_sync_source_helm_apiVersions (List[str]): APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
    Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.

            body_status_operationState_operation_sync_source_helm_fileParameters (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_helm_fileParameters'

            body_status_operationState_operation_sync_source_helm_ignoreMissingValueFiles (bool): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_helm_ignoreMissingValueFiles'

            body_status_operationState_operation_sync_source_helm_kubeVersion (str): KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
    uses the Kubernetes version of the target cluster.

            body_status_operationState_operation_sync_source_helm_namespace (str): Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.

            body_status_operationState_operation_sync_source_helm_parameters (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_helm_parameters'

            body_status_operationState_operation_sync_source_helm_passCredentials (bool): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_helm_passCredentials'

            body_status_operationState_operation_sync_source_helm_releaseName (str): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_helm_releaseName'

            body_status_operationState_operation_sync_source_helm_skipCrds (bool): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_helm_skipCrds'

            body_status_operationState_operation_sync_source_helm_skipSchemaValidation (bool): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_helm_skipSchemaValidation'

            body_status_operationState_operation_sync_source_helm_skipTests (bool): SkipTests skips test manifest installation step (Helm's --skip-tests).

            body_status_operationState_operation_sync_source_helm_valueFiles (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_helm_valueFiles'

            body_status_operationState_operation_sync_source_helm_values (str): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_helm_values'

            body_status_operationState_operation_sync_source_helm_valuesObject_raw (str): Raw is the underlying serialization of this object.

    TODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.

            body_status_operationState_operation_sync_source_helm_version (str): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_helm_version'

            body_status_operationState_operation_sync_source_kustomize_apiVersions (List[str]): APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
    Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.

            body_status_operationState_operation_sync_source_kustomize_commonAnnotations (Dict[str, Any]): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_kustomize_commonAnnotations'

            body_status_operationState_operation_sync_source_kustomize_commonAnnotationsEnvsubst (bool): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_kustomize_commonAnnotationsEnvsubst'

            body_status_operationState_operation_sync_source_kustomize_commonLabels (Dict[str, Any]): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_kustomize_commonLabels'

            body_status_operationState_operation_sync_source_kustomize_components (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_kustomize_components'

            body_status_operationState_operation_sync_source_kustomize_forceCommonAnnotations (bool): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_kustomize_forceCommonAnnotations'

            body_status_operationState_operation_sync_source_kustomize_forceCommonLabels (bool): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_kustomize_forceCommonLabels'

            body_status_operationState_operation_sync_source_kustomize_ignoreMissingComponents (bool): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_kustomize_ignoreMissingComponents'

            body_status_operationState_operation_sync_source_kustomize_images (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_kustomize_images'

            body_status_operationState_operation_sync_source_kustomize_kubeVersion (str): KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
    uses the Kubernetes version of the target cluster.

            body_status_operationState_operation_sync_source_kustomize_labelIncludeTemplates (bool): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_kustomize_labelIncludeTemplates'

            body_status_operationState_operation_sync_source_kustomize_labelWithoutSelector (bool): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_kustomize_labelWithoutSelector'

            body_status_operationState_operation_sync_source_kustomize_namePrefix (str): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_kustomize_namePrefix'

            body_status_operationState_operation_sync_source_kustomize_nameSuffix (str): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_kustomize_nameSuffix'

            body_status_operationState_operation_sync_source_kustomize_namespace (str): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_kustomize_namespace'

            body_status_operationState_operation_sync_source_kustomize_patches (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_kustomize_patches'

            body_status_operationState_operation_sync_source_kustomize_replicas (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_kustomize_replicas'

            body_status_operationState_operation_sync_source_kustomize_version (str): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_kustomize_version'

            body_status_operationState_operation_sync_source_name (str): Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.

            body_status_operationState_operation_sync_source_path (str): Path is a directory path within the Git repository, and is only valid for applications sourced from Git.

            body_status_operationState_operation_sync_source_plugin_env (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_plugin_env'

            body_status_operationState_operation_sync_source_plugin_name (str): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_plugin_name'

            body_status_operationState_operation_sync_source_plugin_parameters (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_plugin_parameters'

            body_status_operationState_operation_sync_source_ref (str): Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.

            body_status_operationState_operation_sync_source_repoURL (str): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_source_repoURL'

            body_status_operationState_operation_sync_source_targetRevision (str): TargetRevision defines the revision of the source to sync the application to.
    In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.
    In case of Helm, this is a semver tag for the Chart's version.

            body_status_operationState_operation_sync_sources (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_sources'

            body_status_operationState_operation_sync_syncOptions (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_operation_sync_syncOptions'

            body_status_operationState_operation_sync_syncStrategy_apply_force (bool): Force indicates whether or not to supply the --force flag to `kubectl apply`.
    The --force flag deletes and re-create the resource, when PATCH encounters conflict and has
    retried for 5 times.

            body_status_operationState_operation_sync_syncStrategy_hook_syncStrategyApply_force (bool): Force indicates whether or not to supply the --force flag to `kubectl apply`.
    The --force flag deletes and re-create the resource, when PATCH encounters conflict and has
    retried for 5 times.

            body_status_operationState_phase (str): OpenAPI parameter corresponding to 'body_status_operationState_phase'

            body_status_operationState_retryCount (int): OpenAPI parameter corresponding to 'body_status_operationState_retryCount'

            body_status_operationState_startedAt (str): Time is a wrapper around time.Time which supports correct
    marshaling to YAML and JSON.  Wrappers are provided for many
    of the factory methods that the time package offers.

    +protobuf.options.marshal=false
    +protobuf.as=Timestamp
    +protobuf.options.(gogoproto.goproto_stringer)=false

            body_status_operationState_syncResult_managedNamespaceMetadata_annotations (Dict[str, Any]): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_managedNamespaceMetadata_annotations'

            body_status_operationState_syncResult_managedNamespaceMetadata_labels (Dict[str, Any]): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_managedNamespaceMetadata_labels'

            body_status_operationState_syncResult_resources (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_resources'

            body_status_operationState_syncResult_revision (str): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_revision'

            body_status_operationState_syncResult_revisions (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_revisions'

            body_status_operationState_syncResult_source_chart (str): Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.

            body_status_operationState_syncResult_source_directory_exclude (str): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_directory_exclude'

            body_status_operationState_syncResult_source_directory_include (str): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_directory_include'

            body_status_operationState_syncResult_source_directory_jsonnet_extVars (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_directory_jsonnet_extVars'

            body_status_operationState_syncResult_source_directory_jsonnet_libs (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_directory_jsonnet_libs'

            body_status_operationState_syncResult_source_directory_jsonnet_tlas (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_directory_jsonnet_tlas'

            body_status_operationState_syncResult_source_directory_recurse (bool): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_directory_recurse'

            body_status_operationState_syncResult_source_helm_apiVersions (List[str]): APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
    Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.

            body_status_operationState_syncResult_source_helm_fileParameters (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_helm_fileParameters'

            body_status_operationState_syncResult_source_helm_ignoreMissingValueFiles (bool): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_helm_ignoreMissingValueFiles'

            body_status_operationState_syncResult_source_helm_kubeVersion (str): KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
    uses the Kubernetes version of the target cluster.

            body_status_operationState_syncResult_source_helm_namespace (str): Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.

            body_status_operationState_syncResult_source_helm_parameters (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_helm_parameters'

            body_status_operationState_syncResult_source_helm_passCredentials (bool): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_helm_passCredentials'

            body_status_operationState_syncResult_source_helm_releaseName (str): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_helm_releaseName'

            body_status_operationState_syncResult_source_helm_skipCrds (bool): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_helm_skipCrds'

            body_status_operationState_syncResult_source_helm_skipSchemaValidation (bool): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_helm_skipSchemaValidation'

            body_status_operationState_syncResult_source_helm_skipTests (bool): SkipTests skips test manifest installation step (Helm's --skip-tests).

            body_status_operationState_syncResult_source_helm_valueFiles (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_helm_valueFiles'

            body_status_operationState_syncResult_source_helm_values (str): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_helm_values'

            body_status_operationState_syncResult_source_helm_valuesObject_raw (str): Raw is the underlying serialization of this object.

    TODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.

            body_status_operationState_syncResult_source_helm_version (str): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_helm_version'

            body_status_operationState_syncResult_source_kustomize_apiVersions (List[str]): APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
    Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.

            body_status_operationState_syncResult_source_kustomize_commonAnnotations (Dict[str, Any]): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_kustomize_commonAnnotations'

            body_status_operationState_syncResult_source_kustomize_commonAnnotationsEnvsubst (bool): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_kustomize_commonAnnotationsEnvsubst'

            body_status_operationState_syncResult_source_kustomize_commonLabels (Dict[str, Any]): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_kustomize_commonLabels'

            body_status_operationState_syncResult_source_kustomize_components (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_kustomize_components'

            body_status_operationState_syncResult_source_kustomize_forceCommonAnnotations (bool): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_kustomize_forceCommonAnnotations'

            body_status_operationState_syncResult_source_kustomize_forceCommonLabels (bool): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_kustomize_forceCommonLabels'

            body_status_operationState_syncResult_source_kustomize_ignoreMissingComponents (bool): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_kustomize_ignoreMissingComponents'

            body_status_operationState_syncResult_source_kustomize_images (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_kustomize_images'

            body_status_operationState_syncResult_source_kustomize_kubeVersion (str): KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
    uses the Kubernetes version of the target cluster.

            body_status_operationState_syncResult_source_kustomize_labelIncludeTemplates (bool): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_kustomize_labelIncludeTemplates'

            body_status_operationState_syncResult_source_kustomize_labelWithoutSelector (bool): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_kustomize_labelWithoutSelector'

            body_status_operationState_syncResult_source_kustomize_namePrefix (str): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_kustomize_namePrefix'

            body_status_operationState_syncResult_source_kustomize_nameSuffix (str): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_kustomize_nameSuffix'

            body_status_operationState_syncResult_source_kustomize_namespace (str): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_kustomize_namespace'

            body_status_operationState_syncResult_source_kustomize_patches (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_kustomize_patches'

            body_status_operationState_syncResult_source_kustomize_replicas (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_kustomize_replicas'

            body_status_operationState_syncResult_source_kustomize_version (str): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_kustomize_version'

            body_status_operationState_syncResult_source_name (str): Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.

            body_status_operationState_syncResult_source_path (str): Path is a directory path within the Git repository, and is only valid for applications sourced from Git.

            body_status_operationState_syncResult_source_plugin_env (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_plugin_env'

            body_status_operationState_syncResult_source_plugin_name (str): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_plugin_name'

            body_status_operationState_syncResult_source_plugin_parameters (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_plugin_parameters'

            body_status_operationState_syncResult_source_ref (str): Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.

            body_status_operationState_syncResult_source_repoURL (str): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_source_repoURL'

            body_status_operationState_syncResult_source_targetRevision (str): TargetRevision defines the revision of the source to sync the application to.
    In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.
    In case of Helm, this is a semver tag for the Chart's version.

            body_status_operationState_syncResult_sources (List[str]): OpenAPI parameter corresponding to 'body_status_operationState_syncResult_sources'

            body_status_reconciledAt (str): Time is a wrapper around time.Time which supports correct
    marshaling to YAML and JSON.  Wrappers are provided for many
    of the factory methods that the time package offers.

    +protobuf.options.marshal=false
    +protobuf.as=Timestamp
    +protobuf.options.(gogoproto.goproto_stringer)=false

            body_status_resourceHealthSource (str): OpenAPI parameter corresponding to 'body_status_resourceHealthSource'

            body_status_resources (List[str]): OpenAPI parameter corresponding to 'body_status_resources'

            body_status_sourceHydrator_currentOperation_drySHA (str): OpenAPI parameter corresponding to 'body_status_sourceHydrator_currentOperation_drySHA'

            body_status_sourceHydrator_currentOperation_finishedAt (str): Time is a wrapper around time.Time which supports correct
    marshaling to YAML and JSON.  Wrappers are provided for many
    of the factory methods that the time package offers.

    +protobuf.options.marshal=false
    +protobuf.as=Timestamp
    +protobuf.options.(gogoproto.goproto_stringer)=false

            body_status_sourceHydrator_currentOperation_hydratedSHA (str): OpenAPI parameter corresponding to 'body_status_sourceHydrator_currentOperation_hydratedSHA'

            body_status_sourceHydrator_currentOperation_message (str): OpenAPI parameter corresponding to 'body_status_sourceHydrator_currentOperation_message'

            body_status_sourceHydrator_currentOperation_phase (str): OpenAPI parameter corresponding to 'body_status_sourceHydrator_currentOperation_phase'

            body_status_sourceHydrator_currentOperation_sourceHydrator_drySource_path (str): OpenAPI parameter corresponding to 'body_status_sourceHydrator_currentOperation_sourceHydrator_drySource_path'

            body_status_sourceHydrator_currentOperation_sourceHydrator_drySource_repoURL (str): OpenAPI parameter corresponding to 'body_status_sourceHydrator_currentOperation_sourceHydrator_drySource_repoURL'

            body_status_sourceHydrator_currentOperation_sourceHydrator_drySource_targetRevision (str): OpenAPI parameter corresponding to 'body_status_sourceHydrator_currentOperation_sourceHydrator_drySource_targetRevision'

            body_status_sourceHydrator_currentOperation_sourceHydrator_hydrateTo_targetBranch (str): OpenAPI parameter corresponding to 'body_status_sourceHydrator_currentOperation_sourceHydrator_hydrateTo_targetBranch'

            body_status_sourceHydrator_currentOperation_sourceHydrator_syncSource_path (str): Path is a directory path within the git repository where hydrated manifests should be committed to and synced
    from. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.

            body_status_sourceHydrator_currentOperation_sourceHydrator_syncSource_targetBranch (str): OpenAPI parameter corresponding to 'body_status_sourceHydrator_currentOperation_sourceHydrator_syncSource_targetBranch'

            body_status_sourceHydrator_currentOperation_startedAt (str): Time is a wrapper around time.Time which supports correct
    marshaling to YAML and JSON.  Wrappers are provided for many
    of the factory methods that the time package offers.

    +protobuf.options.marshal=false
    +protobuf.as=Timestamp
    +protobuf.options.(gogoproto.goproto_stringer)=false

            body_status_sourceHydrator_lastSuccessfulOperation_drySHA (str): OpenAPI parameter corresponding to 'body_status_sourceHydrator_lastSuccessfulOperation_drySHA'

            body_status_sourceHydrator_lastSuccessfulOperation_hydratedSHA (str): OpenAPI parameter corresponding to 'body_status_sourceHydrator_lastSuccessfulOperation_hydratedSHA'

            body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_drySource_path (str): OpenAPI parameter corresponding to 'body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_drySource_path'

            body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_drySource_repoURL (str): OpenAPI parameter corresponding to 'body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_drySource_repoURL'

            body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_drySource_targetRevision (str): OpenAPI parameter corresponding to 'body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_drySource_targetRevision'

            body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_hydrateTo_targetBranch (str): OpenAPI parameter corresponding to 'body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_hydrateTo_targetBranch'

            body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_syncSource_path (str): Path is a directory path within the git repository where hydrated manifests should be committed to and synced
    from. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.

            body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_syncSource_targetBranch (str): OpenAPI parameter corresponding to 'body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_syncSource_targetBranch'

            body_status_sourceType (str): OpenAPI parameter corresponding to 'body_status_sourceType'

            body_status_sourceTypes (List[str]): OpenAPI parameter corresponding to 'body_status_sourceTypes'

            body_status_summary_externalURLs (List[str]): ExternalURLs holds all external URLs of application child resources.

            body_status_summary_images (List[str]): Images holds all images of application child resources.

            body_status_sync_comparedTo_destination_name (str): Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.

            body_status_sync_comparedTo_destination_namespace (str): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_destination_namespace'

            body_status_sync_comparedTo_destination_server (str): Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.

            body_status_sync_comparedTo_ignoreDifferences (List[str]): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_ignoreDifferences'

            body_status_sync_comparedTo_source_chart (str): Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.

            body_status_sync_comparedTo_source_directory_exclude (str): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_directory_exclude'

            body_status_sync_comparedTo_source_directory_include (str): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_directory_include'

            body_status_sync_comparedTo_source_directory_jsonnet_extVars (List[str]): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_directory_jsonnet_extVars'

            body_status_sync_comparedTo_source_directory_jsonnet_libs (List[str]): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_directory_jsonnet_libs'

            body_status_sync_comparedTo_source_directory_jsonnet_tlas (List[str]): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_directory_jsonnet_tlas'

            body_status_sync_comparedTo_source_directory_recurse (bool): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_directory_recurse'

            body_status_sync_comparedTo_source_helm_apiVersions (List[str]): APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
    Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.

            body_status_sync_comparedTo_source_helm_fileParameters (List[str]): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_helm_fileParameters'

            body_status_sync_comparedTo_source_helm_ignoreMissingValueFiles (bool): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_helm_ignoreMissingValueFiles'

            body_status_sync_comparedTo_source_helm_kubeVersion (str): KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
    uses the Kubernetes version of the target cluster.

            body_status_sync_comparedTo_source_helm_namespace (str): Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.

            body_status_sync_comparedTo_source_helm_parameters (List[str]): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_helm_parameters'

            body_status_sync_comparedTo_source_helm_passCredentials (bool): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_helm_passCredentials'

            body_status_sync_comparedTo_source_helm_releaseName (str): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_helm_releaseName'

            body_status_sync_comparedTo_source_helm_skipCrds (bool): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_helm_skipCrds'

            body_status_sync_comparedTo_source_helm_skipSchemaValidation (bool): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_helm_skipSchemaValidation'

            body_status_sync_comparedTo_source_helm_skipTests (bool): SkipTests skips test manifest installation step (Helm's --skip-tests).

            body_status_sync_comparedTo_source_helm_valueFiles (List[str]): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_helm_valueFiles'

            body_status_sync_comparedTo_source_helm_values (str): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_helm_values'

            body_status_sync_comparedTo_source_helm_valuesObject_raw (str): Raw is the underlying serialization of this object.

    TODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.

            body_status_sync_comparedTo_source_helm_version (str): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_helm_version'

            body_status_sync_comparedTo_source_kustomize_apiVersions (List[str]): APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,
    Argo CD uses the API versions of the target cluster. The format is [group/]version/kind.

            body_status_sync_comparedTo_source_kustomize_commonAnnotations (Dict[str, Any]): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_kustomize_commonAnnotations'

            body_status_sync_comparedTo_source_kustomize_commonAnnotationsEnvsubst (bool): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_kustomize_commonAnnotationsEnvsubst'

            body_status_sync_comparedTo_source_kustomize_commonLabels (Dict[str, Any]): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_kustomize_commonLabels'

            body_status_sync_comparedTo_source_kustomize_components (List[str]): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_kustomize_components'

            body_status_sync_comparedTo_source_kustomize_forceCommonAnnotations (bool): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_kustomize_forceCommonAnnotations'

            body_status_sync_comparedTo_source_kustomize_forceCommonLabels (bool): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_kustomize_forceCommonLabels'

            body_status_sync_comparedTo_source_kustomize_ignoreMissingComponents (bool): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_kustomize_ignoreMissingComponents'

            body_status_sync_comparedTo_source_kustomize_images (List[str]): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_kustomize_images'

            body_status_sync_comparedTo_source_kustomize_kubeVersion (str): KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD
    uses the Kubernetes version of the target cluster.

            body_status_sync_comparedTo_source_kustomize_labelIncludeTemplates (bool): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_kustomize_labelIncludeTemplates'

            body_status_sync_comparedTo_source_kustomize_labelWithoutSelector (bool): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_kustomize_labelWithoutSelector'

            body_status_sync_comparedTo_source_kustomize_namePrefix (str): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_kustomize_namePrefix'

            body_status_sync_comparedTo_source_kustomize_nameSuffix (str): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_kustomize_nameSuffix'

            body_status_sync_comparedTo_source_kustomize_namespace (str): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_kustomize_namespace'

            body_status_sync_comparedTo_source_kustomize_patches (List[str]): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_kustomize_patches'

            body_status_sync_comparedTo_source_kustomize_replicas (List[str]): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_kustomize_replicas'

            body_status_sync_comparedTo_source_kustomize_version (str): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_kustomize_version'

            body_status_sync_comparedTo_source_name (str): Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.

            body_status_sync_comparedTo_source_path (str): Path is a directory path within the Git repository, and is only valid for applications sourced from Git.

            body_status_sync_comparedTo_source_plugin_env (List[str]): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_plugin_env'

            body_status_sync_comparedTo_source_plugin_name (str): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_plugin_name'

            body_status_sync_comparedTo_source_plugin_parameters (List[str]): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_plugin_parameters'

            body_status_sync_comparedTo_source_ref (str): Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.

            body_status_sync_comparedTo_source_repoURL (str): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_source_repoURL'

            body_status_sync_comparedTo_source_targetRevision (str): TargetRevision defines the revision of the source to sync the application to.
    In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.
    In case of Helm, this is a semver tag for the Chart's version.

            body_status_sync_comparedTo_sources (List[str]): OpenAPI parameter corresponding to 'body_status_sync_comparedTo_sources'

            body_status_sync_revision (str): OpenAPI parameter corresponding to 'body_status_sync_revision'

            body_status_sync_revisions (List[str]): OpenAPI parameter corresponding to 'body_status_sync_revisions'

            body_status_sync_status (str): OpenAPI parameter corresponding to 'body_status_sync_status'

            param_validate (bool): OpenAPI parameter corresponding to 'param_validate'

            param_project (str): OpenAPI parameter corresponding to 'param_project'


        Returns:
            Dict[str, Any]: The JSON response from the API call.

        Raises:
            Exception: If the API request fails or returns an error.
    """
    logger.debug("Making PUT request to /api/v1/applications/{application.metadata.name}")

    params = {}
    data = {}

    if param_validate is not None:
        params["validate"] = str(param_validate).lower() if isinstance(param_validate, bool) else param_validate

    if param_project is not None:
        params["project"] = str(param_project).lower() if isinstance(param_project, bool) else param_project

    flat_body = {}
    if body_metadata_annotations is not None:
        flat_body["metadata_annotations"] = body_metadata_annotations
    if body_metadata_creationTimestamp is not None:
        flat_body["metadata_creationTimestamp"] = body_metadata_creationTimestamp
    if body_metadata_deletionGracePeriodSeconds is not None:
        flat_body["metadata_deletionGracePeriodSeconds"] = body_metadata_deletionGracePeriodSeconds
    if body_metadata_deletionTimestamp is not None:
        flat_body["metadata_deletionTimestamp"] = body_metadata_deletionTimestamp
    if body_metadata_finalizers is not None:
        flat_body["metadata_finalizers"] = body_metadata_finalizers
    if body_metadata_generateName is not None:
        flat_body["metadata_generateName"] = body_metadata_generateName
    if body_metadata_generation is not None:
        flat_body["metadata_generation"] = body_metadata_generation
    if body_metadata_labels is not None:
        flat_body["metadata_labels"] = body_metadata_labels
    if body_metadata_managedFields is not None:
        flat_body["metadata_managedFields"] = body_metadata_managedFields
    if body_metadata_name is not None:
        flat_body["metadata_name"] = body_metadata_name
    if body_metadata_namespace is not None:
        flat_body["metadata_namespace"] = body_metadata_namespace
    if body_metadata_ownerReferences is not None:
        flat_body["metadata_ownerReferences"] = body_metadata_ownerReferences
    if body_metadata_resourceVersion is not None:
        flat_body["metadata_resourceVersion"] = body_metadata_resourceVersion
    if body_metadata_selfLink is not None:
        flat_body["metadata_selfLink"] = body_metadata_selfLink
    if body_metadata_uid is not None:
        flat_body["metadata_uid"] = body_metadata_uid
    if body_operation_info is not None:
        flat_body["operation_info"] = body_operation_info
    if body_operation_initiatedBy_automated is not None:
        flat_body["operation_initiatedBy_automated"] = body_operation_initiatedBy_automated
    if body_operation_initiatedBy_username is not None:
        flat_body["operation_initiatedBy_username"] = body_operation_initiatedBy_username
    if body_operation_retry_backoff_duration is not None:
        flat_body["operation_retry_backoff_duration"] = body_operation_retry_backoff_duration
    if body_operation_retry_backoff_factor is not None:
        flat_body["operation_retry_backoff_factor"] = body_operation_retry_backoff_factor
    if body_operation_retry_backoff_maxDuration is not None:
        flat_body["operation_retry_backoff_maxDuration"] = body_operation_retry_backoff_maxDuration
    if body_operation_retry_limit is not None:
        flat_body["operation_retry_limit"] = body_operation_retry_limit
    if body_operation_sync_autoHealAttemptsCount is not None:
        flat_body["operation_sync_autoHealAttemptsCount"] = body_operation_sync_autoHealAttemptsCount
    if body_operation_sync_dryRun is not None:
        flat_body["operation_sync_dryRun"] = body_operation_sync_dryRun
    if body_operation_sync_manifests is not None:
        flat_body["operation_sync_manifests"] = body_operation_sync_manifests
    if body_operation_sync_prune is not None:
        flat_body["operation_sync_prune"] = body_operation_sync_prune
    if body_operation_sync_resources is not None:
        flat_body["operation_sync_resources"] = body_operation_sync_resources
    if body_operation_sync_revision is not None:
        flat_body["operation_sync_revision"] = body_operation_sync_revision
    if body_operation_sync_revisions is not None:
        flat_body["operation_sync_revisions"] = body_operation_sync_revisions
    if body_operation_sync_source_chart is not None:
        flat_body["operation_sync_source_chart"] = body_operation_sync_source_chart
    if body_operation_sync_source_directory_exclude is not None:
        flat_body["operation_sync_source_directory_exclude"] = body_operation_sync_source_directory_exclude
    if body_operation_sync_source_directory_include is not None:
        flat_body["operation_sync_source_directory_include"] = body_operation_sync_source_directory_include
    if body_operation_sync_source_directory_jsonnet_extVars is not None:
        flat_body["operation_sync_source_directory_jsonnet_extVars"] = (
            body_operation_sync_source_directory_jsonnet_extVars
        )
    if body_operation_sync_source_directory_jsonnet_libs is not None:
        flat_body["operation_sync_source_directory_jsonnet_libs"] = body_operation_sync_source_directory_jsonnet_libs
    if body_operation_sync_source_directory_jsonnet_tlas is not None:
        flat_body["operation_sync_source_directory_jsonnet_tlas"] = body_operation_sync_source_directory_jsonnet_tlas
    if body_operation_sync_source_directory_recurse is not None:
        flat_body["operation_sync_source_directory_recurse"] = body_operation_sync_source_directory_recurse
    if body_operation_sync_source_helm_apiVersions is not None:
        flat_body["operation_sync_source_helm_apiVersions"] = body_operation_sync_source_helm_apiVersions
    if body_operation_sync_source_helm_fileParameters is not None:
        flat_body["operation_sync_source_helm_fileParameters"] = body_operation_sync_source_helm_fileParameters
    if body_operation_sync_source_helm_ignoreMissingValueFiles is not None:
        flat_body["operation_sync_source_helm_ignoreMissingValueFiles"] = (
            body_operation_sync_source_helm_ignoreMissingValueFiles
        )
    if body_operation_sync_source_helm_kubeVersion is not None:
        flat_body["operation_sync_source_helm_kubeVersion"] = body_operation_sync_source_helm_kubeVersion
    if body_operation_sync_source_helm_namespace is not None:
        flat_body["operation_sync_source_helm_namespace"] = body_operation_sync_source_helm_namespace
    if body_operation_sync_source_helm_parameters is not None:
        flat_body["operation_sync_source_helm_parameters"] = body_operation_sync_source_helm_parameters
    if body_operation_sync_source_helm_passCredentials is not None:
        flat_body["operation_sync_source_helm_passCredentials"] = body_operation_sync_source_helm_passCredentials
    if body_operation_sync_source_helm_releaseName is not None:
        flat_body["operation_sync_source_helm_releaseName"] = body_operation_sync_source_helm_releaseName
    if body_operation_sync_source_helm_skipCrds is not None:
        flat_body["operation_sync_source_helm_skipCrds"] = body_operation_sync_source_helm_skipCrds
    if body_operation_sync_source_helm_skipSchemaValidation is not None:
        flat_body["operation_sync_source_helm_skipSchemaValidation"] = (
            body_operation_sync_source_helm_skipSchemaValidation
        )
    if body_operation_sync_source_helm_skipTests is not None:
        flat_body["operation_sync_source_helm_skipTests"] = body_operation_sync_source_helm_skipTests
    if body_operation_sync_source_helm_valueFiles is not None:
        flat_body["operation_sync_source_helm_valueFiles"] = body_operation_sync_source_helm_valueFiles
    if body_operation_sync_source_helm_values is not None:
        flat_body["operation_sync_source_helm_values"] = body_operation_sync_source_helm_values
    if body_operation_sync_source_helm_valuesObject_raw is not None:
        flat_body["operation_sync_source_helm_valuesObject_raw"] = body_operation_sync_source_helm_valuesObject_raw
    if body_operation_sync_source_helm_version is not None:
        flat_body["operation_sync_source_helm_version"] = body_operation_sync_source_helm_version
    if body_operation_sync_source_kustomize_apiVersions is not None:
        flat_body["operation_sync_source_kustomize_apiVersions"] = body_operation_sync_source_kustomize_apiVersions
    if body_operation_sync_source_kustomize_commonAnnotations is not None:
        flat_body["operation_sync_source_kustomize_commonAnnotations"] = (
            body_operation_sync_source_kustomize_commonAnnotations
        )
    if body_operation_sync_source_kustomize_commonAnnotationsEnvsubst is not None:
        flat_body["operation_sync_source_kustomize_commonAnnotationsEnvsubst"] = (
            body_operation_sync_source_kustomize_commonAnnotationsEnvsubst
        )
    if body_operation_sync_source_kustomize_commonLabels is not None:
        flat_body["operation_sync_source_kustomize_commonLabels"] = body_operation_sync_source_kustomize_commonLabels
    if body_operation_sync_source_kustomize_components is not None:
        flat_body["operation_sync_source_kustomize_components"] = body_operation_sync_source_kustomize_components
    if body_operation_sync_source_kustomize_forceCommonAnnotations is not None:
        flat_body["operation_sync_source_kustomize_forceCommonAnnotations"] = (
            body_operation_sync_source_kustomize_forceCommonAnnotations
        )
    if body_operation_sync_source_kustomize_forceCommonLabels is not None:
        flat_body["operation_sync_source_kustomize_forceCommonLabels"] = (
            body_operation_sync_source_kustomize_forceCommonLabels
        )
    if body_operation_sync_source_kustomize_ignoreMissingComponents is not None:
        flat_body["operation_sync_source_kustomize_ignoreMissingComponents"] = (
            body_operation_sync_source_kustomize_ignoreMissingComponents
        )
    if body_operation_sync_source_kustomize_images is not None:
        flat_body["operation_sync_source_kustomize_images"] = body_operation_sync_source_kustomize_images
    if body_operation_sync_source_kustomize_kubeVersion is not None:
        flat_body["operation_sync_source_kustomize_kubeVersion"] = body_operation_sync_source_kustomize_kubeVersion
    if body_operation_sync_source_kustomize_labelIncludeTemplates is not None:
        flat_body["operation_sync_source_kustomize_labelIncludeTemplates"] = (
            body_operation_sync_source_kustomize_labelIncludeTemplates
        )
    if body_operation_sync_source_kustomize_labelWithoutSelector is not None:
        flat_body["operation_sync_source_kustomize_labelWithoutSelector"] = (
            body_operation_sync_source_kustomize_labelWithoutSelector
        )
    if body_operation_sync_source_kustomize_namePrefix is not None:
        flat_body["operation_sync_source_kustomize_namePrefix"] = body_operation_sync_source_kustomize_namePrefix
    if body_operation_sync_source_kustomize_nameSuffix is not None:
        flat_body["operation_sync_source_kustomize_nameSuffix"] = body_operation_sync_source_kustomize_nameSuffix
    if body_operation_sync_source_kustomize_namespace is not None:
        flat_body["operation_sync_source_kustomize_namespace"] = body_operation_sync_source_kustomize_namespace
    if body_operation_sync_source_kustomize_patches is not None:
        flat_body["operation_sync_source_kustomize_patches"] = body_operation_sync_source_kustomize_patches
    if body_operation_sync_source_kustomize_replicas is not None:
        flat_body["operation_sync_source_kustomize_replicas"] = body_operation_sync_source_kustomize_replicas
    if body_operation_sync_source_kustomize_version is not None:
        flat_body["operation_sync_source_kustomize_version"] = body_operation_sync_source_kustomize_version
    if body_operation_sync_source_name is not None:
        flat_body["operation_sync_source_name"] = body_operation_sync_source_name
    if body_operation_sync_source_path is not None:
        flat_body["operation_sync_source_path"] = body_operation_sync_source_path
    if body_operation_sync_source_plugin_env is not None:
        flat_body["operation_sync_source_plugin_env"] = body_operation_sync_source_plugin_env
    if body_operation_sync_source_plugin_name is not None:
        flat_body["operation_sync_source_plugin_name"] = body_operation_sync_source_plugin_name
    if body_operation_sync_source_plugin_parameters is not None:
        flat_body["operation_sync_source_plugin_parameters"] = body_operation_sync_source_plugin_parameters
    if body_operation_sync_source_ref is not None:
        flat_body["operation_sync_source_ref"] = body_operation_sync_source_ref
    if body_operation_sync_source_repoURL is not None:
        flat_body["operation_sync_source_repoURL"] = body_operation_sync_source_repoURL
    if body_operation_sync_source_targetRevision is not None:
        flat_body["operation_sync_source_targetRevision"] = body_operation_sync_source_targetRevision
    if body_operation_sync_sources is not None:
        flat_body["operation_sync_sources"] = body_operation_sync_sources
    if body_operation_sync_syncOptions is not None:
        flat_body["operation_sync_syncOptions"] = body_operation_sync_syncOptions
    if body_operation_sync_syncStrategy_apply_force is not None:
        flat_body["operation_sync_syncStrategy_apply_force"] = body_operation_sync_syncStrategy_apply_force
    if body_operation_sync_syncStrategy_hook_syncStrategyApply_force is not None:
        flat_body["operation_sync_syncStrategy_hook_syncStrategyApply_force"] = (
            body_operation_sync_syncStrategy_hook_syncStrategyApply_force
        )
    if body_spec_destination_name is not None:
        flat_body["spec_destination_name"] = body_spec_destination_name
    if body_spec_destination_namespace is not None:
        flat_body["spec_destination_namespace"] = body_spec_destination_namespace
    if body_spec_destination_server is not None:
        flat_body["spec_destination_server"] = body_spec_destination_server
    if body_spec_ignoreDifferences is not None:
        flat_body["spec_ignoreDifferences"] = body_spec_ignoreDifferences
    if body_spec_info is not None:
        flat_body["spec_info"] = body_spec_info
    if body_spec_project is not None:
        flat_body["spec_project"] = body_spec_project
    if body_spec_revisionHistoryLimit is not None:
        flat_body["spec_revisionHistoryLimit"] = body_spec_revisionHistoryLimit
    if body_spec_source_chart is not None:
        flat_body["spec_source_chart"] = body_spec_source_chart
    if body_spec_source_directory_exclude is not None:
        flat_body["spec_source_directory_exclude"] = body_spec_source_directory_exclude
    if body_spec_source_directory_include is not None:
        flat_body["spec_source_directory_include"] = body_spec_source_directory_include
    if body_spec_source_directory_jsonnet_extVars is not None:
        flat_body["spec_source_directory_jsonnet_extVars"] = body_spec_source_directory_jsonnet_extVars
    if body_spec_source_directory_jsonnet_libs is not None:
        flat_body["spec_source_directory_jsonnet_libs"] = body_spec_source_directory_jsonnet_libs
    if body_spec_source_directory_jsonnet_tlas is not None:
        flat_body["spec_source_directory_jsonnet_tlas"] = body_spec_source_directory_jsonnet_tlas
    if body_spec_source_directory_recurse is not None:
        flat_body["spec_source_directory_recurse"] = body_spec_source_directory_recurse
    if body_spec_source_helm_apiVersions is not None:
        flat_body["spec_source_helm_apiVersions"] = body_spec_source_helm_apiVersions
    if body_spec_source_helm_fileParameters is not None:
        flat_body["spec_source_helm_fileParameters"] = body_spec_source_helm_fileParameters
    if body_spec_source_helm_ignoreMissingValueFiles is not None:
        flat_body["spec_source_helm_ignoreMissingValueFiles"] = body_spec_source_helm_ignoreMissingValueFiles
    if body_spec_source_helm_kubeVersion is not None:
        flat_body["spec_source_helm_kubeVersion"] = body_spec_source_helm_kubeVersion
    if body_spec_source_helm_namespace is not None:
        flat_body["spec_source_helm_namespace"] = body_spec_source_helm_namespace
    if body_spec_source_helm_parameters is not None:
        flat_body["spec_source_helm_parameters"] = body_spec_source_helm_parameters
    if body_spec_source_helm_passCredentials is not None:
        flat_body["spec_source_helm_passCredentials"] = body_spec_source_helm_passCredentials
    if body_spec_source_helm_releaseName is not None:
        flat_body["spec_source_helm_releaseName"] = body_spec_source_helm_releaseName
    if body_spec_source_helm_skipCrds is not None:
        flat_body["spec_source_helm_skipCrds"] = body_spec_source_helm_skipCrds
    if body_spec_source_helm_skipSchemaValidation is not None:
        flat_body["spec_source_helm_skipSchemaValidation"] = body_spec_source_helm_skipSchemaValidation
    if body_spec_source_helm_skipTests is not None:
        flat_body["spec_source_helm_skipTests"] = body_spec_source_helm_skipTests
    if body_spec_source_helm_valueFiles is not None:
        flat_body["spec_source_helm_valueFiles"] = body_spec_source_helm_valueFiles
    if body_spec_source_helm_values is not None:
        flat_body["spec_source_helm_values"] = body_spec_source_helm_values
    if body_spec_source_helm_valuesObject_raw is not None:
        flat_body["spec_source_helm_valuesObject_raw"] = body_spec_source_helm_valuesObject_raw
    if body_spec_source_helm_version is not None:
        flat_body["spec_source_helm_version"] = body_spec_source_helm_version
    if body_spec_source_kustomize_apiVersions is not None:
        flat_body["spec_source_kustomize_apiVersions"] = body_spec_source_kustomize_apiVersions
    if body_spec_source_kustomize_commonAnnotations is not None:
        flat_body["spec_source_kustomize_commonAnnotations"] = body_spec_source_kustomize_commonAnnotations
    if body_spec_source_kustomize_commonAnnotationsEnvsubst is not None:
        flat_body["spec_source_kustomize_commonAnnotationsEnvsubst"] = (
            body_spec_source_kustomize_commonAnnotationsEnvsubst
        )
    if body_spec_source_kustomize_commonLabels is not None:
        flat_body["spec_source_kustomize_commonLabels"] = body_spec_source_kustomize_commonLabels
    if body_spec_source_kustomize_components is not None:
        flat_body["spec_source_kustomize_components"] = body_spec_source_kustomize_components
    if body_spec_source_kustomize_forceCommonAnnotations is not None:
        flat_body["spec_source_kustomize_forceCommonAnnotations"] = body_spec_source_kustomize_forceCommonAnnotations
    if body_spec_source_kustomize_forceCommonLabels is not None:
        flat_body["spec_source_kustomize_forceCommonLabels"] = body_spec_source_kustomize_forceCommonLabels
    if body_spec_source_kustomize_ignoreMissingComponents is not None:
        flat_body["spec_source_kustomize_ignoreMissingComponents"] = body_spec_source_kustomize_ignoreMissingComponents
    if body_spec_source_kustomize_images is not None:
        flat_body["spec_source_kustomize_images"] = body_spec_source_kustomize_images
    if body_spec_source_kustomize_kubeVersion is not None:
        flat_body["spec_source_kustomize_kubeVersion"] = body_spec_source_kustomize_kubeVersion
    if body_spec_source_kustomize_labelIncludeTemplates is not None:
        flat_body["spec_source_kustomize_labelIncludeTemplates"] = body_spec_source_kustomize_labelIncludeTemplates
    if body_spec_source_kustomize_labelWithoutSelector is not None:
        flat_body["spec_source_kustomize_labelWithoutSelector"] = body_spec_source_kustomize_labelWithoutSelector
    if body_spec_source_kustomize_namePrefix is not None:
        flat_body["spec_source_kustomize_namePrefix"] = body_spec_source_kustomize_namePrefix
    if body_spec_source_kustomize_nameSuffix is not None:
        flat_body["spec_source_kustomize_nameSuffix"] = body_spec_source_kustomize_nameSuffix
    if body_spec_source_kustomize_namespace is not None:
        flat_body["spec_source_kustomize_namespace"] = body_spec_source_kustomize_namespace
    if body_spec_source_kustomize_patches is not None:
        flat_body["spec_source_kustomize_patches"] = body_spec_source_kustomize_patches
    if body_spec_source_kustomize_replicas is not None:
        flat_body["spec_source_kustomize_replicas"] = body_spec_source_kustomize_replicas
    if body_spec_source_kustomize_version is not None:
        flat_body["spec_source_kustomize_version"] = body_spec_source_kustomize_version
    if body_spec_source_name is not None:
        flat_body["spec_source_name"] = body_spec_source_name
    if body_spec_source_path is not None:
        flat_body["spec_source_path"] = body_spec_source_path
    if body_spec_source_plugin_env is not None:
        flat_body["spec_source_plugin_env"] = body_spec_source_plugin_env
    if body_spec_source_plugin_name is not None:
        flat_body["spec_source_plugin_name"] = body_spec_source_plugin_name
    if body_spec_source_plugin_parameters is not None:
        flat_body["spec_source_plugin_parameters"] = body_spec_source_plugin_parameters
    if body_spec_source_ref is not None:
        flat_body["spec_source_ref"] = body_spec_source_ref
    if body_spec_source_repoURL is not None:
        flat_body["spec_source_repoURL"] = body_spec_source_repoURL
    if body_spec_source_targetRevision is not None:
        flat_body["spec_source_targetRevision"] = body_spec_source_targetRevision
    if body_spec_sourceHydrator_drySource_path is not None:
        flat_body["spec_sourceHydrator_drySource_path"] = body_spec_sourceHydrator_drySource_path
    if body_spec_sourceHydrator_drySource_repoURL is not None:
        flat_body["spec_sourceHydrator_drySource_repoURL"] = body_spec_sourceHydrator_drySource_repoURL
    if body_spec_sourceHydrator_drySource_targetRevision is not None:
        flat_body["spec_sourceHydrator_drySource_targetRevision"] = body_spec_sourceHydrator_drySource_targetRevision
    if body_spec_sourceHydrator_hydrateTo_targetBranch is not None:
        flat_body["spec_sourceHydrator_hydrateTo_targetBranch"] = body_spec_sourceHydrator_hydrateTo_targetBranch
    if body_spec_sourceHydrator_syncSource_path is not None:
        flat_body["spec_sourceHydrator_syncSource_path"] = body_spec_sourceHydrator_syncSource_path
    if body_spec_sourceHydrator_syncSource_targetBranch is not None:
        flat_body["spec_sourceHydrator_syncSource_targetBranch"] = body_spec_sourceHydrator_syncSource_targetBranch
    if body_spec_sources is not None:
        flat_body["spec_sources"] = body_spec_sources
    if body_spec_syncPolicy_automated_allowEmpty is not None:
        flat_body["spec_syncPolicy_automated_allowEmpty"] = body_spec_syncPolicy_automated_allowEmpty
    if body_spec_syncPolicy_automated_enable is not None:
        flat_body["spec_syncPolicy_automated_enable"] = body_spec_syncPolicy_automated_enable
    if body_spec_syncPolicy_automated_prune is not None:
        flat_body["spec_syncPolicy_automated_prune"] = body_spec_syncPolicy_automated_prune
    if body_spec_syncPolicy_automated_selfHeal is not None:
        flat_body["spec_syncPolicy_automated_selfHeal"] = body_spec_syncPolicy_automated_selfHeal
    if body_spec_syncPolicy_managedNamespaceMetadata_annotations is not None:
        flat_body["spec_syncPolicy_managedNamespaceMetadata_annotations"] = (
            body_spec_syncPolicy_managedNamespaceMetadata_annotations
        )
    if body_spec_syncPolicy_managedNamespaceMetadata_labels is not None:
        flat_body["spec_syncPolicy_managedNamespaceMetadata_labels"] = (
            body_spec_syncPolicy_managedNamespaceMetadata_labels
        )
    if body_spec_syncPolicy_retry_backoff_duration is not None:
        flat_body["spec_syncPolicy_retry_backoff_duration"] = body_spec_syncPolicy_retry_backoff_duration
    if body_spec_syncPolicy_retry_backoff_factor is not None:
        flat_body["spec_syncPolicy_retry_backoff_factor"] = body_spec_syncPolicy_retry_backoff_factor
    if body_spec_syncPolicy_retry_backoff_maxDuration is not None:
        flat_body["spec_syncPolicy_retry_backoff_maxDuration"] = body_spec_syncPolicy_retry_backoff_maxDuration
    if body_spec_syncPolicy_retry_limit is not None:
        flat_body["spec_syncPolicy_retry_limit"] = body_spec_syncPolicy_retry_limit
    if body_spec_syncPolicy_syncOptions is not None:
        flat_body["spec_syncPolicy_syncOptions"] = body_spec_syncPolicy_syncOptions
    if body_status_conditions is not None:
        flat_body["status_conditions"] = body_status_conditions
    if body_status_controllerNamespace is not None:
        flat_body["status_controllerNamespace"] = body_status_controllerNamespace
    if body_status_health_lastTransitionTime is not None:
        flat_body["status_health_lastTransitionTime"] = body_status_health_lastTransitionTime
    if body_status_health_message is not None:
        flat_body["status_health_message"] = body_status_health_message
    if body_status_health_status is not None:
        flat_body["status_health_status"] = body_status_health_status
    if body_status_history is not None:
        flat_body["status_history"] = body_status_history
    if body_status_observedAt is not None:
        flat_body["status_observedAt"] = body_status_observedAt
    if body_status_operationState_finishedAt is not None:
        flat_body["status_operationState_finishedAt"] = body_status_operationState_finishedAt
    if body_status_operationState_message is not None:
        flat_body["status_operationState_message"] = body_status_operationState_message
    if body_status_operationState_operation_info is not None:
        flat_body["status_operationState_operation_info"] = body_status_operationState_operation_info
    if body_status_operationState_operation_initiatedBy_automated is not None:
        flat_body["status_operationState_operation_initiatedBy_automated"] = (
            body_status_operationState_operation_initiatedBy_automated
        )
    if body_status_operationState_operation_initiatedBy_username is not None:
        flat_body["status_operationState_operation_initiatedBy_username"] = (
            body_status_operationState_operation_initiatedBy_username
        )
    if body_status_operationState_operation_retry_backoff_duration is not None:
        flat_body["status_operationState_operation_retry_backoff_duration"] = (
            body_status_operationState_operation_retry_backoff_duration
        )
    if body_status_operationState_operation_retry_backoff_factor is not None:
        flat_body["status_operationState_operation_retry_backoff_factor"] = (
            body_status_operationState_operation_retry_backoff_factor
        )
    if body_status_operationState_operation_retry_backoff_maxDuration is not None:
        flat_body["status_operationState_operation_retry_backoff_maxDuration"] = (
            body_status_operationState_operation_retry_backoff_maxDuration
        )
    if body_status_operationState_operation_retry_limit is not None:
        flat_body["status_operationState_operation_retry_limit"] = body_status_operationState_operation_retry_limit
    if body_status_operationState_operation_sync_autoHealAttemptsCount is not None:
        flat_body["status_operationState_operation_sync_autoHealAttemptsCount"] = (
            body_status_operationState_operation_sync_autoHealAttemptsCount
        )
    if body_status_operationState_operation_sync_dryRun is not None:
        flat_body["status_operationState_operation_sync_dryRun"] = body_status_operationState_operation_sync_dryRun
    if body_status_operationState_operation_sync_manifests is not None:
        flat_body["status_operationState_operation_sync_manifests"] = (
            body_status_operationState_operation_sync_manifests
        )
    if body_status_operationState_operation_sync_prune is not None:
        flat_body["status_operationState_operation_sync_prune"] = body_status_operationState_operation_sync_prune
    if body_status_operationState_operation_sync_resources is not None:
        flat_body["status_operationState_operation_sync_resources"] = (
            body_status_operationState_operation_sync_resources
        )
    if body_status_operationState_operation_sync_revision is not None:
        flat_body["status_operationState_operation_sync_revision"] = body_status_operationState_operation_sync_revision
    if body_status_operationState_operation_sync_revisions is not None:
        flat_body["status_operationState_operation_sync_revisions"] = (
            body_status_operationState_operation_sync_revisions
        )
    if body_status_operationState_operation_sync_source_chart is not None:
        flat_body["status_operationState_operation_sync_source_chart"] = (
            body_status_operationState_operation_sync_source_chart
        )
    if body_status_operationState_operation_sync_source_directory_exclude is not None:
        flat_body["status_operationState_operation_sync_source_directory_exclude"] = (
            body_status_operationState_operation_sync_source_directory_exclude
        )
    if body_status_operationState_operation_sync_source_directory_include is not None:
        flat_body["status_operationState_operation_sync_source_directory_include"] = (
            body_status_operationState_operation_sync_source_directory_include
        )
    if body_status_operationState_operation_sync_source_directory_jsonnet_extVars is not None:
        flat_body["status_operationState_operation_sync_source_directory_jsonnet_extVars"] = (
            body_status_operationState_operation_sync_source_directory_jsonnet_extVars
        )
    if body_status_operationState_operation_sync_source_directory_jsonnet_libs is not None:
        flat_body["status_operationState_operation_sync_source_directory_jsonnet_libs"] = (
            body_status_operationState_operation_sync_source_directory_jsonnet_libs
        )
    if body_status_operationState_operation_sync_source_directory_jsonnet_tlas is not None:
        flat_body["status_operationState_operation_sync_source_directory_jsonnet_tlas"] = (
            body_status_operationState_operation_sync_source_directory_jsonnet_tlas
        )
    if body_status_operationState_operation_sync_source_directory_recurse is not None:
        flat_body["status_operationState_operation_sync_source_directory_recurse"] = (
            body_status_operationState_operation_sync_source_directory_recurse
        )
    if body_status_operationState_operation_sync_source_helm_apiVersions is not None:
        flat_body["status_operationState_operation_sync_source_helm_apiVersions"] = (
            body_status_operationState_operation_sync_source_helm_apiVersions
        )
    if body_status_operationState_operation_sync_source_helm_fileParameters is not None:
        flat_body["status_operationState_operation_sync_source_helm_fileParameters"] = (
            body_status_operationState_operation_sync_source_helm_fileParameters
        )
    if body_status_operationState_operation_sync_source_helm_ignoreMissingValueFiles is not None:
        flat_body["status_operationState_operation_sync_source_helm_ignoreMissingValueFiles"] = (
            body_status_operationState_operation_sync_source_helm_ignoreMissingValueFiles
        )
    if body_status_operationState_operation_sync_source_helm_kubeVersion is not None:
        flat_body["status_operationState_operation_sync_source_helm_kubeVersion"] = (
            body_status_operationState_operation_sync_source_helm_kubeVersion
        )
    if body_status_operationState_operation_sync_source_helm_namespace is not None:
        flat_body["status_operationState_operation_sync_source_helm_namespace"] = (
            body_status_operationState_operation_sync_source_helm_namespace
        )
    if body_status_operationState_operation_sync_source_helm_parameters is not None:
        flat_body["status_operationState_operation_sync_source_helm_parameters"] = (
            body_status_operationState_operation_sync_source_helm_parameters
        )
    if body_status_operationState_operation_sync_source_helm_passCredentials is not None:
        flat_body["status_operationState_operation_sync_source_helm_passCredentials"] = (
            body_status_operationState_operation_sync_source_helm_passCredentials
        )
    if body_status_operationState_operation_sync_source_helm_releaseName is not None:
        flat_body["status_operationState_operation_sync_source_helm_releaseName"] = (
            body_status_operationState_operation_sync_source_helm_releaseName
        )
    if body_status_operationState_operation_sync_source_helm_skipCrds is not None:
        flat_body["status_operationState_operation_sync_source_helm_skipCrds"] = (
            body_status_operationState_operation_sync_source_helm_skipCrds
        )
    if body_status_operationState_operation_sync_source_helm_skipSchemaValidation is not None:
        flat_body["status_operationState_operation_sync_source_helm_skipSchemaValidation"] = (
            body_status_operationState_operation_sync_source_helm_skipSchemaValidation
        )
    if body_status_operationState_operation_sync_source_helm_skipTests is not None:
        flat_body["status_operationState_operation_sync_source_helm_skipTests"] = (
            body_status_operationState_operation_sync_source_helm_skipTests
        )
    if body_status_operationState_operation_sync_source_helm_valueFiles is not None:
        flat_body["status_operationState_operation_sync_source_helm_valueFiles"] = (
            body_status_operationState_operation_sync_source_helm_valueFiles
        )
    if body_status_operationState_operation_sync_source_helm_values is not None:
        flat_body["status_operationState_operation_sync_source_helm_values"] = (
            body_status_operationState_operation_sync_source_helm_values
        )
    if body_status_operationState_operation_sync_source_helm_valuesObject_raw is not None:
        flat_body["status_operationState_operation_sync_source_helm_valuesObject_raw"] = (
            body_status_operationState_operation_sync_source_helm_valuesObject_raw
        )
    if body_status_operationState_operation_sync_source_helm_version is not None:
        flat_body["status_operationState_operation_sync_source_helm_version"] = (
            body_status_operationState_operation_sync_source_helm_version
        )
    if body_status_operationState_operation_sync_source_kustomize_apiVersions is not None:
        flat_body["status_operationState_operation_sync_source_kustomize_apiVersions"] = (
            body_status_operationState_operation_sync_source_kustomize_apiVersions
        )
    if body_status_operationState_operation_sync_source_kustomize_commonAnnotations is not None:
        flat_body["status_operationState_operation_sync_source_kustomize_commonAnnotations"] = (
            body_status_operationState_operation_sync_source_kustomize_commonAnnotations
        )
    if body_status_operationState_operation_sync_source_kustomize_commonAnnotationsEnvsubst is not None:
        flat_body["status_operationState_operation_sync_source_kustomize_commonAnnotationsEnvsubst"] = (
            body_status_operationState_operation_sync_source_kustomize_commonAnnotationsEnvsubst
        )
    if body_status_operationState_operation_sync_source_kustomize_commonLabels is not None:
        flat_body["status_operationState_operation_sync_source_kustomize_commonLabels"] = (
            body_status_operationState_operation_sync_source_kustomize_commonLabels
        )
    if body_status_operationState_operation_sync_source_kustomize_components is not None:
        flat_body["status_operationState_operation_sync_source_kustomize_components"] = (
            body_status_operationState_operation_sync_source_kustomize_components
        )
    if body_status_operationState_operation_sync_source_kustomize_forceCommonAnnotations is not None:
        flat_body["status_operationState_operation_sync_source_kustomize_forceCommonAnnotations"] = (
            body_status_operationState_operation_sync_source_kustomize_forceCommonAnnotations
        )
    if body_status_operationState_operation_sync_source_kustomize_forceCommonLabels is not None:
        flat_body["status_operationState_operation_sync_source_kustomize_forceCommonLabels"] = (
            body_status_operationState_operation_sync_source_kustomize_forceCommonLabels
        )
    if body_status_operationState_operation_sync_source_kustomize_ignoreMissingComponents is not None:
        flat_body["status_operationState_operation_sync_source_kustomize_ignoreMissingComponents"] = (
            body_status_operationState_operation_sync_source_kustomize_ignoreMissingComponents
        )
    if body_status_operationState_operation_sync_source_kustomize_images is not None:
        flat_body["status_operationState_operation_sync_source_kustomize_images"] = (
            body_status_operationState_operation_sync_source_kustomize_images
        )
    if body_status_operationState_operation_sync_source_kustomize_kubeVersion is not None:
        flat_body["status_operationState_operation_sync_source_kustomize_kubeVersion"] = (
            body_status_operationState_operation_sync_source_kustomize_kubeVersion
        )
    if body_status_operationState_operation_sync_source_kustomize_labelIncludeTemplates is not None:
        flat_body["status_operationState_operation_sync_source_kustomize_labelIncludeTemplates"] = (
            body_status_operationState_operation_sync_source_kustomize_labelIncludeTemplates
        )
    if body_status_operationState_operation_sync_source_kustomize_labelWithoutSelector is not None:
        flat_body["status_operationState_operation_sync_source_kustomize_labelWithoutSelector"] = (
            body_status_operationState_operation_sync_source_kustomize_labelWithoutSelector
        )
    if body_status_operationState_operation_sync_source_kustomize_namePrefix is not None:
        flat_body["status_operationState_operation_sync_source_kustomize_namePrefix"] = (
            body_status_operationState_operation_sync_source_kustomize_namePrefix
        )
    if body_status_operationState_operation_sync_source_kustomize_nameSuffix is not None:
        flat_body["status_operationState_operation_sync_source_kustomize_nameSuffix"] = (
            body_status_operationState_operation_sync_source_kustomize_nameSuffix
        )
    if body_status_operationState_operation_sync_source_kustomize_namespace is not None:
        flat_body["status_operationState_operation_sync_source_kustomize_namespace"] = (
            body_status_operationState_operation_sync_source_kustomize_namespace
        )
    if body_status_operationState_operation_sync_source_kustomize_patches is not None:
        flat_body["status_operationState_operation_sync_source_kustomize_patches"] = (
            body_status_operationState_operation_sync_source_kustomize_patches
        )
    if body_status_operationState_operation_sync_source_kustomize_replicas is not None:
        flat_body["status_operationState_operation_sync_source_kustomize_replicas"] = (
            body_status_operationState_operation_sync_source_kustomize_replicas
        )
    if body_status_operationState_operation_sync_source_kustomize_version is not None:
        flat_body["status_operationState_operation_sync_source_kustomize_version"] = (
            body_status_operationState_operation_sync_source_kustomize_version
        )
    if body_status_operationState_operation_sync_source_name is not None:
        flat_body["status_operationState_operation_sync_source_name"] = (
            body_status_operationState_operation_sync_source_name
        )
    if body_status_operationState_operation_sync_source_path is not None:
        flat_body["status_operationState_operation_sync_source_path"] = (
            body_status_operationState_operation_sync_source_path
        )
    if body_status_operationState_operation_sync_source_plugin_env is not None:
        flat_body["status_operationState_operation_sync_source_plugin_env"] = (
            body_status_operationState_operation_sync_source_plugin_env
        )
    if body_status_operationState_operation_sync_source_plugin_name is not None:
        flat_body["status_operationState_operation_sync_source_plugin_name"] = (
            body_status_operationState_operation_sync_source_plugin_name
        )
    if body_status_operationState_operation_sync_source_plugin_parameters is not None:
        flat_body["status_operationState_operation_sync_source_plugin_parameters"] = (
            body_status_operationState_operation_sync_source_plugin_parameters
        )
    if body_status_operationState_operation_sync_source_ref is not None:
        flat_body["status_operationState_operation_sync_source_ref"] = (
            body_status_operationState_operation_sync_source_ref
        )
    if body_status_operationState_operation_sync_source_repoURL is not None:
        flat_body["status_operationState_operation_sync_source_repoURL"] = (
            body_status_operationState_operation_sync_source_repoURL
        )
    if body_status_operationState_operation_sync_source_targetRevision is not None:
        flat_body["status_operationState_operation_sync_source_targetRevision"] = (
            body_status_operationState_operation_sync_source_targetRevision
        )
    if body_status_operationState_operation_sync_sources is not None:
        flat_body["status_operationState_operation_sync_sources"] = body_status_operationState_operation_sync_sources
    if body_status_operationState_operation_sync_syncOptions is not None:
        flat_body["status_operationState_operation_sync_syncOptions"] = (
            body_status_operationState_operation_sync_syncOptions
        )
    if body_status_operationState_operation_sync_syncStrategy_apply_force is not None:
        flat_body["status_operationState_operation_sync_syncStrategy_apply_force"] = (
            body_status_operationState_operation_sync_syncStrategy_apply_force
        )
    if body_status_operationState_operation_sync_syncStrategy_hook_syncStrategyApply_force is not None:
        flat_body["status_operationState_operation_sync_syncStrategy_hook_syncStrategyApply_force"] = (
            body_status_operationState_operation_sync_syncStrategy_hook_syncStrategyApply_force
        )
    if body_status_operationState_phase is not None:
        flat_body["status_operationState_phase"] = body_status_operationState_phase
    if body_status_operationState_retryCount is not None:
        flat_body["status_operationState_retryCount"] = body_status_operationState_retryCount
    if body_status_operationState_startedAt is not None:
        flat_body["status_operationState_startedAt"] = body_status_operationState_startedAt
    if body_status_operationState_syncResult_managedNamespaceMetadata_annotations is not None:
        flat_body["status_operationState_syncResult_managedNamespaceMetadata_annotations"] = (
            body_status_operationState_syncResult_managedNamespaceMetadata_annotations
        )
    if body_status_operationState_syncResult_managedNamespaceMetadata_labels is not None:
        flat_body["status_operationState_syncResult_managedNamespaceMetadata_labels"] = (
            body_status_operationState_syncResult_managedNamespaceMetadata_labels
        )
    if body_status_operationState_syncResult_resources is not None:
        flat_body["status_operationState_syncResult_resources"] = body_status_operationState_syncResult_resources
    if body_status_operationState_syncResult_revision is not None:
        flat_body["status_operationState_syncResult_revision"] = body_status_operationState_syncResult_revision
    if body_status_operationState_syncResult_revisions is not None:
        flat_body["status_operationState_syncResult_revisions"] = body_status_operationState_syncResult_revisions
    if body_status_operationState_syncResult_source_chart is not None:
        flat_body["status_operationState_syncResult_source_chart"] = body_status_operationState_syncResult_source_chart
    if body_status_operationState_syncResult_source_directory_exclude is not None:
        flat_body["status_operationState_syncResult_source_directory_exclude"] = (
            body_status_operationState_syncResult_source_directory_exclude
        )
    if body_status_operationState_syncResult_source_directory_include is not None:
        flat_body["status_operationState_syncResult_source_directory_include"] = (
            body_status_operationState_syncResult_source_directory_include
        )
    if body_status_operationState_syncResult_source_directory_jsonnet_extVars is not None:
        flat_body["status_operationState_syncResult_source_directory_jsonnet_extVars"] = (
            body_status_operationState_syncResult_source_directory_jsonnet_extVars
        )
    if body_status_operationState_syncResult_source_directory_jsonnet_libs is not None:
        flat_body["status_operationState_syncResult_source_directory_jsonnet_libs"] = (
            body_status_operationState_syncResult_source_directory_jsonnet_libs
        )
    if body_status_operationState_syncResult_source_directory_jsonnet_tlas is not None:
        flat_body["status_operationState_syncResult_source_directory_jsonnet_tlas"] = (
            body_status_operationState_syncResult_source_directory_jsonnet_tlas
        )
    if body_status_operationState_syncResult_source_directory_recurse is not None:
        flat_body["status_operationState_syncResult_source_directory_recurse"] = (
            body_status_operationState_syncResult_source_directory_recurse
        )
    if body_status_operationState_syncResult_source_helm_apiVersions is not None:
        flat_body["status_operationState_syncResult_source_helm_apiVersions"] = (
            body_status_operationState_syncResult_source_helm_apiVersions
        )
    if body_status_operationState_syncResult_source_helm_fileParameters is not None:
        flat_body["status_operationState_syncResult_source_helm_fileParameters"] = (
            body_status_operationState_syncResult_source_helm_fileParameters
        )
    if body_status_operationState_syncResult_source_helm_ignoreMissingValueFiles is not None:
        flat_body["status_operationState_syncResult_source_helm_ignoreMissingValueFiles"] = (
            body_status_operationState_syncResult_source_helm_ignoreMissingValueFiles
        )
    if body_status_operationState_syncResult_source_helm_kubeVersion is not None:
        flat_body["status_operationState_syncResult_source_helm_kubeVersion"] = (
            body_status_operationState_syncResult_source_helm_kubeVersion
        )
    if body_status_operationState_syncResult_source_helm_namespace is not None:
        flat_body["status_operationState_syncResult_source_helm_namespace"] = (
            body_status_operationState_syncResult_source_helm_namespace
        )
    if body_status_operationState_syncResult_source_helm_parameters is not None:
        flat_body["status_operationState_syncResult_source_helm_parameters"] = (
            body_status_operationState_syncResult_source_helm_parameters
        )
    if body_status_operationState_syncResult_source_helm_passCredentials is not None:
        flat_body["status_operationState_syncResult_source_helm_passCredentials"] = (
            body_status_operationState_syncResult_source_helm_passCredentials
        )
    if body_status_operationState_syncResult_source_helm_releaseName is not None:
        flat_body["status_operationState_syncResult_source_helm_releaseName"] = (
            body_status_operationState_syncResult_source_helm_releaseName
        )
    if body_status_operationState_syncResult_source_helm_skipCrds is not None:
        flat_body["status_operationState_syncResult_source_helm_skipCrds"] = (
            body_status_operationState_syncResult_source_helm_skipCrds
        )
    if body_status_operationState_syncResult_source_helm_skipSchemaValidation is not None:
        flat_body["status_operationState_syncResult_source_helm_skipSchemaValidation"] = (
            body_status_operationState_syncResult_source_helm_skipSchemaValidation
        )
    if body_status_operationState_syncResult_source_helm_skipTests is not None:
        flat_body["status_operationState_syncResult_source_helm_skipTests"] = (
            body_status_operationState_syncResult_source_helm_skipTests
        )
    if body_status_operationState_syncResult_source_helm_valueFiles is not None:
        flat_body["status_operationState_syncResult_source_helm_valueFiles"] = (
            body_status_operationState_syncResult_source_helm_valueFiles
        )
    if body_status_operationState_syncResult_source_helm_values is not None:
        flat_body["status_operationState_syncResult_source_helm_values"] = (
            body_status_operationState_syncResult_source_helm_values
        )
    if body_status_operationState_syncResult_source_helm_valuesObject_raw is not None:
        flat_body["status_operationState_syncResult_source_helm_valuesObject_raw"] = (
            body_status_operationState_syncResult_source_helm_valuesObject_raw
        )
    if body_status_operationState_syncResult_source_helm_version is not None:
        flat_body["status_operationState_syncResult_source_helm_version"] = (
            body_status_operationState_syncResult_source_helm_version
        )
    if body_status_operationState_syncResult_source_kustomize_apiVersions is not None:
        flat_body["status_operationState_syncResult_source_kustomize_apiVersions"] = (
            body_status_operationState_syncResult_source_kustomize_apiVersions
        )
    if body_status_operationState_syncResult_source_kustomize_commonAnnotations is not None:
        flat_body["status_operationState_syncResult_source_kustomize_commonAnnotations"] = (
            body_status_operationState_syncResult_source_kustomize_commonAnnotations
        )
    if body_status_operationState_syncResult_source_kustomize_commonAnnotationsEnvsubst is not None:
        flat_body["status_operationState_syncResult_source_kustomize_commonAnnotationsEnvsubst"] = (
            body_status_operationState_syncResult_source_kustomize_commonAnnotationsEnvsubst
        )
    if body_status_operationState_syncResult_source_kustomize_commonLabels is not None:
        flat_body["status_operationState_syncResult_source_kustomize_commonLabels"] = (
            body_status_operationState_syncResult_source_kustomize_commonLabels
        )
    if body_status_operationState_syncResult_source_kustomize_components is not None:
        flat_body["status_operationState_syncResult_source_kustomize_components"] = (
            body_status_operationState_syncResult_source_kustomize_components
        )
    if body_status_operationState_syncResult_source_kustomize_forceCommonAnnotations is not None:
        flat_body["status_operationState_syncResult_source_kustomize_forceCommonAnnotations"] = (
            body_status_operationState_syncResult_source_kustomize_forceCommonAnnotations
        )
    if body_status_operationState_syncResult_source_kustomize_forceCommonLabels is not None:
        flat_body["status_operationState_syncResult_source_kustomize_forceCommonLabels"] = (
            body_status_operationState_syncResult_source_kustomize_forceCommonLabels
        )
    if body_status_operationState_syncResult_source_kustomize_ignoreMissingComponents is not None:
        flat_body["status_operationState_syncResult_source_kustomize_ignoreMissingComponents"] = (
            body_status_operationState_syncResult_source_kustomize_ignoreMissingComponents
        )
    if body_status_operationState_syncResult_source_kustomize_images is not None:
        flat_body["status_operationState_syncResult_source_kustomize_images"] = (
            body_status_operationState_syncResult_source_kustomize_images
        )
    if body_status_operationState_syncResult_source_kustomize_kubeVersion is not None:
        flat_body["status_operationState_syncResult_source_kustomize_kubeVersion"] = (
            body_status_operationState_syncResult_source_kustomize_kubeVersion
        )
    if body_status_operationState_syncResult_source_kustomize_labelIncludeTemplates is not None:
        flat_body["status_operationState_syncResult_source_kustomize_labelIncludeTemplates"] = (
            body_status_operationState_syncResult_source_kustomize_labelIncludeTemplates
        )
    if body_status_operationState_syncResult_source_kustomize_labelWithoutSelector is not None:
        flat_body["status_operationState_syncResult_source_kustomize_labelWithoutSelector"] = (
            body_status_operationState_syncResult_source_kustomize_labelWithoutSelector
        )
    if body_status_operationState_syncResult_source_kustomize_namePrefix is not None:
        flat_body["status_operationState_syncResult_source_kustomize_namePrefix"] = (
            body_status_operationState_syncResult_source_kustomize_namePrefix
        )
    if body_status_operationState_syncResult_source_kustomize_nameSuffix is not None:
        flat_body["status_operationState_syncResult_source_kustomize_nameSuffix"] = (
            body_status_operationState_syncResult_source_kustomize_nameSuffix
        )
    if body_status_operationState_syncResult_source_kustomize_namespace is not None:
        flat_body["status_operationState_syncResult_source_kustomize_namespace"] = (
            body_status_operationState_syncResult_source_kustomize_namespace
        )
    if body_status_operationState_syncResult_source_kustomize_patches is not None:
        flat_body["status_operationState_syncResult_source_kustomize_patches"] = (
            body_status_operationState_syncResult_source_kustomize_patches
        )
    if body_status_operationState_syncResult_source_kustomize_replicas is not None:
        flat_body["status_operationState_syncResult_source_kustomize_replicas"] = (
            body_status_operationState_syncResult_source_kustomize_replicas
        )
    if body_status_operationState_syncResult_source_kustomize_version is not None:
        flat_body["status_operationState_syncResult_source_kustomize_version"] = (
            body_status_operationState_syncResult_source_kustomize_version
        )
    if body_status_operationState_syncResult_source_name is not None:
        flat_body["status_operationState_syncResult_source_name"] = body_status_operationState_syncResult_source_name
    if body_status_operationState_syncResult_source_path is not None:
        flat_body["status_operationState_syncResult_source_path"] = body_status_operationState_syncResult_source_path
    if body_status_operationState_syncResult_source_plugin_env is not None:
        flat_body["status_operationState_syncResult_source_plugin_env"] = (
            body_status_operationState_syncResult_source_plugin_env
        )
    if body_status_operationState_syncResult_source_plugin_name is not None:
        flat_body["status_operationState_syncResult_source_plugin_name"] = (
            body_status_operationState_syncResult_source_plugin_name
        )
    if body_status_operationState_syncResult_source_plugin_parameters is not None:
        flat_body["status_operationState_syncResult_source_plugin_parameters"] = (
            body_status_operationState_syncResult_source_plugin_parameters
        )
    if body_status_operationState_syncResult_source_ref is not None:
        flat_body["status_operationState_syncResult_source_ref"] = body_status_operationState_syncResult_source_ref
    if body_status_operationState_syncResult_source_repoURL is not None:
        flat_body["status_operationState_syncResult_source_repoURL"] = (
            body_status_operationState_syncResult_source_repoURL
        )
    if body_status_operationState_syncResult_source_targetRevision is not None:
        flat_body["status_operationState_syncResult_source_targetRevision"] = (
            body_status_operationState_syncResult_source_targetRevision
        )
    if body_status_operationState_syncResult_sources is not None:
        flat_body["status_operationState_syncResult_sources"] = body_status_operationState_syncResult_sources
    if body_status_reconciledAt is not None:
        flat_body["status_reconciledAt"] = body_status_reconciledAt
    if body_status_resourceHealthSource is not None:
        flat_body["status_resourceHealthSource"] = body_status_resourceHealthSource
    if body_status_resources is not None:
        flat_body["status_resources"] = body_status_resources
    if body_status_sourceHydrator_currentOperation_drySHA is not None:
        flat_body["status_sourceHydrator_currentOperation_drySHA"] = body_status_sourceHydrator_currentOperation_drySHA
    if body_status_sourceHydrator_currentOperation_finishedAt is not None:
        flat_body["status_sourceHydrator_currentOperation_finishedAt"] = (
            body_status_sourceHydrator_currentOperation_finishedAt
        )
    if body_status_sourceHydrator_currentOperation_hydratedSHA is not None:
        flat_body["status_sourceHydrator_currentOperation_hydratedSHA"] = (
            body_status_sourceHydrator_currentOperation_hydratedSHA
        )
    if body_status_sourceHydrator_currentOperation_message is not None:
        flat_body["status_sourceHydrator_currentOperation_message"] = (
            body_status_sourceHydrator_currentOperation_message
        )
    if body_status_sourceHydrator_currentOperation_phase is not None:
        flat_body["status_sourceHydrator_currentOperation_phase"] = body_status_sourceHydrator_currentOperation_phase
    if body_status_sourceHydrator_currentOperation_sourceHydrator_drySource_path is not None:
        flat_body["status_sourceHydrator_currentOperation_sourceHydrator_drySource_path"] = (
            body_status_sourceHydrator_currentOperation_sourceHydrator_drySource_path
        )
    if body_status_sourceHydrator_currentOperation_sourceHydrator_drySource_repoURL is not None:
        flat_body["status_sourceHydrator_currentOperation_sourceHydrator_drySource_repoURL"] = (
            body_status_sourceHydrator_currentOperation_sourceHydrator_drySource_repoURL
        )
    if body_status_sourceHydrator_currentOperation_sourceHydrator_drySource_targetRevision is not None:
        flat_body["status_sourceHydrator_currentOperation_sourceHydrator_drySource_targetRevision"] = (
            body_status_sourceHydrator_currentOperation_sourceHydrator_drySource_targetRevision
        )
    if body_status_sourceHydrator_currentOperation_sourceHydrator_hydrateTo_targetBranch is not None:
        flat_body["status_sourceHydrator_currentOperation_sourceHydrator_hydrateTo_targetBranch"] = (
            body_status_sourceHydrator_currentOperation_sourceHydrator_hydrateTo_targetBranch
        )
    if body_status_sourceHydrator_currentOperation_sourceHydrator_syncSource_path is not None:
        flat_body["status_sourceHydrator_currentOperation_sourceHydrator_syncSource_path"] = (
            body_status_sourceHydrator_currentOperation_sourceHydrator_syncSource_path
        )
    if body_status_sourceHydrator_currentOperation_sourceHydrator_syncSource_targetBranch is not None:
        flat_body["status_sourceHydrator_currentOperation_sourceHydrator_syncSource_targetBranch"] = (
            body_status_sourceHydrator_currentOperation_sourceHydrator_syncSource_targetBranch
        )
    if body_status_sourceHydrator_currentOperation_startedAt is not None:
        flat_body["status_sourceHydrator_currentOperation_startedAt"] = (
            body_status_sourceHydrator_currentOperation_startedAt
        )
    if body_status_sourceHydrator_lastSuccessfulOperation_drySHA is not None:
        flat_body["status_sourceHydrator_lastSuccessfulOperation_drySHA"] = (
            body_status_sourceHydrator_lastSuccessfulOperation_drySHA
        )
    if body_status_sourceHydrator_lastSuccessfulOperation_hydratedSHA is not None:
        flat_body["status_sourceHydrator_lastSuccessfulOperation_hydratedSHA"] = (
            body_status_sourceHydrator_lastSuccessfulOperation_hydratedSHA
        )
    if body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_drySource_path is not None:
        flat_body["status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_drySource_path"] = (
            body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_drySource_path
        )
    if body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_drySource_repoURL is not None:
        flat_body["status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_drySource_repoURL"] = (
            body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_drySource_repoURL
        )
    if body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_drySource_targetRevision is not None:
        flat_body["status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_drySource_targetRevision"] = (
            body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_drySource_targetRevision
        )
    if body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_hydrateTo_targetBranch is not None:
        flat_body["status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_hydrateTo_targetBranch"] = (
            body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_hydrateTo_targetBranch
        )
    if body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_syncSource_path is not None:
        flat_body["status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_syncSource_path"] = (
            body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_syncSource_path
        )
    if body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_syncSource_targetBranch is not None:
        flat_body["status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_syncSource_targetBranch"] = (
            body_status_sourceHydrator_lastSuccessfulOperation_sourceHydrator_syncSource_targetBranch
        )
    if body_status_sourceType is not None:
        flat_body["status_sourceType"] = body_status_sourceType
    if body_status_sourceTypes is not None:
        flat_body["status_sourceTypes"] = body_status_sourceTypes
    if body_status_summary_externalURLs is not None:
        flat_body["status_summary_externalURLs"] = body_status_summary_externalURLs
    if body_status_summary_images is not None:
        flat_body["status_summary_images"] = body_status_summary_images
    if body_status_sync_comparedTo_destination_name is not None:
        flat_body["status_sync_comparedTo_destination_name"] = body_status_sync_comparedTo_destination_name
    if body_status_sync_comparedTo_destination_namespace is not None:
        flat_body["status_sync_comparedTo_destination_namespace"] = body_status_sync_comparedTo_destination_namespace
    if body_status_sync_comparedTo_destination_server is not None:
        flat_body["status_sync_comparedTo_destination_server"] = body_status_sync_comparedTo_destination_server
    if body_status_sync_comparedTo_ignoreDifferences is not None:
        flat_body["status_sync_comparedTo_ignoreDifferences"] = body_status_sync_comparedTo_ignoreDifferences
    if body_status_sync_comparedTo_source_chart is not None:
        flat_body["status_sync_comparedTo_source_chart"] = body_status_sync_comparedTo_source_chart
    if body_status_sync_comparedTo_source_directory_exclude is not None:
        flat_body["status_sync_comparedTo_source_directory_exclude"] = (
            body_status_sync_comparedTo_source_directory_exclude
        )
    if body_status_sync_comparedTo_source_directory_include is not None:
        flat_body["status_sync_comparedTo_source_directory_include"] = (
            body_status_sync_comparedTo_source_directory_include
        )
    if body_status_sync_comparedTo_source_directory_jsonnet_extVars is not None:
        flat_body["status_sync_comparedTo_source_directory_jsonnet_extVars"] = (
            body_status_sync_comparedTo_source_directory_jsonnet_extVars
        )
    if body_status_sync_comparedTo_source_directory_jsonnet_libs is not None:
        flat_body["status_sync_comparedTo_source_directory_jsonnet_libs"] = (
            body_status_sync_comparedTo_source_directory_jsonnet_libs
        )
    if body_status_sync_comparedTo_source_directory_jsonnet_tlas is not None:
        flat_body["status_sync_comparedTo_source_directory_jsonnet_tlas"] = (
            body_status_sync_comparedTo_source_directory_jsonnet_tlas
        )
    if body_status_sync_comparedTo_source_directory_recurse is not None:
        flat_body["status_sync_comparedTo_source_directory_recurse"] = (
            body_status_sync_comparedTo_source_directory_recurse
        )
    if body_status_sync_comparedTo_source_helm_apiVersions is not None:
        flat_body["status_sync_comparedTo_source_helm_apiVersions"] = (
            body_status_sync_comparedTo_source_helm_apiVersions
        )
    if body_status_sync_comparedTo_source_helm_fileParameters is not None:
        flat_body["status_sync_comparedTo_source_helm_fileParameters"] = (
            body_status_sync_comparedTo_source_helm_fileParameters
        )
    if body_status_sync_comparedTo_source_helm_ignoreMissingValueFiles is not None:
        flat_body["status_sync_comparedTo_source_helm_ignoreMissingValueFiles"] = (
            body_status_sync_comparedTo_source_helm_ignoreMissingValueFiles
        )
    if body_status_sync_comparedTo_source_helm_kubeVersion is not None:
        flat_body["status_sync_comparedTo_source_helm_kubeVersion"] = (
            body_status_sync_comparedTo_source_helm_kubeVersion
        )
    if body_status_sync_comparedTo_source_helm_namespace is not None:
        flat_body["status_sync_comparedTo_source_helm_namespace"] = body_status_sync_comparedTo_source_helm_namespace
    if body_status_sync_comparedTo_source_helm_parameters is not None:
        flat_body["status_sync_comparedTo_source_helm_parameters"] = body_status_sync_comparedTo_source_helm_parameters
    if body_status_sync_comparedTo_source_helm_passCredentials is not None:
        flat_body["status_sync_comparedTo_source_helm_passCredentials"] = (
            body_status_sync_comparedTo_source_helm_passCredentials
        )
    if body_status_sync_comparedTo_source_helm_releaseName is not None:
        flat_body["status_sync_comparedTo_source_helm_releaseName"] = (
            body_status_sync_comparedTo_source_helm_releaseName
        )
    if body_status_sync_comparedTo_source_helm_skipCrds is not None:
        flat_body["status_sync_comparedTo_source_helm_skipCrds"] = body_status_sync_comparedTo_source_helm_skipCrds
    if body_status_sync_comparedTo_source_helm_skipSchemaValidation is not None:
        flat_body["status_sync_comparedTo_source_helm_skipSchemaValidation"] = (
            body_status_sync_comparedTo_source_helm_skipSchemaValidation
        )
    if body_status_sync_comparedTo_source_helm_skipTests is not None:
        flat_body["status_sync_comparedTo_source_helm_skipTests"] = body_status_sync_comparedTo_source_helm_skipTests
    if body_status_sync_comparedTo_source_helm_valueFiles is not None:
        flat_body["status_sync_comparedTo_source_helm_valueFiles"] = body_status_sync_comparedTo_source_helm_valueFiles
    if body_status_sync_comparedTo_source_helm_values is not None:
        flat_body["status_sync_comparedTo_source_helm_values"] = body_status_sync_comparedTo_source_helm_values
    if body_status_sync_comparedTo_source_helm_valuesObject_raw is not None:
        flat_body["status_sync_comparedTo_source_helm_valuesObject_raw"] = (
            body_status_sync_comparedTo_source_helm_valuesObject_raw
        )
    if body_status_sync_comparedTo_source_helm_version is not None:
        flat_body["status_sync_comparedTo_source_helm_version"] = body_status_sync_comparedTo_source_helm_version
    if body_status_sync_comparedTo_source_kustomize_apiVersions is not None:
        flat_body["status_sync_comparedTo_source_kustomize_apiVersions"] = (
            body_status_sync_comparedTo_source_kustomize_apiVersions
        )
    if body_status_sync_comparedTo_source_kustomize_commonAnnotations is not None:
        flat_body["status_sync_comparedTo_source_kustomize_commonAnnotations"] = (
            body_status_sync_comparedTo_source_kustomize_commonAnnotations
        )
    if body_status_sync_comparedTo_source_kustomize_commonAnnotationsEnvsubst is not None:
        flat_body["status_sync_comparedTo_source_kustomize_commonAnnotationsEnvsubst"] = (
            body_status_sync_comparedTo_source_kustomize_commonAnnotationsEnvsubst
        )
    if body_status_sync_comparedTo_source_kustomize_commonLabels is not None:
        flat_body["status_sync_comparedTo_source_kustomize_commonLabels"] = (
            body_status_sync_comparedTo_source_kustomize_commonLabels
        )
    if body_status_sync_comparedTo_source_kustomize_components is not None:
        flat_body["status_sync_comparedTo_source_kustomize_components"] = (
            body_status_sync_comparedTo_source_kustomize_components
        )
    if body_status_sync_comparedTo_source_kustomize_forceCommonAnnotations is not None:
        flat_body["status_sync_comparedTo_source_kustomize_forceCommonAnnotations"] = (
            body_status_sync_comparedTo_source_kustomize_forceCommonAnnotations
        )
    if body_status_sync_comparedTo_source_kustomize_forceCommonLabels is not None:
        flat_body["status_sync_comparedTo_source_kustomize_forceCommonLabels"] = (
            body_status_sync_comparedTo_source_kustomize_forceCommonLabels
        )
    if body_status_sync_comparedTo_source_kustomize_ignoreMissingComponents is not None:
        flat_body["status_sync_comparedTo_source_kustomize_ignoreMissingComponents"] = (
            body_status_sync_comparedTo_source_kustomize_ignoreMissingComponents
        )
    if body_status_sync_comparedTo_source_kustomize_images is not None:
        flat_body["status_sync_comparedTo_source_kustomize_images"] = (
            body_status_sync_comparedTo_source_kustomize_images
        )
    if body_status_sync_comparedTo_source_kustomize_kubeVersion is not None:
        flat_body["status_sync_comparedTo_source_kustomize_kubeVersion"] = (
            body_status_sync_comparedTo_source_kustomize_kubeVersion
        )
    if body_status_sync_comparedTo_source_kustomize_labelIncludeTemplates is not None:
        flat_body["status_sync_comparedTo_source_kustomize_labelIncludeTemplates"] = (
            body_status_sync_comparedTo_source_kustomize_labelIncludeTemplates
        )
    if body_status_sync_comparedTo_source_kustomize_labelWithoutSelector is not None:
        flat_body["status_sync_comparedTo_source_kustomize_labelWithoutSelector"] = (
            body_status_sync_comparedTo_source_kustomize_labelWithoutSelector
        )
    if body_status_sync_comparedTo_source_kustomize_namePrefix is not None:
        flat_body["status_sync_comparedTo_source_kustomize_namePrefix"] = (
            body_status_sync_comparedTo_source_kustomize_namePrefix
        )
    if body_status_sync_comparedTo_source_kustomize_nameSuffix is not None:
        flat_body["status_sync_comparedTo_source_kustomize_nameSuffix"] = (
            body_status_sync_comparedTo_source_kustomize_nameSuffix
        )
    if body_status_sync_comparedTo_source_kustomize_namespace is not None:
        flat_body["status_sync_comparedTo_source_kustomize_namespace"] = (
            body_status_sync_comparedTo_source_kustomize_namespace
        )
    if body_status_sync_comparedTo_source_kustomize_patches is not None:
        flat_body["status_sync_comparedTo_source_kustomize_patches"] = (
            body_status_sync_comparedTo_source_kustomize_patches
        )
    if body_status_sync_comparedTo_source_kustomize_replicas is not None:
        flat_body["status_sync_comparedTo_source_kustomize_replicas"] = (
            body_status_sync_comparedTo_source_kustomize_replicas
        )
    if body_status_sync_comparedTo_source_kustomize_version is not None:
        flat_body["status_sync_comparedTo_source_kustomize_version"] = (
            body_status_sync_comparedTo_source_kustomize_version
        )
    if body_status_sync_comparedTo_source_name is not None:
        flat_body["status_sync_comparedTo_source_name"] = body_status_sync_comparedTo_source_name
    if body_status_sync_comparedTo_source_path is not None:
        flat_body["status_sync_comparedTo_source_path"] = body_status_sync_comparedTo_source_path
    if body_status_sync_comparedTo_source_plugin_env is not None:
        flat_body["status_sync_comparedTo_source_plugin_env"] = body_status_sync_comparedTo_source_plugin_env
    if body_status_sync_comparedTo_source_plugin_name is not None:
        flat_body["status_sync_comparedTo_source_plugin_name"] = body_status_sync_comparedTo_source_plugin_name
    if body_status_sync_comparedTo_source_plugin_parameters is not None:
        flat_body["status_sync_comparedTo_source_plugin_parameters"] = (
            body_status_sync_comparedTo_source_plugin_parameters
        )
    if body_status_sync_comparedTo_source_ref is not None:
        flat_body["status_sync_comparedTo_source_ref"] = body_status_sync_comparedTo_source_ref
    if body_status_sync_comparedTo_source_repoURL is not None:
        flat_body["status_sync_comparedTo_source_repoURL"] = body_status_sync_comparedTo_source_repoURL
    if body_status_sync_comparedTo_source_targetRevision is not None:
        flat_body["status_sync_comparedTo_source_targetRevision"] = body_status_sync_comparedTo_source_targetRevision
    if body_status_sync_comparedTo_sources is not None:
        flat_body["status_sync_comparedTo_sources"] = body_status_sync_comparedTo_sources
    if body_status_sync_revision is not None:
        flat_body["status_sync_revision"] = body_status_sync_revision
    if body_status_sync_revisions is not None:
        flat_body["status_sync_revisions"] = body_status_sync_revisions
    if body_status_sync_status is not None:
        flat_body["status_sync_status"] = body_status_sync_status
    data = assemble_nested_body(flat_body)

    success, response = await make_api_request(
        f"/api/v1/applications/{path_application_metadata_name}", method="PUT", params=params, data=data
    )

    if not success:
        logger.error(f"Request failed: {response.get('error')}")
        return {"error": response.get("error", "Request failed")}
    return response

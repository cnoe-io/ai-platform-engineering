[project]
name = "agent_argocd"
version = "0.1.0"
description = "An ArgoCD natural language agent using LangChain, LangGraph, and MCP."
authors = [
  {name = "Sri Aradhyula", email = "sraradhy@cisco.com"}
]
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
  "a2a-sdk (==0.2.16)",
  "agentevals (>=0.0.7)",
  "click (>=8.2.0)",
  "langchain-core (>=0.3.60)",
  "langchain-mcp-adapters (>=0.1.0)",
  "langgraph (==0.5.3)",
  "pytest (>=8.3.5)",
  "tabulate (>=0.9.0)",
  "uv",
  "rich (>=14.0.0,<15.0.0)",
  "sseclient (>=0.0.27,<0.0.28)",
  "cnoe-agent-utils (==0.2.0)",
  "python-dotenv (>=1.0.0)",
  "fastmcp (>=0.1.0)",
  "fastapi (>=0.100.0)",
  "mcp-argocd",
]

[tool.poetry.scripts]
agent_argocd_a2a = "agent_argocd.protocol_bindings.a2a_server.__main__:main"
agent_argocd_mcp = "agent_argocd.mcp.argocd.mcp_argocd.server:main"

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.11"
pytest-asyncio = "^0.26.0"
pytest-cov = "^6.1.1"

[tool.ruff]
# Allow lines to be as long as 300.
line-length = 300
# Number of spaces per indentation level
indent-width = 2

[tool.ruff.lint]
select = ["E", "F"]
ignore = ["F403"]

[tool.uv.sources]
agent-argocd = {workspace = true}
mcp-argocd = { path = "mcp/argocd" }

[tool.uv.workspace]
members = [
  "ai_platform_engineering/agents/argocd"
]

[dependency-groups]
dev = [
  "ruff>=0.11.11",
  "pytest-asyncio>=0.26.0",
  "pytest-cov>=6.1.1",
]

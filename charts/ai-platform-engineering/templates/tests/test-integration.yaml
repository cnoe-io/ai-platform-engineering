apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "ai-platform-engineering.fullname" . }}-test-integration"
  labels:
    {{- include "ai-platform-engineering.labels" . | nindent 4 }}
    app.kubernetes.io/component: test
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  restartPolicy: Never
  containers:
  - name: test-integration
    image: bitnami/kubectl:latest
    command: ['sh', '-c']
    args:
    - |
      set -e
      echo "Testing AI Platform Engineering Integration..."

      # Test overall deployment health
      echo "Checking overall deployment status..."

      # Count total deployments
      total_deployments=$(kubectl get deployments -l app.kubernetes.io/instance={{ .Release.Name }} --no-headers | wc -l)
      echo "Total deployments found: $total_deployments"

      # Count ready deployments
      ready_deployments=$(kubectl get deployments -l app.kubernetes.io/instance={{ .Release.Name }} -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.status.readyReplicas}{"\n"}{end}' | awk '$2 >= 1' | wc -l)
      echo "Ready deployments: $ready_deployments"

      # Count total services
      total_services=$(kubectl get services -l app.kubernetes.io/instance={{ .Release.Name }} --no-headers | wc -l)
      echo "Total services found: $total_services"

      # Test service connectivity
      echo "Testing service connectivity..."

      # Test AI Platform Engineering service
      if kubectl get service {{ include "ai-platform-engineering.fullname" . }} 2>/dev/null; then
        echo "✓ AI Platform Engineering service is accessible"
      fi

      echo "✓ Integration tests completed successfully"

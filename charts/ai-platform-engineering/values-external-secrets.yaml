global:
  externalSecrets:
    enabled: true # Enable external secrets management globally
    apiVersion: "v1" # API version for ExternalSecret resources. Options: "v1" or "v1beta1". Defaults to "v1" if not specified.
    secretStoreRef:
      name: "vault" # Use your secret store
      kind: ClusterSecretStore # Use your secret store kind

  agentSecrets:
    create: true

  llmSecrets:
    secretName: "external-llm-secret" # this is your target name
    externalSecrets:
      data:
      - secretKey: LLM_PROVIDER
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/llm-provider # Use your key path
          property: LLM_PROVIDER

      # Azure OpenAI configuration
      - secretKey: AZURE_OPENAI_API_KEY
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/azure-openai # Use your key path
          property: AZURE_OPENAI_API_KEY
      - secretKey: AZURE_OPENAI_ENDPOINT
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/azure-openai # Use your key path
          property: AZURE_OPENAI_ENDPOINT
      - secretKey: AZURE_OPENAI_API_VERSION
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/azure-openai # Use your key path
          property: AZURE_OPENAI_API_VERSION
      - secretKey: AZURE_OPENAI_DEPLOYMENT
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/azure-openai # Use your key path
          property: AZURE_OPENAI_DEPLOYMENT

      # OpenAI configuration
      # - secretKey: OPENAI_API_KEY
      #   remoteRef:
      #     conversionStrategy: Default
      #     decodingStrategy: None
      #     key: dev/openai # Use your key path
      #     property: OPENAI_API_KEY
      # - secretKey: OPENAI_ENDPOINT
      #   remoteRef:
      #     conversionStrategy: Default
      #     decodingStrategy: None
      #     key: dev/openai # Use your key path
      #     property: OPENAI_ENDPOINT
      # - secretKey: OPENAI_MODEL_NAME
      #   remoteRef:
      #     conversionStrategy: Default
      #     decodingStrategy: None
      #     key: dev/openai # Use your key path
      #     property: OPENAI_MODEL_NAME

      # AWS Bedrock configuration
      # - secretKey: AWS_ACCESS_KEY_ID
      #   remoteRef:
      #     conversionStrategy: Default
      #     decodingStrategy: None
      #     key: dev/aws-bedrock # Use your key path
      #     property: AWS_ACCESS_KEY_ID
      # - secretKey: AWS_SECRET_ACCESS_KEY
      #   remoteRef:
      #     conversionStrategy: Default
      #     decodingStrategy: None
      #     key: dev/aws-bedrock # Use your key path
      #     property: AWS_SECRET_ACCESS_KEY
      # - secretKey: AWS_REGION
      #   remoteRef:
      #     conversionStrategy: Default
      #     decodingStrategy: None
      #     key: dev/aws-bedrock # Use your key path
      #     property: AWS_REGION
      # - secretKey: AWS_BEDROCK_MODEL_ID
      #   remoteRef:
      #     conversionStrategy: Default
      #     decodingStrategy: None
      #     key: dev/aws-bedrock # Use your key path
      #     property: AWS_BEDROCK_MODEL_ID
      # - secretKey: AWS_BEDROCK_PROVIDER
      #   remoteRef:
      #     conversionStrategy: Default
      #     decodingStrategy: None
      #     key: dev/aws-bedrock # Use your key path
      #     property: AWS_BEDROCK_PROVIDER

agent-argocd:
  agentSecrets:
    secretName: "external-argocd-secret"
    externalSecrets:
      data:
      - secretKey: ARGOCD_TOKEN
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/argocd # Use your key path
          property: ARGOCD_TOKEN
      - secretKey: ARGOCD_API_URL
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/argocd # Use your key path
          property: ARGOCD_API_URL
      - secretKey: ARGOCD_VERIFY_SSL
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/argocd # Use your key path
          property: ARGOCD_VERIFY_SSL

agent-pagerduty:
  agentSecrets:
    secretName: "external-pagerduty-secret"
    externalSecrets:
      data:
      - secretKey: PAGERDUTY_API_KEY
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/pagerduty # Use your key path
          property: PAGERDUTY_API_KEY
      - secretKey: PAGERDUTY_API_URL
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/pagerduty # Use your key path
          property: PAGERDUTY_API_URL

agent-github:
  agentSecrets:
    secretName: "external-github-secret"
    externalSecrets:
      data:
      - secretKey: GITHUB_PERSONAL_ACCESS_TOKEN
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/github # Use your key path
          property: GITHUB_PERSONAL_ACCESS_TOKEN

agent-atlassian:
  agentSecrets:
    secretName: "external-atlassian-secret"
    externalSecrets:
      data:
      - secretKey: ATLASSIAN_TOKEN
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/atlassian # Use your key path
          property: ATLASSIAN_TOKEN
      - secretKey: ATLASSIAN_EMAIL
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/atlassian # Use your key path
          property: ATLASSIAN_EMAIL
      - secretKey: ATLASSIAN_API_URL
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/atlassian # Use your key path
          property: ATLASSIAN_API_URL

agent-backstage:
  agentSecrets:
    secretName: "external-backstage-secret"
    externalSecrets:
      data:
      - secretKey: BACKSTAGE_API_TOKEN
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/backstage # Use your key path
          property: BACKSTAGE_API_TOKEN
      - secretKey: BACKSTAGE_URL
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/backstage # Use your key path
          property: BACKSTAGE_URL

agent-slack:
  agentSecrets:
    secretName: "external-slack-secret"
    externalSecrets:
      data:
      - secretKey: SLACK_BOT_TOKEN
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/slack # Use your key path
          property: SLACK_BOT_TOKEN
      - secretKey: SLACK_APP_TOKEN
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/slack # Use your key path
          property: SLACK_APP_TOKEN
      - secretKey: SLACK_SIGNING_SECRET
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/slack # Use your key path
          property: SLACK_SIGNING_SECRET
      - secretKey: SLACK_CLIENT_SECRET
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/slack # Use your key path
          property: SLACK_CLIENT_SECRET
      - secretKey: SLACK_TEAM_ID
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/slack # Use your key path
          property: SLACK_TEAM_ID

agent-confluence:
  agentSecrets:
    secretName: "external-confluence-secret"
    externalSecrets:
      data:
      - secretKey: ATLASSIAN_TOKEN
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/confluence # Use your key path
          property: ATLASSIAN_TOKEN
      - secretKey: ATLASSIAN_EMAIL
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/confluence # Use your key path
          property: ATLASSIAN_EMAIL
      - secretKey: ATLASSIAN_API_URL
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/confluence # Use your key path
          property: ATLASSIAN_API_URL
      - secretKey: ATLASSIAN_VERIFY_SSL
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/confluence # Use your key path
          property: ATLASSIAN_VERIFY_SSL

agent-jira:
  agentSecrets:
    secretName: "external-jira-secret"
    externalSecrets:
      data:
      - secretKey: ATLASSIAN_TOKEN
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/confluence # Use your key path
          property: ATLASSIAN_TOKEN
      - secretKey: ATLASSIAN_EMAIL
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/confluence # Use your key path
          property: ATLASSIAN_EMAIL
      - secretKey: ATLASSIAN_API_URL
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/confluence # Use your key path
          property: ATLASSIAN_API_URL
      - secretKey: ATLASSIAN_VERIFY_SSL
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/confluence # Use your key path
          property: ATLASSIAN_VERIFY_SSL

agent-aws:
  agentSecrets:
    secretName: "external-aws-secret"
    externalSecrets:
      data:
      - secretKey: AWS_ACCESS_KEY_ID
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/aws # Use your key path
          property: AWS_ACCESS_KEY_ID
      - secretKey: AWS_SECRET_ACCESS_KEY
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/aws # Use your key path
          property: AWS_SECRET_ACCESS_KEY
      - secretKey: AWS_DEFAULT_REGION
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/aws # Use your key path
          property: AWS_DEFAULT_REGION

agent-splunk:
  agentSecrets:
    secretName: "external-splunk-secret"
    externalSecrets:
      data:
      - secretKey: SPLUNK_TOKEN
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/splunk # Use your key path
          property: SPLUNK_TOKEN
      - secretKey: SPLUNK_API_URL
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/splunk # Use your key path
          property: SPLUNK_API_URL

agent-webex:
  agentSecrets:
    secretName: "external-webex-secret"
    externalSecrets:
      data:
      - secretKey: WEBEX_BOT_TOKEN
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/webex # Use your key path
          property: WEBEX_BOT_TOKEN
      - secretKey: WEBEX_WEBHOOK_SECRET
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/webex # Use your key path
          property: WEBEX_WEBHOOK_SECRET
      - secretKey: WEBEX_TOKEN
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/webex # Use your key path
          property: WEBEX_TOKEN

agent-komodor:
  agentSecrets:
    secretName: "external-komodor-secret"
    externalSecrets:
      data:
      - secretKey: KOMODOR_TOKEN
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/komodor # Use your key path
          property: KOMODOR_TOKEN
      - secretKey: KOMODOR_API_URL
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: dev/komodor # Use your key path
          property: KOMODOR_API_URL

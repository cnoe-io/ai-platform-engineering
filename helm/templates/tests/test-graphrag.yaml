apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "ai-platform-engineering.fullname" . }}-test-graphrag"
  labels:
    {{- include "ai-platform-engineering.labels" . | nindent 4 }}
    app.kubernetes.io/component: test
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  restartPolicy: Never
  containers:
  - name: test-graphrag
    image: bitnami/kubectl:latest
    command: ['sh', '-c']
    args:
    - |
      set -e
      echo "Testing GraphRAG deployment..."

      # Test GraphRAG components (only if enabled)
      components=(
        "{{ include "ai-platform-engineering.fullname" . }}-graphrag-agent-graph-gen"
        "{{ include "ai-platform-engineering.fullname" . }}-graphrag-agent-graph-qa"
        "{{ include "ai-platform-engineering.fullname" . }}-graphrag-nexigraph-server"
        "{{ include "ai-platform-engineering.fullname" . }}-graphrag-redis"
      )

      for component in "${components[@]}"; do
        if kubectl get deployment "$component" -o jsonpath='{.status.readyReplicas}' 2>/dev/null | grep -q "1"; then
          echo "✓ $component deployment is ready"
        else
          echo "ℹ $component is not enabled or not ready"
        fi

        if kubectl get service "$component" 2>/dev/null; then
          echo "✓ $component service exists"
        else
          echo "ℹ $component service not found (likely disabled)"
        fi
      done

      # Test Neo4j if enabled
      if kubectl get deployment {{ include "ai-platform-engineering.fullname" . }}-neo4j 2>/dev/null; then
        if kubectl get deployment {{ include "ai-platform-engineering.fullname" . }}-neo4j -o jsonpath='{.status.readyReplicas}' | grep -q "1"; then
          echo "✓ Neo4j deployment is ready"
        else
          echo "ℹ Neo4j deployment is not ready"
        fi
      else
        echo "ℹ Neo4j is not enabled"
      fi

      echo "✓ GraphRAG tests completed"

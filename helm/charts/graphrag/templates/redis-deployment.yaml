{{- if and .Values.redis.enabled (or .Values.global.profiles.knowledgeBase .Values.global.profiles.graphRag .Values.global.profiles.nexigraph) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "graphrag.fullname" . }}-redis
  labels:
    {{- include "graphrag.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "graphrag.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        {{- include "graphrag.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: redis
    spec:
      serviceAccountName: {{ include "graphrag.serviceAccountName" . }}
      {{- with .Values.redis.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.redis.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.redis.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          ports:
            - name: redis
              containerPort: {{ .Values.redis.service.port }}
              protocol: TCP
          volumeMounts:
            {{- if .Values.redis.persistence.enabled }}
            - name: redis-data
              mountPath: /data
            {{- end }}
          {{- with .Values.redis.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        {{- if .Values.redis.persistence.enabled }}
        - name: redis-data
          persistentVolumeClaim:
            claimName: {{ include "graphrag.fullname" . }}-redis
        {{- end }}
      restartPolicy: Always
{{- end }}

{{- if and .Values.agentGraphGen.enabled (or .Values.global.profiles.knowledgeBase .Values.global.profiles.graphRag .Values.global.profiles.nexigraph) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "graphrag.fullname" . }}-agent-graph-gen
  labels:
    {{- include "graphrag.labels" . | nindent 4 }}
    app.kubernetes.io/component: agent-graph-gen
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "graphrag.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: agent-graph-gen
  template:
    metadata:
      labels:
        {{- include "graphrag.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: agent-graph-gen
    spec:
      {{- with .Values.agentGraphGen.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.agentGraphGen.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.agentGraphGen.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: agent-graph-gen
          image: "{{ .Values.agentGraphGen.image.repository }}:{{ .Values.agentGraphGen.image.tag }}"
          imagePullPolicy: {{ .Values.agentGraphGen.image.pullPolicy }}
          env:
            - name: LOG_LEVEL
              value: "{{ .Values.agentGraphGen.env.logLevel }}"
            - name: SYNC_INTERVAL
              value: "{{ .Values.agentGraphGen.env.syncInterval }}"
            - name: NEO4J_URL
              value: "bolt://{{ include "graphrag.fullname" . }}-neo4j:{{ .Values.neo4j.service.bolt.port }}"
            - name: NEO4J_USER
              value: "{{ .Values.neo4j.auth.username }}"
            - name: NEO4J_PASSWORD
              value: "{{ .Values.neo4j.auth.password }}"
            - name: NEXIGRAPH_SERVER_URL
              value: "http://{{ include "graphrag.fullname" . }}-nexigraph-server:{{ .Values.nexigraphServer.service.port }}"
            {{- if .Values.agentGraphGen.env.openaiApiVersion }}
            - name: OPENAI_API_VERSION
              value: "{{ .Values.agentGraphGen.env.openaiApiVersion }}"
            {{- end }}
            {{- if .Values.agentGraphGen.env.azureOpenaiEndpoint }}
            - name: AZURE_OPENAI_ENDPOINT
              value: "{{ .Values.agentGraphGen.env.azureOpenaiEndpoint }}"
            {{- end }}
            {{- if .Values.agentGraphGen.env.azureOpenaiApiKey }}
            - name: AZURE_OPENAI_API_KEY
              value: "{{ .Values.agentGraphGen.env.azureOpenaiApiKey }}"
            {{- end }}
            {{- if .Values.agentGraphGen.env.langsmithTracing }}
            - name: LANGSMITH_TRACING
              value: "{{ .Values.agentGraphGen.env.langsmithTracing }}"
            {{- end }}
            {{- if .Values.agentGraphGen.env.langsmithProject }}
            - name: LANGSMITH_PROJECT
              value: "{{ .Values.agentGraphGen.env.langsmithProject }}"
            {{- end }}
            {{- if .Values.agentGraphGen.env.langsmithApiKey }}
            - name: LANGSMITH_API_KEY
              value: "{{ .Values.agentGraphGen.env.langsmithApiKey }}"
            {{- end }}
            {{- if .Values.agentGraphGen.env.langsmithEndpoint }}
            - name: LANGSMITH_ENDPOINT
              value: "{{ .Values.agentGraphGen.env.langsmithEndpoint }}"
            {{- end }}
          {{- with .Values.agentGraphGen.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      restartPolicy: Always
{{- end }}

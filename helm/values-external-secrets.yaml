global:
  externalSecrets:
    enabled: true # Enable external secrets management

external-secrets-configuration:
  externalSecrets:
    # LLM provider configuration
    - name: llm-secret
      secretStoreRef:
        name: "vault-secret-store"
        kind: ClusterSecretStore
      target:
        name: llm-secret
      data:
        - secretKey: LLM_PROVIDER
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/global
            property: LLM_PROVIDER

        # Azure OpenAI configuration
        - secretKey: AZURE_OPENAI_API_KEY
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/global
            property: AZURE_OPENAI_API_KEY
            optional: true  # This key is now optional
        - secretKey: AZURE_OPENAI_ENDPOINT
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/global
            property: AZURE_OPENAI_ENDPOINT
            optional: true  # This key is now optional
        - secretKey: AZURE_OPENAI_API_VERSION
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/global
            property: AZURE_OPENAI_API_VERSION
            optional: true  # This key is now optional
        - secretKey: AZURE_OPENAI_DEPLOYMENT
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/global
            property: AZURE_OPENAI_DEPLOYMENT
            optional: true  # This key is now optional

        # OpenAI configuration
        - secretKey: OPENAI_API_KEY
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/global
            property: OPENAI_API_KEY
            optional: true  # This key is now optional
        - secretKey: OPENAI_ENDPOINT
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/global
            property: OPENAI_ENDPOINT
            optional: true  # This key is now optional
        - secretKey: OPENAI_MODEL_NAME
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/global
            property: OPENAI_MODEL_NAME
            optional: true  # This key is now optional

        # AWS Bedrock configuration
        - secretKey: AWS_ACCESS_KEY_ID
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/global
            property: AWS_ACCESS_KEY_ID
            optional: true  # This key is now optional
        - secretKey: AWS_SECRET_ACCESS_KEY
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/global
            property: AWS_SECRET_ACCESS_KEY
            optional: true  # This key is now optional
        - secretKey: AWS_REGION
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/global
            property: AWS_REGION
            optional: true  # This key is now optional
        - secretKey: AWS_BEDROCK_MODEL_ID
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/global
            property: AWS_BEDROCK_MODEL_ID
            optional: true  # This key is now optional
        - secretKey: AWS_BEDROCK_PROVIDER
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/global
            property: AWS_BEDROCK_PROVIDER
            optional: true  # This key is now optional

    # ArgoCD configuration
    - name: agent-argocd-secret
      secretStoreRef:
        name: "vault-secret-store"
        kind: ClusterSecretStore
      target:
        name: agent-argocd-secret
      data:
        - secretKey: ARGOCD_TOKEN
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/argocd-secret
            property: ARGOCD_TOKEN
        - secretKey: ARGOCD_API_URL
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/argocd-secret
            property: ARGOCD_API_URL
        - secretKey: ARGOCD_VERIFY_SSL
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/argocd-secret
            property: ARGOCD_VERIFY_SSL

    # PagerDuty configuration
    - name: agent-pagerduty-secret
      secretStoreRef:
        name: "vault-secret-store"
        kind: ClusterSecretStore
      target:
        name: agent-pagerduty-secret
      data:
        - secretKey: PAGERDUTY_API_KEY
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/pagerduty-secret
            property: PAGERDUTY_API_KEY
        - secretKey: PAGERDUTY_API_URL
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/pagerduty-secret
            property: PAGERDUTY_API_URL

    # GitHub configuration
    - name: agent-github-secret
      secretStoreRef:
        name: "vault-secret-store"
        kind: ClusterSecretStore
      target:
        name: agent-github-secret
      data:
        - secretKey: GITHUB_PERSONAL_ACCESS_TOKEN
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/github-secret
            property: GITHUB_PERSONAL_ACCESS_TOKEN

    # Atlassian configuration
    - name: agent-jira-secret
      secretStoreRef:
        name: "vault-secret-store"
        kind: ClusterSecretStore
      target:
        name: agent-jira-secret
      data:
        - secretKey: ATLASSIAN_TOKEN
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/jira-secret
            property: ATLASSIAN_TOKEN
        - secretKey: ATLASSIAN_EMAIL
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/jira-secret
            property: ATLASSIAN_EMAIL
        - secretKey: ATLASSIAN_API_URL
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/jira-secret
            property: ATLASSIAN_API_URL
        - secretKey: ATLASSIAN_VERIFY_SSL
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/jira-secret
            property: ATLASSIAN_VERIFY_SSL

    # Backstage configuration
    - name: agent-backstage-secret
      secretStoreRef:
        name: "vault-secret-store"
        kind: ClusterSecretStore
      target:
        name: agent-backstage-secret
      data: {}

    # Slack configuration
    - name: agent-slack-secret
      secretStoreRef:
        name: "vault-secret-store"
        kind: ClusterSecretStore
      target:
        name: agent-slack-secret
      data:
        - secretKey: SLACK_BOT_TOKEN
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/slack-secret
            property: SLACK_BOT_TOKEN
        - secretKey: SLACK_APP_TOKEN
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/slack-secret
            property: SLACK_APP_TOKEN
        - secretKey: SLACK_SIGNING_SECRET
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/slack-secret
            property: SLACK_SIGNING_SECRET
        - secretKey: SLACK_CLIENT_SECRET
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/slack-secret
            property: SLACK_CLIENT_SECRET
        - secretKey: SLACK_TEAM_ID
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/slack-secret
            property: SLACK_TEAM_ID
    - name: agent-backstage-secret
      secretStoreRef:
        name: "vault-secret-store"
        kind: ClusterSecretStore
      target:
        name: agent-backstage-secret
      data:
        - secretKey: BACKSTAGE_API_TOKEN
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/backstage-secret
            property: BACKSTAGE_API_TOKEN
        - secretKey: BACKSTAGE_URL
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: ai-platform-engineering/backstage-secret
            property: BACKSTAGE_URL

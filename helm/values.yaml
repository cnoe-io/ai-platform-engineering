# Global configuration shared across all subcharts
global:
  slim:
    enabled: false
    endpoint: "http://ai-platform-engineering-slim:46357"
    transport: "slim"

# AI Platform Engineer Multi-Agent
ai-platform-engineering:
  enabled: true
  nameOverride: "ai-platform-engineering"
  isMultiAgent: true
  image:
    repository: "ghcr.io/cnoe-io/ai-platform-engineering"
    tag: "stable"
    pullPolicy: "Always"
    args: ["platform-engineer"]
  env:
    EXTERNAL_URL: "http://localhost:8000"  # Agent url for the client
  multiAgentConfig:
    protocol: "a2a"
    port: "8000"
    releasePrefix: "ai-platform-engineering"
    agents:
      - argocd
      - backstage
      - confluence
      - github
      - jira
      - pagerduty
      - slack
  mcp: #TODO
    mode: "stdio"

# Backstage plugin agent forge
backstage-plugin-agent-forge:
  enabled: true
  nameOverride: "backstage-plugin-agent-forge"
  image:
    repository: "ghcr.io/cnoe-io/backstage-plugin-agent-forge"
    tag: "latest"
    pullPolicy: "Always"
  isBackstagePlugin: true
  service:
    ports:
      - name: http
        port: 3000
        protocol: TCP
      - name: backend
        port: 7007
        protocol: TCP
  mcp: #TODO
    mode: "stdio"

# Agent configurations using aliases from Chart.yaml
agent-argocd:
  enabled: false
  nameOverride: "agent-argocd"
  image:
    repository: "ghcr.io/cnoe-io/agent-argocd"
    pullPolicy: "Always"
  mcp:
    image:
      repository: "ghcr.io/cnoe-io/mcp-argocd"
      tag: "stable"
      pullPolicy: "Always"
    mode: "http" # Options: stdio, http
    port: 8000

agent-backstage:
  enabled: false
  nameOverride: "agent-backstage"
  image:
    repository: "ghcr.io/cnoe-io/agent-backstage"
    pullPolicy: "Always"
  mcp:
    image:
      repository: "ghcr.io/cnoe-io/mcp-backstage"
      tag: "stable"
      pullPolicy: "Always"
    mode: "http" # Options: stdio, http
    port: 8000

agent-confluence:
  enabled: false
  nameOverride: "agent-confluence"
  image:
    repository: "ghcr.io/cnoe-io/agent-confluence"
    pullPolicy: "Always"
  mcp:
    image:
      repository: "ghcr.io/cnoe-io/mcp-confluence"
      tag: "stable"
      pullPolicy: "Always"
    mode: "http" # Options: stdio, http
    port: 8000

agent-github:
  enabled: false
  nameOverride: "agent-github"
  image:
    repository: "ghcr.io/cnoe-io/agent-github"
    pullPolicy: "Always"
  mcp:
    useRemoteMcpServer: true

agent-jira:
  enabled: false
  nameOverride: "agent-jira"
  image:
    repository: "ghcr.io/cnoe-io/agent-jira"
    pullPolicy: "Always"
  mcp:
    image:
      repository: "ghcr.io/cnoe-io/mcp-jira"
      tag: "stable"
      pullPolicy: "Always"
    mode: "http" # Options: stdio, http
    port: 8000

agent-pagerduty:
  enabled: false
  nameOverride: "agent-pagerduty"
  image:
    repository: "ghcr.io/cnoe-io/agent-pagerduty"
    pullPolicy: "Always"
  mcp:
    image:
      repository: "ghcr.io/cnoe-io/mcp-pagerduty"
      tag: "stable"
      pullPolicy: "Always"
    mode: "http" # Options: stdio, http
    port: 8000

agent-slack:
  enabled: false
  nameOverride: "agent-slack"
  image:
    repository: "ghcr.io/cnoe-io/agent-slack"
    pullPolicy: "Always"
  mcp:
    image:
      repository: "ghcr.io/cnoe-io/mcp-slack"
      tag: "stable"
      pullPolicy: "Always"
    mode: "http" # Options: stdio, http
    port: 8000
    pullPolicy: "Always"

agent-reflection:
  enabled: false
  nameOverride: "agent-reflection"
  image:
    repository: "ghcr.io/cnoe-io/agent-reflection"
    pullPolicy: "Always"

graphrag:
  enabled: false

neo4j:
  config:
    server.directories.plugins: "/var/lib/neo4j/labs"
    dbms.security.procedures.unrestricted: "apoc.*"
    dbms.security.procedures.allowlist: "apoc.*"
    server.config.strict_validation.enabled: "false"
  apoc_config:
    apoc.trigger.enabled: "true"
    apoc.import.file.enabled: "true"
  disableLookups: true
  services:
    neo4j:
      enabled: true
      ports:
        http:
          enabled: false
        https:
          enabled: false
  neo4j:
    name: ai-platform-engineering-graphrag-neo4j
    password: "dummy_password"
    resources:
      cpu: "1"
      memory: "2Gi"

  volumes:
    data:
      mode: "dynamic"
      dynamic:
        storageClassName: gp2

global:
  externalSecrets:
    enabled: true # Enable external secrets management

external-secrets-configuration:
  externalSecrets:
    # LLM provider configuration
    - name: llm-secret
      secretStoreRef:
        name: "" # Use your secret store
        kind: ClusterSecretStore # Use your secret store kind
      target:
        name: llm-secret
      data:
        - secretKey: LLM_PROVIDER
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: dev/llm-provider # Use your key path
            property: LLM_PROVIDER

        # Azure OpenAI configuration
        - secretKey: AZURE_OPENAI_API_KEY
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: dev/azure-openai # Use your key path
            property: AZURE_OPENAI_API_KEY
        - secretKey: AZURE_OPENAI_ENDPOINT
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: dev/azure-openai # Use your key path
            property: AZURE_OPENAI_ENDPOINT
        - secretKey: AZURE_OPENAI_API_VERSION
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: dev/azure-openai # Use your key path
            property: AZURE_OPENAI_API_VERSION
        - secretKey: AZURE_OPENAI_DEPLOYMENT
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: dev/azure-openai # Use your key path
            property: AZURE_OPENAI_DEPLOYMENT

        # OpenAI configuration
        # - secretKey: OPENAI_API_KEY
        #   remoteRef:
        #     conversionStrategy: Default
        #     decodingStrategy: None
        #     key: dev/openai # Use your key path
        #     property: OPENAI_API_KEY
        # - secretKey: OPENAI_ENDPOINT
        #   remoteRef:
        #     conversionStrategy: Default
        #     decodingStrategy: None
        #     key: dev/openai # Use your key path
        #     property: OPENAI_ENDPOINT
        # - secretKey: OPENAI_MODEL_NAME
        #   remoteRef:
        #     conversionStrategy: Default
        #     decodingStrategy: None
        #     key: dev/openai # Use your key path
        #     property: OPENAI_MODEL_NAME

        # AWS Bedrock configuration
        # - secretKey: AWS_ACCESS_KEY_ID
        #   remoteRef:
        #     conversionStrategy: Default
        #     decodingStrategy: None
        #     key: dev/aws-bedrock # Use your key path
        #     property: AWS_ACCESS_KEY_ID
        # - secretKey: AWS_SECRET_ACCESS_KEY
        #   remoteRef:
        #     conversionStrategy: Default
        #     decodingStrategy: None
        #     key: dev/aws-bedrock # Use your key path
        #     property: AWS_SECRET_ACCESS_KEY
        # - secretKey: AWS_REGION
        #   remoteRef:
        #     conversionStrategy: Default
        #     decodingStrategy: None
        #     key: dev/aws-bedrock # Use your key path
        #     property: AWS_REGION
        # - secretKey: AWS_BEDROCK_MODEL_ID
        #   remoteRef:
        #     conversionStrategy: Default
        #     decodingStrategy: None
        #     key: dev/aws-bedrock # Use your key path
        #     property: AWS_BEDROCK_MODEL_ID
        # - secretKey: AWS_BEDROCK_PROVIDER
        #   remoteRef:
        #     conversionStrategy: Default
        #     decodingStrategy: None
        #     key: dev/aws-bedrock # Use your key path
        #     property: AWS_BEDROCK_PROVIDER

    # ArgoCD configuration
    - name: agent-argocd-secret
      secretStoreRef:
        name: "" # Use your secret store
        kind: ClusterSecretStore # Use your secret store kind
      target:
        name: argocd-secret
      data:
        - secretKey: ARGOCD_TOKEN
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: dev/argocd # Use your key path
            property: ARGOCD_TOKEN
        - secretKey: ARGOCD_API_URL
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: dev/argocd # Use your key path
            property: ARGOCD_API_URL
        - secretKey: ARGOCD_VERIFY_SSL
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: dev/argocd # Use your key path
            property: ARGOCD_VERIFY_SSL

    # PagerDuty configuration
    - name: agent-pagerduty-secret
      secretStoreRef:
        name: "" # Use your secret store
        kind: ClusterSecretStore # Use your secret store kind
      target:
        name: pagerduty-secret
      data:
        - secretKey: PAGERDUTY_API_KEY
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: dev/pagerduty # Use your key path
            property: PAGERDUTY_API_KEY
        - secretKey: PAGERDUTY_API_URL
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: dev/pagerduty # Use your key path
            property: PAGERDUTY_API_URL

    # GitHub configuration
    - name: agent-github-secret
      secretStoreRef:
        name: "" # Use your secret store
        kind: ClusterSecretStore # Use your secret store kind
      target:
        name: github-secret
      data:
        - secretKey: GITHUB_PERSONAL_ACCESS_TOKEN
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: dev/github # Use your key path
            property: GITHUB_PERSONAL_ACCESS_TOKEN

    # Atlassian configuration
    - name: atlassian-secret
      secretStoreRef:
        name: "" # Use your secret store
        kind: ClusterSecretStore # Use your secret store kind
      target:
        name: atlassian-secret
      data:
        - secretKey: ATLASSIAN_TOKEN
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: dev/atlassian # Use your key path
            property: ATLASSIAN_TOKEN
        - secretKey: ATLASSIAN_EMAIL
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: dev/atlassian # Use your key path
            property: ATLASSIAN_EMAIL
        - secretKey: ATLASSIAN_API_URL
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: dev/atlassian # Use your key path
            property: ATLASSIAN_API_URL

    # Backstage configuration
    - name: agent-backstage-secret
      secretStoreRef:
        name: "" # Use your secret store
        kind: ClusterSecretStore # Use your secret store kind
      target:
        name: backstage-secret
      data: {}

    # Slack configuration
    - name: agent-slack-secret
      secretStoreRef:
        name: "" # Use your secret store
        kind: ClusterSecretStore # Use your secret store kind
      target:
        name: slack-secret
      data:
        - secretKey: SLACK_BOT_TOKEN
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: dev/slack # Use your key path
            property: SLACK_BOT_TOKEN
        - secretKey: SLACK_APP_TOKEN
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: dev/slack # Use your key path
            property: SLACK_APP_TOKEN
        - secretKey: SLACK_SIGNING_SECRET
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: dev/slack # Use your key path
            property: SLACK_SIGNING_SECRET
        - secretKey: SLACK_CLIENT_SECRET
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: dev/slack # Use your key path
            property: SLACK_CLIENT_SECRET
        - secretKey: SLACK_TEAM_ID
          remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: dev/slack # Use your key path
            property: SLACK_TEAM_ID

    # Confluence configuration
    - name: agent-confluence-secret
      secretStoreRef:
        name: "" # Use your secret store
        kind: ClusterSecretStore # Use your secret store kind
      target:
        name: confluence-secret
      data:
        # TODO: Add confluence specific secrets here
        # Example:
        # - secretKey: CONFLUENCE_API_KEY
        #   remoteRef:
        #     conversionStrategy: Default
        #     decodingStrategy: None
        #     key: dev/confluence # Use your key path
        #     property: CONFLUENCE_API_KEY

    # Jira configuration
    - name: agent-jira-secret
      secretStoreRef:
        name: "" # Use your secret store
        kind: ClusterSecretStore # Use your secret store kind
      target:
        name: jira-secret
      data:
        # TODO: Add jira specific secrets here
        # Example:
        # - secretKey: JIRA_API_KEY
        #   remoteRef:
        #     conversionStrategy: Default
        #     decodingStrategy: None
        #     key: dev/jira # Use your key path
        #     property: JIRA_API_KEY

    # Reflection configuration
    - name: agent-reflection-secret
      secretStoreRef:
        name: "" # Use your secret store
        kind: ClusterSecretStore # Use your secret store kind
      target:
        name: reflection-secret
      data:
        # TODO: Add reflection specific secrets here
        # Example:
        # - secretKey: REFLECTION_API_KEY
        #   remoteRef:
        #     conversionStrategy: Default
        #     decodingStrategy: None
        #     key: dev/reflection # Use your key path
        #     property: REFLECTION_API_KEY

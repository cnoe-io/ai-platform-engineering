name: Build and Push Agent Forge Plugin

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: cnoe-io/backstage-plugin-agent-forge

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          path: main-repo
          
      - name: Checkout community-plugins repository
        uses: actions/checkout@v4
        with:
          repository: cnoe-io/community-plugins
          ref: agent-forge-upstream-docker
          token: ${{ secrets.GITHUB_TOKEN }}
          path: community-plugins
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: community-plugins/yarn.lock
          
      - name: Copy custom Dockerfile
        run: |
          cp main-repo/build/agent-forge/Dockerfile community-plugins/Dockerfile
          echo "Using custom Dockerfile from build/agent-forge/"
          
      - name: Install dependencies
        working-directory: community-plugins
        run: |
          yarn install --frozen-lockfile
          
      - name: Build project
        working-directory: community-plugins
        run: |
          yarn build:all || yarn build
          
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: community-plugins
          file: community-plugins/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        if: github.event_name != 'pull_request'
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true


name: Compose up and test via agent-chat-cli

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  compose-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create .env from GitHub Secrets
        run: |
          set -euo pipefail
          # Create .env using commonly referenced keys. Add more as needed.
          # If your repo has `.env.example`, update this list to match its keys, and
          # ensure corresponding GitHub Action secrets exist with the same names.
          cat > .env << 'EOF'

          # Optional/if used by agents or knowledge base services
          AZURE_OPENAI_ENDPOINT=${{ secrets.AZURE_OPENAI_ENDPOINT }}
          AZURE_OPENAI_API_KEY=${{ secrets.AZURE_OPENAI_API_KEY }}
          EOF
          # Mask non-empty values to avoid accidental log exposure
          while IFS='=' read -r k v; do
            [ -z "${k:-}" ] && continue
            [ "${k#\#}" != "$k" ] && continue
            if [ -n "${v:-}" ]; then
              echo "::add-mask::${v}"
            fi
          done < .env

      - name: Show Docker version
        run: |
          docker version
          docker compose version || true

      - name: Start services (slim profile)
        run: |
          docker compose -f docker-compose.slim.yaml --profile=slim up -d

      - name: Wait for localhost:8000 (up to ~3 minutes)
        run: |
          set -euo pipefail
          for i in $(seq 1 36); do
            if curl -sfS http://localhost:8000/ >/dev/null 2>&1; then
              echo "Service responded on /"
              exit 0
            fi
            if curl -sfS http://localhost:8000/health >/dev/null 2>&1; then
              echo "Service responded on /health"
              exit 0
            fi
            echo "Waiting for service on http://localhost:8000 ... ($i)"
            sleep 5
          done
          echo "Service on http://localhost:8000 did not become ready in time"
          exit 1

      - name: Setup Python for A2A client test
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies for A2A client test
        run: |
          pip install httpx rich a2a-client pytest pytest-asyncio pyyaml

      - name: Run A2A integration tests with pytest
        run: |
          cd integration/tests
          pytest test_a2a_integration.py -v --tb=short
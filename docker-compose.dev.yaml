services:
  ####################################################################################################
  #                                      PLATFORM ENGINEER BUILD                                     #
  ####################################################################################################
  platform-engineer:
    build:
      context: .
      dockerfile: build/Dockerfile
    volumes:
      - ./prompt_config.yaml:/app/prompt_config.yaml
      - ./ai_platform_engineering:/app/ai_platform_engineering
    container_name: platform-engineering
    profiles:
      - build
      - build-tracing
    depends_on:
      - agent-argocd-build
      - agent-backstage-build
      - agent-confluence-build
      - agent-github-build
      - agent-jira-build
      - agent-komodor-build
      - agent-pagerduty-build
      - agent-slack-build
    env_file:
      - .env
    ports:
      - "8000:8000"
    environment:
      - AGENT_PROTOCOL=a2a
      - ARGOCD_AGENT_HOST=agent-argocd-build
      - BACKSTAGE_AGENT_HOST=agent-backstage-build
      - CONFLUENCE_AGENT_HOST=agent-confluence-build
      - GITHUB_AGENT_HOST=agent-github-build
      - JIRA_AGENT_HOST=agent-jira-build
      - KOMODOR_AGENT_HOST=agent-komodor-build
      - PAGERDUTY_AGENT_HOST=agent-pagerduty-build
      - SLACK_AGENT_HOST=agent-slack-build
      - WEBEX_AGENT_HOST=agent-webex-build
      - ENABLE_KOMODOR=true
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}
      - LANGFUSE_SESSION_ID=${LANGFUSE_SESSION_ID:-ai-platform-engineering}
      - LANGFUSE_USER_ID=${LANGFUSE_USER_ID:-platform-engineer}
    command: platform-engineer

  ####################################################################################################
  #                                      PLATFORM ENGINEER LATEST                                    #
  ####################################################################################################
  platform-engineer-latest:
    build:
      context: .
      dockerfile: build/Dockerfile
    volumes:
      - ./prompt_config.yaml:/app/prompt_config.yaml
      - ./ai_platform_engineering:/app/ai_platform_engineering
    container_name: platform-engineering
    profiles:
      - latest
      - komodor
      - tracing
    depends_on:
      - agent-argocd-latest
      - agent-backstage-latest
      - agent-confluence-latest
      - agent-github-latest
      - agent-jira-latest
      - agent-komodor-latest
      - agent-pagerduty-latest
      - agent-slack-latest
      - agent-webex-latest
    env_file:
      - .env
    ports:
      - "8000:8000"
    environment:
      - AGENT_PROTOCOL=a2a
      - ARGOCD_AGENT_HOST=agent-argocd-latest
      - ARGOCD_AGENT_PORT=8000
      - BACKSTAGE_AGENT_HOST=agent-backstage-latest
      - BACKSTAGE_AGENT_PORT=8000
      - CONFLUENCE_AGENT_HOST=agent-confluence-latest
      - CONFLUENCE_AGENT_PORT=8000
      - GITHUB_AGENT_HOST=agent-github-latest
      - GITHUB_AGENT_PORT=8000
      - JIRA_AGENT_HOST=agent-jira-latest
      - JIRA_AGENT_PORT=8000
      - KOMODOR_AGENT_HOST=agent-komodor-latest
      - KOMODOR_AGENT_PORT=8000
      - PAGERDUTY_AGENT_HOST=agent-pagerduty-latest
      - PAGERDUTY_AGENT_PORT=8000
      - SLACK_AGENT_HOST=agent-slack-latest
      - SLACK_AGENT_PORT=8000
      - WEBEX_AGENT_HOST=agent-webex-latest
      - WEBEX_AGENT_PORT=8000
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}
      - LANGFUSE_SESSION_ID=${LANGFUSE_SESSION_ID:-ai-platform-engineering}
      - LANGFUSE_USER_ID=${LANGFUSE_USER_ID:-platform-engineer}
    command: platform-engineer

  ####################################################################################################
  #                                      AGENT ARGOCD BUILD & LATEST                                 #
  ####################################################################################################
  agent-argocd-build:
    build:
      context: ai_platform_engineering/agents/argocd
      dockerfile: build/Dockerfile.a2a
    container_name: agent-argocd-build
    profiles:
      - build
      - build-tracing
    volumes:
      - ./.env:/app/.env
      - ./ai_platform_engineering/agents/argocd:/app
    ports:
      - "8001:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  agent-argocd-latest:
    image: ghcr.io/cnoe-io/agent-argocd:a2a-latest
    container_name: agent-argocd-latest
    profiles:
      - latest
      - komodor
      - tracing
    volumes:
      - ./.env:/app/.env
    ports:
      - "8001:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  ####################################################################################################
  #                                      AGENT BACKSTAGE BUILD & LATEST                              #
  ####################################################################################################
  agent-backstage-build:
    build:
      context: ai_platform_engineering/agents/backstage
      dockerfile: build/Dockerfile.a2a
    container_name: agent-backstage-build
    profiles:
      - build
      - build-tracing
    volumes:
      - ./.env:/app/.env
      - ./ai_platform_engineering/agents/backstage:/app
    ports:
      - "8002:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  agent-backstage-latest:
    image: ghcr.io/cnoe-io/agent-backstage:a2a-latest
    container_name: agent-backstage-latest
    profiles:
      - latest
      - komodor
      - tracing
    volumes:
      - ./.env:/app/.env
    ports:
      - "8002:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  ####################################################################################################
  #                                      AGENT CONFLUENCE BUILD & LATEST                             #
  ####################################################################################################
  agent-confluence-build:
    build:
      context: ai_platform_engineering/agents/confluence
      dockerfile: build/Dockerfile.a2a
    container_name: agent-confluence-build
    profiles:
      - build
      - build-tracing
    volumes:
      - ./.env:/app/.env
      - ./ai_platform_engineering/agents/confluence:/app
    ports:
      - "8003:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  agent-confluence-latest:
    image: ghcr.io/cnoe-io/agent-confluence:a2a-latest
    container_name: agent-confluence-latest
    profiles:
      - latest
      - komodor
      - tracing
    volumes:
      - ./.env:/app/.env
    ports:
      - "8003:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  ####################################################################################################
  #                                      AGENT GITHUB BUILD & LATEST                                 #
  ####################################################################################################
  agent-github-build:
    build:
      context: ai_platform_engineering/agents/github
      dockerfile: build/Dockerfile.a2a
    container_name: agent-github-build
    profiles:
      - build
      - build-tracing
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.env:/app/.env
      - ./ai_platform_engineering/agents/github:/app
    ports:
      - "8004:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}
      - LANGFUSE_SESSION_ID=${LANGFUSE_SESSION_ID:-github-agent}
      - LANGFUSE_USER_ID=${LANGFUSE_USER_ID:-github-agent}

  agent-github-latest:
    image: ghcr.io/cnoe-io/agent-github:a2a-latest
    container_name: agent-github-latest
    profiles:
      - latest
      - komodor
      - tracing
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.env:/app/.env
    ports:
      - "8004:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}
      - LANGFUSE_SESSION_ID=${LANGFUSE_SESSION_ID:-github-agent}
      - LANGFUSE_USER_ID=${LANGFUSE_USER_ID:-github-agent}

  ####################################################################################################
  #                                      AGENT JIRA BUILD & LATEST                                   #
  ####################################################################################################
  agent-jira-build:
    build:
      context: ai_platform_engineering/agents/jira
      dockerfile: build/Dockerfile.a2a
    container_name: agent-jira-build
    profiles:
      - build
      - build-tracing
    volumes:
      - ./.env:/app/.env
      - ./ai_platform_engineering/agents/jira:/app
    ports:
      - "8005:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}
      - LANGFUSE_SESSION_ID=${LANGFUSE_SESSION_ID:-jira-agent}
      - LANGFUSE_USER_ID=${LANGFUSE_USER_ID:-jira-agent}

  agent-jira-latest:
    image: ghcr.io/cnoe-io/agent-jira:a2a-latest
    container_name: agent-jira-latest
    profiles:
      - latest
      - komodor
      - tracing
    volumes:
      - ./.env:/app/.env
    ports:
      - "8005:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  ####################################################################################################
  #                                      AGENT KOMODOR BUILD & LATEST                                #
  ####################################################################################################
  agent-komodor-build:
    build:
      context: ai_platform_engineering/agents/komodor
      dockerfile: build/Dockerfile.a2a
    container_name: agent-komodor-build
    profiles:
      - build
      - komodor
      - build-tracing
    volumes:
      - ./.env:/app/.env
      - ./ai_platform_engineering/agents/komodor:/app
    ports:
      - "8006:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}
  agent-komodor-latest:
    image: ghcr.io/cnoe-io/agent-komodor:a2a-latest
    container_name: agent-komodor-latest
    profiles:
      - latest
      - komodor
      - tracing
    volumes:
      - ./.env:/app/.env
    ports:
      - "8006:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}
  ####################################################################################################
  #                                      AGENT PAGERDUTY BUILD & LATEST                              #
  ####################################################################################################
  agent-pagerduty-build:
    build:
      context: ai_platform_engineering/agents/pagerduty
      dockerfile: build/Dockerfile.a2a
    container_name: agent-pagerduty-build
    profiles:
      - build
      - build-tracing
    volumes:
      - ./.env:/app/.env
      - ./ai_platform_engineering/agents/pagerduty:/app
    ports:
      - "8007:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  agent-pagerduty-latest:
    image: ghcr.io/cnoe-io/agent-pagerduty:a2a-latest
    container_name: agent-pagerduty-latest
    profiles:
      - latest
      - komodor
      - tracing
    volumes:
      - ./.env:/app/.env
    ports:
      - "8007:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  ####################################################################################################
  #                                      AGENT SLACK BUILD & LATEST                                  #
  ####################################################################################################
  agent-slack-build:
    build:
      context: ai_platform_engineering/agents/slack
      dockerfile: build/Dockerfile.a2a
    container_name: agent-slack-build
    profiles:
      - build
      - build-tracing
    volumes:
      - ./.env:/app/.env
      - ./ai_platform_engineering/agents/slack:/app
    ports:
      - "8008:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}
      - LANGFUSE_SESSION_ID=${LANGFUSE_SESSION_ID:-slack-agent}
      - LANGFUSE_USER_ID=${LANGFUSE_USER_ID:-slack-agent}

  agent-slack-latest:
    image: ghcr.io/cnoe-io/agent-slack:a2a-latest
    container_name: agent-slack-latest
    profiles:
      - latest
      - komodor
      - tracing
    volumes:
      - ./.env:/app/.env
    ports:
      - "8008:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  ####################################################################################################
  #                                      AGENT WEBEX BUILD & LATEST                                  #
  ####################################################################################################
  agent-webex-build:
    build:
      context: ai_platform_engineering/agents/webex
      dockerfile: build/Dockerfile.a2a
    container_name: agent-webex-build
    profiles:
      - webex
    volumes:
      - ./.env:/app/.env
    ports:
      - "8009:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}
  agent-webex-latest:
    image: ghcr.io/cnoe-io/agent-webex:a2a-latest
    container_name: agent-webex-latest
    profiles:
      - latest
      - komodor
      - tracing
    volumes:
      - ./.env:/app/.env
    ports:
      - "8009:8000"
    environment:
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  ####################################################################################################
  #                                      BACKSTAGE AGENT FORGE                                        #
  ####################################################################################################
  backstage-agent-forge:
    image: ghcr.io/cnoe-io/backstage-plugin-agent-forge:latest
    container_name: backstage-agent-forge
    profiles:
      - build
    ports:
      - "13000:3000"
  ####################################################################################################
  #                                    NEXIGRAPH SERVICES (GRAPHRAG/GEN)                             #
  ####################################################################################################
  neo4j:
    image: neo4j:latest
    profiles:
     - knowledge_base
     - graph_rag
     - nexigraph
    volumes:
        - ./.neo4j/logs:/logs
        - ./.neo4j/config:/config
        - ./.neo4j/data:/data
        - ./.neo4j/plugins:/plugins
    ports:
      - "7474:7474"
      - "7687:7687"
    restart: unless-stopped
    environment:
      NEO4J_AUTH: neo4j/dummy_password
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_apoc_export_file_enabled: true
      NEO4J_apoc_import_file_enabled: true
      NEO4J_apoc_import_file_use__neo4j__config: true

  nexigraph_redis:
    image: redis
    profiles:
     - knowledge_base
     - graph_rag
     - nexigraph
    command:
      - /bin/sh
      - -c
      - redis-server
    ports:
      - "6379:6379"
    restart: unless-stopped

  nexigraph_server:
    ports:
      - "8095:8095"
    image: ghcr.io/cnoe-io/nexigraph-server:latest
    profiles:
     - knowledge_base
     - graph_rag
     - nexigraph
    environment:
        LOG_LEVEL: DEBUG
        REDIS_HOST: nexigraph_redis
        NEO4J_ADDR: neo4j://neo4j:7687
        NEO4J_USERNAME: neo4j
        NEO4J_PASSWORD: dummy_password
        API_KEYS: dummy_key
        CLEANUP_INTERVAL: 86400
    restart: unless-stopped

  agent_graph_gen:
    image: ghcr.io/cnoe-io/nexigraph-agent_graph_gen:latest
    profiles:
     - knowledge_base
     - graph_rag
     - nexigraph
    environment:
        LOG_LEVEL: DEBUG
        REDIS_HOST: nexigraph_redis
        NEO4J_ADDR: neo4j://neo4j:7687
        NEO4J_USERNAME: neo4j
        NEO4J_PASSWORD: dummy_password
        SYNC_INTERVAL: 86400
        OPENAI_API_VERSION: $OPENAI_API_VERSION
        AZURE_OPENAI_ENDPOINT: $AZURE_OPENAI_ENDPOINT
        AZURE_OPENAI_API_KEY: $AZURE_OPENAI_API_KEY
        # Optional for langsith tracing:
        LANGSMITH_TRACING: "true"
        LANGSMITH_PROJECT: $LANGSMITH_PROJECT
        LANGSMITH_API_KEY: $LANGSMITH_API_KEY
        LANGSMITH_ENDPOINT: $LANGSMITH_ENDPOINT

    restart: unless-stopped
  agent_graph_qa:
    image: ghcr.io/cnoe-io/nexigraph-agent_graph_qa:latest
    profiles:
     - knowledge_base
     - graph_rag
     - nexigraph
    ports:
      - "8096:8096"
    environment:
        LOG_LEVEL: DEBUG
        REDIS_HOST: nexigraph_redis
        NEO4J_ADDR: neo4j://neo4j:7687
        NEO4J_USERNAME: neo4j
        NEO4J_PASSWORD: dummy_password
        OPENAI_API_VERSION: $OPENAI_API_VERSION
        AZURE_OPENAI_ENDPOINT: $AZURE_OPENAI_ENDPOINT
        AZURE_OPENAI_API_KEY: $AZURE_OPENAI_API_KEY
    restart: unless-stopped

  nexigraph_dummy_client:
    image: ghcr.io/cnoe-io/nexigraph-clients:latest
    profiles:
     - knowledge_base
     - graph_rag
     - nexigraph
    environment:
       SERVER_ADDR: http://nexigraph_server:8095
       API_KEY: dummy_key
       DUMMY_ENTITIES_FILE: dummy_data.json
    restart: unless-stopped
    volumes:
     - ./ai_platform_engineering/knowledge_bases/graph_rag/nexigraph/example/dummy_data.json:/app/clients/dummy_data.json

  ####################################################################################################
  #                                      LANGFUSE TRACING SERVICES                                   #
  ####################################################################################################
  # Langfuse Tracing Services (use --profile tracing to enable)
  langfuse-worker:
    image: langfuse/langfuse-worker:3
    container_name: langfuse-worker
    restart: always
    profiles:
      - build-tracing
      - tracing
    depends_on:
      langfuse-postgres:
        condition: service_healthy
      langfuse-minio:
        condition: service_healthy
      langfuse-redis:
        condition: service_healthy
      langfuse-clickhouse:
        condition: service_healthy
    ports:
      - "127.0.0.1:3030:3030"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@langfuse-postgres:5432/postgres
      SALT: "mysalt"
      ENCRYPTION_KEY: "0000000000000000000000000000000000000000000000000000000000000000"
      CLICKHOUSE_MIGRATION_URL: clickhouse://langfuse-clickhouse:9000
      CLICKHOUSE_URL: http://langfuse-clickhouse:8123
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
      CLICKHOUSE_CLUSTER_ENABLED: "false"
      LANGFUSE_S3_EVENT_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_EVENT_UPLOAD_REGION: us-east-1
      LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID: minio
      LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY: miniosecret
      LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT: http://langfuse-minio:9000
      LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE: "true"
      LANGFUSE_S3_EVENT_UPLOAD_PREFIX: "events/"
      LANGFUSE_S3_MEDIA_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_MEDIA_UPLOAD_REGION: us-east-1
      LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID: minio
      LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY: miniosecret
      LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT: http://langfuse-minio:9000
      LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE: "true"
      LANGFUSE_S3_MEDIA_UPLOAD_PREFIX: "media/"
      REDIS_HOST: langfuse-redis
      REDIS_AUTH: myredissecret

  langfuse-web:
    image: langfuse/langfuse:3
    container_name: langfuse-web
    restart: always
    profiles:
      - build-tracing
      - tracing
    depends_on:
      langfuse-postgres:
        condition: service_healthy
      langfuse-minio:
        condition: service_healthy
      langfuse-redis:
        condition: service_healthy
      langfuse-clickhouse:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@langfuse-postgres:5432/postgres
      SALT: "mysalt"
      ENCRYPTION_KEY: "0000000000000000000000000000000000000000000000000000000000000000"
      CLICKHOUSE_MIGRATION_URL: clickhouse://langfuse-clickhouse:9000
      CLICKHOUSE_URL: http://langfuse-clickhouse:8123
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
      CLICKHOUSE_CLUSTER_ENABLED: "false"
      LANGFUSE_S3_EVENT_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_EVENT_UPLOAD_REGION: us-east-1
      LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID: minio
      LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY: miniosecret
      LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT: http://langfuse-minio:9000
      LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE: "true"
      LANGFUSE_S3_EVENT_UPLOAD_PREFIX: "events/"
      LANGFUSE_S3_MEDIA_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_MEDIA_UPLOAD_REGION: us-east-1
      LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID: minio
      LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY: miniosecret
      LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT: http://langfuse-minio:9000
      LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE: "true"
      LANGFUSE_S3_MEDIA_UPLOAD_PREFIX: "media/"
      REDIS_HOST: langfuse-redis
      REDIS_AUTH: myredissecret
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: mysecret

  langfuse-clickhouse:
    image: clickhouse/clickhouse-server
    container_name: langfuse-clickhouse
    restart: always
    profiles:
      - build-tracing
      - tracing
    user: "101:101"
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
    volumes:
      - langfuse_clickhouse_data:/var/lib/clickhouse
      - langfuse_clickhouse_logs:/var/log/clickhouse-server
    ports:
      - "127.0.0.1:8123:8123"
      - "127.0.0.1:9000:9000"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 1s

  langfuse-minio:
    image: minio/minio
    container_name: langfuse-minio
    restart: always
    profiles:
      - build-tracing
      - tracing
    entrypoint: sh
    command: -c 'mkdir -p /data/langfuse && minio server --address ":9000" --console-address ":9001" /data'
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniosecret
    ports:
      - "9090:9000"
      - "127.0.0.1:9091:9001"
    volumes:
      - langfuse_minio_data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 1s

  langfuse-redis:
    image: redis:7
    container_name: langfuse-redis
    restart: always
    profiles:
      - build-tracing
      - tracing
    command: >
      --requirepass ${REDIS_AUTH:-myredissecret}
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 10s
      retries: 10

  langfuse-postgres:
    image: postgres:15
    container_name: langfuse-postgres
    restart: always
    profiles:
      - build-tracing
      - tracing
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - langfuse_postgres_data:/var/lib/postgresql/data

volumes:
  langfuse_postgres_data:
    driver: local
  langfuse_clickhouse_data:
    driver: local
  langfuse_clickhouse_logs:
    driver: local
  langfuse_minio_data:
    driver: local
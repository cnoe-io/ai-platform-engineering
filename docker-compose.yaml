services:
  ####################################################################################################
  #                                 AI Platform Engineer A2A P2P                                  #
  ####################################################################################################
  platform-engineer-p2p:
    image: ghcr.io/cnoe-io/ai-platform-engineering:${IMAGE_TAG:-stable}
    container_name: platform-engineer-p2p
    volumes:
      - .env:/app/.env
      - ./prompt_config.yaml:/app/prompt_config.yaml
      # - ./ai_platform_engineering:/app/ai_platform_engineering
    depends_on:
      - agent-argocd-p2p
      - agent-backstage-p2p
      - agent-confluence-p2p
      - agent-github-p2p
      - agent-jira-p2p
      - agent-pagerduty-p2p
      - agent-slack-p2p
      - agent-weather-p2p
    profiles:
      - p2p
      - p2p-tracing
    env_file:
      - .env
    ports:
      # Expose the AI Platform Engineer agent on port 8000
      - "8000:8000"
    environment:
      - A2A_TRANSPORT=p2p
      - ARGOCD_AGENT_HOST=agent-argocd-p2p
      - BACKSTAGE_AGENT_HOST=agent-backstage-p2p
      - CONFLUENCE_AGENT_HOST=agent-confluence-p2p
      - JIRA_AGENT_HOST=agent-jira-p2p
      - GITHUB_AGENT_HOST=agent-github-p2p
      - PAGERDUTY_AGENT_HOST=agent-pagerduty-p2p
      - SLACK_AGENT_HOST=agent-slack-p2p
      - KOMODOR_AGENT_HOST=agent-komodor-p2p
      - WEATHER_AGENT_HOST=agent-weather-p2p
      - KB_RAG_AGENT_HOST=kb-rag
      # Uncomment this once the stable GHCR image includes tracing evaluation support
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY:-NOT_SET}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY:-NOT_SET}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}
      - LANGFUSE_SESSION_ID=${LANGFUSE_SESSION_ID:-platform-engineer}
      - LANGFUSE_USER_ID=${LANGFUSE_USER_ID:-platform-engineer}
    command: platform-engineer
  # AI Platform Engineer Multi-Agent System (local build for tracing)
  # TODO: Remove this local build service once the stable GHCR image includes tracing evaluation support
  ####################################################################################################
  #                                            AI Platform Engineer (tracing)                      #
  ####################################################################################################
  platform-engineer-slim:
    image: ghcr.io/cnoe-io/ai-platform-engineering:${IMAGE_TAG:-stable}
    container_name: platform-engineer-slim
    volumes:
      - .env:/app/.env
      - ./prompt_config.yaml:/app/prompt_config.yaml
    profiles:
      - slim
      - slim-tracing
    depends_on:
      - slim-dataplane
      - agent-argocd-slim
      - agent-backstage-slim
      - agent-confluence-slim
      - agent-github-slim
      - agent-jira-slim
      - agent-komodor-slim
      - agent-pagerduty-slim
      - agent-slack-slim
      - agent-weather-slim
    env_file:
      - .env
    ports:
      # Expose the AI Platform Engineer agent on port 8000
      - "8000:8000"
    environment:
      - A2A_TRANSPORT=slim
      - ARGOCD_AGENT_HOST=agent-argocd-slim
      - BACKSTAGE_AGENT_HOST=agent-backstage-slim
      - CONFLUENCE_AGENT_HOST=agent-confluence-slim
      - GITHUB_AGENT_HOST=agent-github-slim
      - JIRA_AGENT_HOST=agent-jira-slim
      - KOMODOR_AGENT_HOST=agent-komodor-slim
      - PAGERDUTY_AGENT_HOST=agent-pagerduty-slim
      - SLACK_AGENT_HOST=agent-slack-slim
      - WEBEX_AGENT_HOST=agent-webex-slim
      - WEATHER_AGENT_HOST=agent-weather-slim
      # Enable Komodor
      - ENABLE_KOMODOR=true
      # Tracing configuration (will be read from .env if ENABLE_TRACING=true)
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY:-NOT_SET}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY:-NOT_SET}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}
      - LANGFUSE_SESSION_ID=${LANGFUSE_SESSION_ID:-platform-engineer}
      - LANGFUSE_USER_ID=${LANGFUSE_USER_ID:-platform-engineer}
    command: platform-engineer

  ####################################################################################################
  #                                            SLIM Dataplane and control plane                      #
  ####################################################################################################
  slim-dataplane:
    image: ghcr.io/agntcy/slim:0.3.15
    container_name: slim-dataplane
    profiles:
      - slim
      - slim-tracing
    ports:
      - "46357:46357"
    environment:
      - PASSWORD=${SLIM_GATEWAY_PASSWORD:-dummy_password}
      - CONFIG_PATH=/config.yaml
    volumes:
      - ./slim-config.yaml:/config.yaml
    command: ["/slim", "--config", "/config.yaml"]
  slim-control-plane:
    image: ghcr.io/agntcy/slim/control-plane:0.0.1
    container_name: slim-control-plane
    profiles:
      - slim
      - slim-tracing
    ports:
      - "50051:50051"
      - "50052:50052"
    environment:
      - PASSWORD=${SLIM_GATEWAY_PASSWORD:-dummy_password}
      - CONFIG_PATH=/config.yaml
    volumes:
      - ./slim-config.yaml:/config.yaml
    command: ["/slim", "--config", "/config.yaml"]

  ####################################################################################################
  #                                           MCP ARGOCD                                            #
  ####################################################################################################
  mcp-argocd:
    image: ghcr.io/cnoe-io/mcp-argocd:${IMAGE_TAG:-stable}
    container_name: mcp-argocd
    profiles:
      - p2p
      - slim
      - p2p-tracing
      - slim-tracing
    env_file:
      - .env
    ports:
      - "18000:8000"
    environment:
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8000

  ####################################################################################################
  #                                      AGENT ARGOCD A2A over SLIM                                  #
  ####################################################################################################
  agent-argocd-slim:
    image: ghcr.io/cnoe-io/agent-argocd:${IMAGE_TAG:-stable}
    container_name: agent-argocd-slim
    profiles:
      - slim
      - slim-tracing
    depends_on:
      - mcp-argocd
    volumes:
      - ./.env:/app/.env
    ports:
      - "8001:8000"
    environment:
      - A2A_TRANSPORT=slim
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_PORT=8000
      - MCP_HOST=mcp-argocd
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  ####################################################################################################
  #                                      AGENT ARGOCD A2A P2P                                        #
  ####################################################################################################
  agent-argocd-p2p:
    image: ghcr.io/cnoe-io/agent-argocd:${IMAGE_TAG:-stable}
    container_name: agent-argocd-p2p
    profiles:
      - p2p
      - p2p-tracing
    depends_on:
      - mcp-argocd
    volumes:
      - ./.env:/app/.env
    ports:
      - "8001:8000"
    environment:
      - A2A_TRANSPORT=p2p
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_PORT=8000
      - MCP_HOST=mcp-argocd
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  ####################################################################################################
  #                                      AGENT BACKSTAGE A2A over SLIM                               #
  ####################################################################################################
  agent-backstage-slim:
    image: ghcr.io/cnoe-io/agent-backstage:${IMAGE_TAG:-stable}
    container_name: agent-backstage-slim
    profiles:
      - slim
      - slim-tracing
    volumes:
      - ./.env:/app/.env
    depends_on:
      - slim-dataplane
    ports:
      - "8002:8000"
    environment:
      - A2A_TRANSPORT=slim
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_PORT=8000
      - MCP_HOST=mcp-backstage
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  ####################################################################################################
  #                                      AGENT BACKSTAGE A2A P2P                                     #
  ####################################################################################################
  agent-backstage-p2p:
    image: ghcr.io/cnoe-io/agent-backstage:${IMAGE_TAG:-stable}
    container_name: agent-backstage-p2p
    profiles:
      - p2p
      - p2p-tracing
    volumes:
      - ./.env:/app/.env
    ports:
      - "8002:8000"
    environment:
      - A2A_TRANSPORT=p2p
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_PORT=8000
      - MCP_HOST=mcp-backstage
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  ####################################################################################################
  #                                      MCP BACKSTAGE                                               #
  ####################################################################################################
  mcp-backstage:
    image: ghcr.io/cnoe-io/mcp-backstage:${IMAGE_TAG:-stable}
    container_name: mcp-backstage
    profiles:
      - slim
      - p2p
      - p2p-tracing
      - slim-tracing
    env_file:
      - .env
    ports:
      - "18001:8000"
    environment:
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8000

  ####################################################################################################
  #                                      AGENT CONFLUENCE A2A over SLIM                              #
  ####################################################################################################

  agent-confluence-slim:
    image: ghcr.io/cnoe-io/agent-confluence:${IMAGE_TAG:-stable}
    container_name: agent-confluence-slim
    profiles:
      - slim
      - slim-tracing
    depends_on:
      - slim-dataplane
    volumes:
      - ./.env:/app/.env
    ports:
      - "8003:8000"
    environment:
      - A2A_TRANSPORT=slim
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_PORT=8000
      - MCP_HOST=mcp-confluence
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  ####################################################################################################
  #                                      AGENT CONFLUENCE A2A P2P                                    #
  ####################################################################################################
  agent-confluence-p2p:
    image: ghcr.io/cnoe-io/agent-confluence:${IMAGE_TAG:-stable}
    container_name: agent-confluence-p2p
    profiles:
      - p2p
      - p2p-tracing
    volumes:
      - ./.env:/app/.env
    ports:
      - "8003:8000"
    environment:
      - A2A_TRANSPORT=p2p
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_PORT=8000
      - MCP_HOST=mcp-confluence
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  ####################################################################################################
  #                                      MCP CONFLUENCE                                             #
  ####################################################################################################
  mcp-confluence:
    image: ghcr.io/cnoe-io/mcp-confluence:${IMAGE_TAG:-stable}
    container_name: mcp-confluence
    profiles:
      - slim
      - p2p
      - p2p-tracing
      - slim-tracing
    env_file:
      - .env
    ports:
      - "18002:8000"
    environment:
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8000

  ####################################################################################################
  #                                      AGENT GITHUB A2A over SLIM                                  #
  ####################################################################################################
  agent-github-slim:
    image: ghcr.io/cnoe-io/agent-github:${IMAGE_TAG:-stable}
    container_name: agent-github-slim
    profiles:
      - slim
      - slim-tracing
    depends_on:
      - slim-dataplane
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.env:/app/.env
    ports:
      - "8004:8000"
    environment:
      - A2A_TRANSPORT=slim
      - MCP_MODE=${MCP_MODE:-http}
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}
      - LANGFUSE_SESSION_ID=${LANGFUSE_SESSION_ID:-github-agent}
      - LANGFUSE_USER_ID=${LANGFUSE_USER_ID:-github-agent}

  ####################################################################################################
  #                                      AGENT GITHUB A2A P2P                                        #
  ####################################################################################################
  agent-github-p2p:
    image: ghcr.io/cnoe-io/agent-github:${IMAGE_TAG:-stable}
    container_name: agent-github-p2p
    profiles:
      - p2p
      - p2p-tracing
    volumes:
      - ./.env:/app/.env
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8004:8000"
    environment:
      - A2A_TRANSPORT=p2p
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_PORT=8000
      - MCP_HOST=mcp-github
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}

  ####################################################################################################
  #                                      AGENT JIRA SLIM                                             #
  ####################################################################################################
  agent-jira-slim:
    image: ghcr.io/cnoe-io/agent-jira:${IMAGE_TAG:-stable}
    container_name: agent-jira-slim
    profiles:
      - slim
      - slim-tracing
    depends_on:
      - slim-dataplane
    volumes:
      - ./.env:/app/.env
    ports:
      - "8005:8000"
    environment:
      - A2A_TRANSPORT=slim
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_PORT=8000
      - MCP_HOST=mcp-jira
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}
      - LANGFUSE_SESSION_ID=${LANGFUSE_SESSION_ID:-jira-agent}
      - LANGFUSE_USER_ID=${LANGFUSE_USER_ID:-jira-agent}

  ####################################################################################################
  #                                      AGENT JIRA A2A P2P                                          #
  ####################################################################################################
  agent-jira-p2p:
    image: ghcr.io/cnoe-io/agent-jira:${IMAGE_TAG:-stable}
    container_name: agent-jira-p2p
    profiles:
      - p2p
      - p2p-tracing
    volumes:
      - ./.env:/app/.env
    ports:
      - "8005:8000"
    environment:
      - A2A_TRANSPORT=p2p
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_PORT=8000
      - MCP_HOST=mcp-jira
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}
      - LANGFUSE_SESSION_ID=${LANGFUSE_SESSION_ID:-jira-agent}

  ####################################################################################################
  #                                      MCP JIRA                                                    #
  ####################################################################################################
  mcp-jira:
    image: ghcr.io/cnoe-io/mcp-jira:${IMAGE_TAG:-stable}
    container_name: mcp-jira
    profiles:
      - slim
      - p2p
      - p2p-tracing
      - slim-tracing
    env_file:
      - .env
    ports:
      - "18003:8000"
    environment:
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8000

  ####################################################################################################
  #                                      AGENT KOMODOR A2A over SLIM                                 #
  ####################################################################################################
  agent-komodor-slim:
    image: ghcr.io/cnoe-io/agent-komodor:${IMAGE_TAG:-stable}
    container_name: agent-komodor-slim
    profiles:
      - slim
      - slim-tracing
    depends_on:
      - slim-dataplane
    volumes:
      - ./.env:/app/.env
    ports:
      - "8006:8000"
    environment:
      - A2A_TRANSPORT=slim
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_PORT=8000
      - MCP_HOST=mcp-komodor
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  ####################################################################################################
  #                                      AGENT KOMODOR A2A P2P                                       #
  ####################################################################################################
  agent-komodor-p2p:
    image: ghcr.io/cnoe-io/agent-komodor:${IMAGE_TAG:-stable}
    container_name: agent-komodor-p2p
    profiles:
      - p2p
      - p2p-tracing
    volumes:
      - ./.env:/app/.env
    ports:
      - "8006:8000"
    environment:
      - A2A_TRANSPORT=p2p
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_PORT=8000
      - MCP_HOST=mcp-komodor
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  ####################################################################################################
  #                                      MCP KOMODOR                                                 #
  ####################################################################################################
  mcp-komodor:
    image: ghcr.io/cnoe-io/mcp-komodor:${IMAGE_TAG:-stable}
    container_name: mcp-komodor
    profiles:
      - slim
      - p2p
      - p2p-tracing
      - slim-tracing
    env_file:
      - .env
    ports:
      - "18004:8000"
    environment:
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8000

  ####################################################################################################
  #                                      AGENT PAGERDUTY A2A over SLIM                               #
  ####################################################################################################
  agent-pagerduty-slim:
    image: ghcr.io/cnoe-io/agent-pagerduty:${IMAGE_TAG:-stable}
    profiles:
      - slim
      - slim-tracing
    depends_on:
      - slim-dataplane
    volumes:
      - ./.env:/app/.env
    ports:
      - "8007:8000"
    environment:
      - A2A_TRANSPORT=slim
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_PORT=8000
      - MCP_HOST=mcp-pagerduty
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  ####################################################################################################
  #                                      AGENT PAGERDUTY A2A P2P                                     #
  ####################################################################################################
  agent-pagerduty-p2p:
    image: ghcr.io/cnoe-io/agent-pagerduty:${IMAGE_TAG:-stable}
    container_name: agent-pagerduty-p2p
    profiles:
      - p2p
      - p2p-tracing
    volumes:
      - ./.env:/app/.env
    ports:
      - "8007:8000"


    environment:
      - A2A_TRANSPORT=p2p
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_PORT=8000
      - MCP_HOST=mcp-pagerduty
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  ####################################################################################################
  #                                      MCP PAGERDUTY                                             #
  ####################################################################################################
  mcp-pagerduty:
    image: ghcr.io/cnoe-io/mcp-pagerduty:${IMAGE_TAG:-stable}
    container_name: mcp-pagerduty
    profiles:
      - p2p
      - slim
      - p2p-tracing
      - slim-tracing
    env_file:
      - .env
    ports:
      - "18005:8000"
    environment:
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8000

  ####################################################################################################
  #                                      AGENT SLACK A2A over SLIM                                   #
  ####################################################################################################
  agent-slack-slim:
    image: ghcr.io/cnoe-io/agent-slack:${IMAGE_TAG:-stable}
    container_name: agent-slack-slim
    profiles:
      - slim
      - slim-tracing
    depends_on:
      - slim-dataplane
    volumes:
      - ./.env:/app/.env
    ports:
      - "8008:8000"
    environment:
      - A2A_TRANSPORT=slim
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_PORT=8000
      - MCP_HOST=mcp-slack
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}
      - LANGFUSE_SESSION_ID=${LANGFUSE_SESSION_ID:-slack-agent}
      - LANGFUSE_USER_ID=${LANGFUSE_USER_ID:-slack-agent}

  ####################################################################################################
  #                                      AGENT SLACK A2A P2P                                         #
  ####################################################################################################
  agent-slack-p2p:
    image: ghcr.io/cnoe-io/agent-slack:${IMAGE_TAG:-stable}
    container_name: agent-slack-p2p
    profiles:
      - p2p
      - p2p-tracing
    volumes:
      - ./.env:/app/.env
    ports:
      - "8008:8000"
    environment:
      - A2A_TRANSPORT=p2p
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_PORT=8000
      - MCP_HOST=mcp-slack
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}

  ####################################################################################################
  #                                      MCP SLACK                                                   #
  ####################################################################################################
  mcp-slack:
    image: ghcr.io/cnoe-io/mcp-slack:${IMAGE_TAG:-stable}
    container_name: mcp-slack
    profiles:
      - slim
      - p2p
      - p2p-tracing
      - slim-tracing
    env_file:
      - .env
    ports:
      - "18006:8000"
    environment:
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8000

  ####################################################################################################
  #                                      AGENT WEATHER A2A over SLIM                                 #
  ####################################################################################################
  agent-weather-slim:
    image: ghcr.io/cnoe-io/agent-weather:${IMAGE_TAG:-stable}
    container_name: agent-weather-slim
    profiles:
      - slim
      - slim-tracing
    depends_on:
      - slim-dataplane
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.env:/app/.env
      - ./ai_platform_engineering/agents/weather/agent_weather:/app/agent_weather
      - ./ai_platform_engineering/agents/weather/clients:/app/clients
    ports:
      - "8009:8000"
    environment:
      - A2A_TRANSPORT=slim
      - MCP_MODE=${MCP_MODE:-http}
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://langfuse-web:3000}
      - LANGFUSE_SESSION_ID=${LANGFUSE_SESSION_ID:-weather-agent}
      - LANGFUSE_USER_ID=${LANGFUSE_USER_ID:-weather-agent}

  ####################################################################################################
  #                                      AGENT WEATHER A2A P2P                                       #
  ####################################################################################################
  agent-weather-p2p:
    image: ghcr.io/cnoe-io/agent-weather:${IMAGE_TAG:-stable}
    container_name: agent-weather-p2p
    profiles:
      - p2p
      - p2p-tracing
    volumes:
      - ./.env:/app/.env
      - /var/run/docker.sock:/var/run/docker.sock
      - ./ai_platform_engineering/agents/weather/agent_weather:/app/agent_weather
      - ./ai_platform_engineering/agents/weather/clients:/app/clients
    ports:
      - "8009:8000"
    environment:
      - A2A_TRANSPORT=p2p
      - MCP_MODE=${MCP_MODE:-http}
      - MCP_PORT=8000
      - MCP_HOST=mcp-weather
      - ENABLE_TRACING=${ENABLE_TRACING:-false}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}

  ####################################################################################################
  #                                      AGENT BACKSTAGE A2A P2P                                     #
  ####################################################################################################
  backstage-agent-forge:
    image: ghcr.io/cnoe-io/backstage-plugin-agent-forge:latest
    container_name: backstage-agent-forge
    ports:
      - "13000:3000"
  ####################################################################################################
  #                                          KB-RAG SERVICES                                         #
  ####################################################################################################
  kb-rag-agent:
    image: ghcr.io/cnoe-io/kb-rag-agent-a2a:latest
    container_name: kb-rag
    profiles:
      - kb-rag
    depends_on:
      - milvus-standalone
    volumes:
      - ./.env:/app/.env
    ports:
      - "8010:8000"
  kb-rag-server:
    build:
      context: ai_platform_engineering/knowledge_bases/rag
      dockerfile: build/Dockerfile.server
    container_name: kb-rag-server
    profiles:
      - kb-rag
    depends_on:
      - milvus-standalone
      - kb-rag-redis
    volumes:
      - ./.env:/app/.env
    ports:
      - "9446:9446"
    environment:
      - REDIS_URL=redis://kb-rag-redis:6379/0
  kb-rag-web:
    build:
      context: ai_platform_engineering/knowledge_bases/rag
      dockerfile: build/Dockerfile.web
    container_name: kb-rag-web
    profiles:
      - kb-rag
    depends_on:
      - kb-rag-server
    ports:
      - "9447:80"
  milvus-standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.6.0
    command: ["milvus", "run", "standalone"]
    profiles:
      - kb-rag
    security_opt:
      - seccomp:unconfined
    environment:
      MINIO_REGION: us-east-1
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: milvus-minio:9000
      LOG_LEVEL: error
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - etcd
      - milvus-minio
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.18
    profiles:
      - kb-rag
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://etcd:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus-minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2024-05-28T17-19-04Z
    profiles:
      - kb-rag
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  kb-rag-redis:
    image: redis:7.2-alpine
    container_name: kb-rag-redis
    profiles:
      - kb-rag
    ports:
      - "6379:6379"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/kb-rag-redis:/data
    command: >
      redis-server 
      --appendonly yes 
      --save 60 1 
      --maxmemory 256mb 
      --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    restart: unless-stopped



  ####################################################################################################
  #                                      LANGFUSE TRACING SERVICES                                   #
  ####################################################################################################
  # Langfuse Tracing Services (use ENABLE_TRACING=true and --profile=tracing to enable)
  # Reference: https://github.com/langfuse/langfuse/blob/main/docker-compose.yml
  langfuse-worker:
    image: langfuse/langfuse-worker:3
    container_name: langfuse-worker
    restart: always
    profiles:
      - tracing
      - p2p-tracing
      - slim-tracing
    depends_on:
      langfuse-postgres:
        condition: service_healthy
      langfuse-minio:
        condition: service_healthy
      langfuse-redis:
        condition: service_healthy
      langfuse-clickhouse:
        condition: service_healthy
    ports:
      - "127.0.0.1:3030:3030"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@langfuse-postgres:5432/postgres
      SALT: "mysalt"
      ENCRYPTION_KEY: "0000000000000000000000000000000000000000000000000000000000000000"
      CLICKHOUSE_MIGRATION_URL: clickhouse://langfuse-clickhouse:9000
      CLICKHOUSE_URL: http://langfuse-clickhouse:8123
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
      CLICKHOUSE_CLUSTER_ENABLED: "false"
      # S3 Event Upload Configuration (Required for tracing)
      LANGFUSE_S3_EVENT_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_EVENT_UPLOAD_REGION: us-east-1
      LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID: minio
      LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY: miniosecret
      LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT: http://langfuse-minio:9000
      LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE: "true"
      LANGFUSE_S3_EVENT_UPLOAD_PREFIX: "events/"
      # S3 Media Upload Configuration
      LANGFUSE_S3_MEDIA_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_MEDIA_UPLOAD_REGION: us-east-1
      LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID: minio
      LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY: miniosecret
      LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT: http://langfuse-minio:9000
      LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE: "true"
      LANGFUSE_S3_MEDIA_UPLOAD_PREFIX: "media/"
      REDIS_HOST: langfuse-redis
      REDIS_AUTH: myredissecret

  langfuse-web:
    image: langfuse/langfuse:3
    container_name: langfuse-web
    restart: always
    profiles:
      - tracing
      - p2p-tracing
      - slim-tracing
    depends_on:
      langfuse-postgres:
        condition: service_healthy
      langfuse-minio:
        condition: service_healthy
      langfuse-redis:
        condition: service_healthy
      langfuse-clickhouse:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@langfuse-postgres:5432/postgres
      SALT: "mysalt"
      ENCRYPTION_KEY: "0000000000000000000000000000000000000000000000000000000000000000"
      CLICKHOUSE_MIGRATION_URL: clickhouse://langfuse-clickhouse:9000
      CLICKHOUSE_URL: http://langfuse-clickhouse:8123
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
      CLICKHOUSE_CLUSTER_ENABLED: "false"
      # S3 Event Upload Configuration (Required for tracing)
      LANGFUSE_S3_EVENT_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_EVENT_UPLOAD_REGION: us-east-1
      LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID: minio
      LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY: miniosecret
      LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT: http://langfuse-minio:9000
      LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE: "true"
      LANGFUSE_S3_EVENT_UPLOAD_PREFIX: "events/"
      # S3 Media Upload Configuration
      LANGFUSE_S3_MEDIA_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_MEDIA_UPLOAD_REGION: us-east-1
      LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID: minio
      LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY: miniosecret
      LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT: http://langfuse-minio:9000
      LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE: "true"
      LANGFUSE_S3_MEDIA_UPLOAD_PREFIX: "media/"
      REDIS_HOST: langfuse-redis
      REDIS_AUTH: myredissecret
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: mysecret

  langfuse-clickhouse:
    image: clickhouse/clickhouse-server
    container_name: langfuse-clickhouse
    restart: always
    profiles:
      - tracing
      - p2p-tracing
      - slim-tracing
    user: "101:101"
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
    volumes:
      - langfuse_clickhouse_data:/var/lib/clickhouse
      - langfuse_clickhouse_logs:/var/log/clickhouse-server
    ports:
      - "127.0.0.1:8123:8123"
      - "127.0.0.1:9000:9000"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 1s

  langfuse-minio:
    image: minio/minio
    container_name: langfuse-minio
    restart: always
    profiles:
      - tracing
      - p2p-tracing
      - slim-tracing
    entrypoint: sh
    command: -c 'mkdir -p /data/langfuse && minio server --address ":9000" --console-address ":9001" /data'
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniosecret
    ports:
      - "9090:9000"
      - "127.0.0.1:9091:9001"
    volumes:
      - langfuse_minio_data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 1s

  langfuse-redis:
    image: redis:7
    container_name: langfuse-redis
    restart: always
    profiles:
      - tracing
      - p2p-tracing
      - slim-tracing
    command: >
      --requirepass ${REDIS_AUTH:-myredissecret}
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 10s
      retries: 10

  langfuse-postgres:
    image: postgres:15
    container_name: langfuse-postgres
    restart: always
    profiles:
      - tracing
      - p2p-tracing
      - slim-tracing
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - langfuse_postgres_data:/var/lib/postgresql/data

volumes:
  langfuse_postgres_data:
    driver: local
  langfuse_clickhouse_data:
    driver: local
  langfuse_clickhouse_logs:
    driver: local
  langfuse_minio_data:
    driver: local
  milvus_etcd:
    driver: local
  milvus_minio:
    driver: local
  milvus_data:
    driver: local

services:
  # AI Platform Engineer Multi-Agent System
  ai-platform-engineer:
    image: ghcr.io/cnoe-io/ai-platform-engineering:stable
    container_name: platform-engineer
    depends_on:
      - agent-argocd
      - agent-atlassian
      - agent-pagerduty
      - agent-github
      - agent-slack
      - phoenix
    env_file:
      - .env
    ports:
      # Expose the AI Platform Engineer agent on port 8000
      - "8000:8000"
    environment:
      - AGENT_PROTOCOL=a2a
      - ARGOCD_AGENT_HOST=agent-argocd
      - ARGOCD_AGENT_PORT=8000
      - ATLASSIAN_AGENT_HOST=agent-atlassian
      - ATLASSIAN_AGENT_PORT=8000
      - GITHUB_AGENT_HOST=agent-github
      - GITHUB_AGENT_PORT=8000
      - PAGERDUTY_AGENT_HOST=agent-pagerduty
      - PAGERDUTY_AGENT_PORT=8000
      - SLACK_AGENT_HOST=agent-slack
      - SLACK_AGENT_PORT=8000
      # Phoenix Tracing Configuration
      - PHOENIX_COLLECTOR_ENDPOINT=http://phoenix:4317
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://phoenix:4317
      - PHOENIX_TRACE_USER_REQUESTS_ONLY=true
      - PHOENIX_FILTER_HEALTH_CHECKS=true
      - PHOENIX_SPAN_ATTRIBUTE_LIMIT=10

    volumes:
      - .env:/app/.env
    command: platform-engineer
  # Agent ArgoCD
  agent-argocd:
    image: ghcr.io/cnoe-io/agent-argocd:a2a-stable
    container_name: agent-argocd
    env_file:
      - .env.argocd
    volumes:
      - ./.env.argocd:/app/.env
    ports:
      # Expose the ArgoCD agent on port 8080
      - "8001:8000"
  # Agent Atlassian
  agent-atlassian:
    image: ghcr.io/cnoe-io/agent-atlassian:a2a-stable
    container_name: agent-atlassian
    env_file:
      - .env.atlassian
    volumes:
      - ./.env.atlassian:/app/.env
    ports:
      # Expose the Atlassian agent on port 8002
      - "8002:8000"
  # Agent GitHub
  agent-github:
    image: ghcr.io/cnoe-io/agent-github:a2a-stable
    container_name: agent-github
    env_file:
      - .env.github
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.env.github:/app/.env
    ports:
      # Expose the GitHub agent on port 8003
      - "8003:8000"
  # Agent PagerDuty
  agent-pagerduty:
    image: ghcr.io/cnoe-io/agent-pagerduty:a2a-stable
    container_name: agent-pagerduty
    env_file:
      - .env.pagerduty
    volumes:
      - ./.env.pagerduty:/app/.env
    ports:
      # Expose the PagerDuty agent on port 8004
      - "8004:8000"
  # Agent Slack
  agent-slack:
    image: ghcr.io/cnoe-io/agent-slack:a2a-stable
    container_name: agent-slack
    env_file:
      - .env.slack
    volumes:
      - ./.env.slack:/app/.env
    ports:
      # Expose the Slack agent on port 8005
      - "8005:8000"
  # Sample UI container to interact with A2A applications
  ui:
    image: ghcr.io/eti-demos/agentconnect
    container_name: ui
    ports:
      - "3001:3001"
  # Phoenix Distributed Tracing
  phoenix:
    image: arizephoenix/phoenix:latest
    container_name: phoenix
    ports:
      - "6006:6006"  # Phoenix UI
      - "4317:4317"  # OTLP gRPC receiver
      - "4318:4318"  # OTLP HTTP receiver
    environment:
      - PHOENIX_PORT=6006
      - PHOENIX_ENABLE_PROMETHEUS=false  # Reduce metric noise
      - PHOENIX_TRACE_SAMPLING_RATE=0.1  # Sample non-user traces
      - PHOENIX_MAX_TRACE_SIZE=10MB      # Limit trace payload
      - PHOENIX_COLLECTOR_ENDPOINT=0.0.0.0:4317
    volumes:
      - phoenix_data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6006/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # backstage-agent-forge:
  #   image: ghcr.io/cnoe-io/backstage-agent-forge:stable
  #   container_name: backstage-agent-forge
  #   ports:
  #     - "3000:3000"

volumes:
  phoenix_data:

# ============================================================================
# AUTO-GENERATED FILE - DO NOT EDIT DIRECTLY
# ============================================================================
# Generated by: scripts/generate-docker-compose.py
# Mode: PROD (with container images)
# Personas: caipe-complete-with-tracing
# Transports: a2a-p2p, a2a-over-slim
#
# To regenerate this file, run:
#   make generate-docker-compose PERSONAS="caipe-complete-with-tracing"
#
# Or manually:
#   ./scripts/generate-docker-compose.py --persona caipe-complete-with-tracing
#
# Usage:
#   docker compose -f docker-compose/docker-compose.caipe-complete-with-tracing.yaml --profile a2a-p2p up         # A2A peer-to-peer transport
#   docker compose -f docker-compose/docker-compose.caipe-complete-with-tracing.yaml --profile a2a-over-slim up   # A2A over SLIM transport
# ============================================================================

services:
  caipe-caipe-complete-with-tracing-p2p:
    image: ghcr.io/cnoe-io/ai-platform-engineering:${IMAGE_TAG:-stable}
    container_name: caipe-caipe-complete-with-tracing-p2p
    volumes:
    - ../prompt_config.yaml:/app/prompt_config.yaml
    - ../persona.yaml:/app/persona.yaml
    env_file:
    - ../.env
    ports:
    - 8000:8000
    environment:
    - AGENT_CONNECTIVITY_ENABLE_BACKGROUND=true # Routinely checks each subagent connectivity to add or remove any from existing tools list.
    - AGENT_PROTOCOL=a2a # Use A2A protocol for agent-to-agent communication.
    - SKIP_AGENT_CONNECTIVITY_CHECK=false # Do not skip the connectivity check; supervisor agent will check each subagent is reachable and only add reachable tools.
    - A2A_TRANSPORT=p2p
    - ARGOCD_AGENT_HOST=agent-argocd-caipe-complete-with-tracing-p2p
    - AWS_AGENT_HOST=agent-aws-caipe-complete-with-tracing-p2p
    - BACKSTAGE_AGENT_HOST=agent-backstage-caipe-complete-with-tracing-p2p
    - CONFLUENCE_AGENT_HOST=agent-confluence-caipe-complete-with-tracing-p2p
    - GITHUB_AGENT_HOST=agent-github-caipe-complete-with-tracing-p2p
    - JIRA_AGENT_HOST=agent-jira-caipe-complete-with-tracing-p2p
    - KOMODOR_AGENT_HOST=agent-komodor-caipe-complete-with-tracing-p2p
    - PAGERDUTY_AGENT_HOST=agent-pagerduty-caipe-complete-with-tracing-p2p
    - SLACK_AGENT_HOST=agent-slack-caipe-complete-with-tracing-p2p
    - SPLUNK_AGENT_HOST=agent-splunk-caipe-complete-with-tracing-p2p
    - WEATHER_AGENT_HOST=agent-weather-caipe-complete-with-tracing-p2p
    - WEBEX_AGENT_HOST=agent-webex-caipe-complete-with-tracing-p2p
    - PETSTORE_AGENT_HOST=agent-petstore-caipe-complete-with-tracing-p2p
    - ENABLE_ARGOCD=true
    - ENABLE_AWS=true
    - ENABLE_BACKSTAGE=true
    - ENABLE_CONFLUENCE=true
    - ENABLE_GITHUB=true
    - ENABLE_JIRA=true
    - ENABLE_KOMODOR=true
    - ENABLE_PAGERDUTY=true
    - ENABLE_SLACK=true
    - ENABLE_SPLUNK=true
    - ENABLE_WEATHER_AGENT=true
    - ENABLE_WEBEX_AGENT=true
    - ENABLE_PETSTORE_AGENT=true
    - ENABLE_RAG=true
    depends_on:
    - agent-argocd-caipe-complete-with-tracing-p2p
    - agent-aws-caipe-complete-with-tracing-p2p
    - agent-backstage-caipe-complete-with-tracing-p2p
    - agent-confluence-caipe-complete-with-tracing-p2p
    - agent-github-caipe-complete-with-tracing-p2p
    - agent-jira-caipe-complete-with-tracing-p2p
    - agent-komodor-caipe-complete-with-tracing-p2p
    - agent-pagerduty-caipe-complete-with-tracing-p2p
    - agent-slack-caipe-complete-with-tracing-p2p
    - agent-splunk-caipe-complete-with-tracing-p2p
    - agent-weather-caipe-complete-with-tracing-p2p
    - agent-webex-caipe-complete-with-tracing-p2p
    - agent-petstore-caipe-complete-with-tracing-p2p
    command: platform-engineer
    profiles:
    - a2a-p2p
  agent-argocd-caipe-complete-with-tracing-p2p:
    image: ghcr.io/cnoe-io/agent-argocd:${IMAGE_TAG:-stable}
    container_name: agent-argocd-caipe-complete-with-tracing-p2p
    env_file:
    - ../.env
    ports:
    - 8001:8000
    environment:
    - A2A_TRANSPORT=p2p
    - MCP_MODE=http
    - MCP_HOST=mcp-argocd
    - MCP_PORT=8000
    depends_on:
    - mcp-argocd
    profiles:
    - a2a-p2p
  mcp-argocd:
    image: ghcr.io/cnoe-io/mcp-argocd:${IMAGE_TAG:-stable}
    container_name: mcp-argocd
    env_file:
    - ../.env
    ports:
    - 18024:8000
    environment:
    - MCP_MODE=http
    - MCP_HOST=0.0.0.0
    - MCP_PORT=8000
    profiles:
    - a2a-p2p
    - a2a-over-slim
  agent-aws-caipe-complete-with-tracing-p2p:
    image: ghcr.io/cnoe-io/agent-aws:${IMAGE_TAG:-stable}
    container_name: agent-aws-caipe-complete-with-tracing-p2p
    env_file:
    - ../.env
    ports:
    - 8002:8000
    environment:
    - A2A_TRANSPORT=p2p
    - MCP_MODE=http
    - MCP_HOST=mcp-aws
    - MCP_PORT=8000
    profiles:
    - a2a-p2p
  # No mcp-aws as aws only supports stdio transport currently.
  agent-backstage-caipe-complete-with-tracing-p2p:
    image: ghcr.io/cnoe-io/agent-backstage:${IMAGE_TAG:-stable}
    container_name: agent-backstage-caipe-complete-with-tracing-p2p
    env_file:
    - ../.env
    ports:
    - 8003:8000
    environment:
    - A2A_TRANSPORT=p2p
    - MCP_MODE=http
    - MCP_HOST=mcp-backstage
    - MCP_PORT=8000
    depends_on:
    - mcp-backstage
    profiles:
    - a2a-p2p
  mcp-backstage:
    image: ghcr.io/cnoe-io/mcp-backstage:${IMAGE_TAG:-stable}
    container_name: mcp-backstage
    env_file:
    - ../.env
    ports:
    - 18033:8000
    environment:
    - MCP_MODE=http
    - MCP_HOST=0.0.0.0
    - MCP_PORT=8000
    profiles:
    - a2a-p2p
    - a2a-over-slim
  agent-confluence-caipe-complete-with-tracing-p2p:
    image: ghcr.io/cnoe-io/agent-confluence:${IMAGE_TAG:-stable}
    container_name: agent-confluence-caipe-complete-with-tracing-p2p
    env_file:
    - ../.env
    ports:
    - 8004:8000
    environment:
    - A2A_TRANSPORT=p2p
    - MCP_MODE=http
    - MCP_HOST=mcp-confluence
    - MCP_PORT=8000
    depends_on:
    - mcp-confluence
    profiles:
    - a2a-p2p
  mcp-confluence:
    image: ghcr.io/cnoe-io/mcp-confluence:${IMAGE_TAG:-stable}
    container_name: mcp-confluence
    env_file:
    - ../.env
    ports:
    - 18058:8000
    environment:
    - MCP_MODE=http
    - MCP_HOST=0.0.0.0
    - MCP_PORT=8000
    profiles:
    - a2a-p2p
    - a2a-over-slim
  agent-github-caipe-complete-with-tracing-p2p:
    image: ghcr.io/cnoe-io/agent-github:${IMAGE_TAG:-stable}
    container_name: agent-github-caipe-complete-with-tracing-p2p
    env_file:
    - ../.env
    ports:
    - 8005:8000
    environment:
    - A2A_TRANSPORT=p2p
    - MCP_MODE=http
    - MCP_HOST=mcp-github
    - MCP_PORT=8000
    depends_on: []
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    profiles:
    - a2a-p2p
  agent-jira-caipe-complete-with-tracing-p2p:
    image: ghcr.io/cnoe-io/agent-jira:${IMAGE_TAG:-stable}
    container_name: agent-jira-caipe-complete-with-tracing-p2p
    env_file:
    - ../.env
    ports:
    - 8006:8000
    environment:
    - A2A_TRANSPORT=p2p
    - MCP_MODE=http
    - MCP_HOST=mcp-jira
    - MCP_PORT=8000
    depends_on:
    - mcp-jira
    profiles:
    - a2a-p2p
  mcp-jira:
    image: ghcr.io/cnoe-io/mcp-jira:${IMAGE_TAG:-stable}
    container_name: mcp-jira
    env_file:
    - ../.env
    ports:
    - 18022:8000
    environment:
    - MCP_MODE=http
    - MCP_HOST=0.0.0.0
    - MCP_PORT=8000
    profiles:
    - a2a-p2p
    - a2a-over-slim
  agent-komodor-caipe-complete-with-tracing-p2p:
    image: ghcr.io/cnoe-io/agent-komodor:${IMAGE_TAG:-stable}
    container_name: agent-komodor-caipe-complete-with-tracing-p2p
    env_file:
    - ../.env
    ports:
    - 8007:8000
    environment:
    - A2A_TRANSPORT=p2p
    - MCP_MODE=http
    - MCP_HOST=mcp-komodor
    - MCP_PORT=8000
    depends_on:
    - mcp-komodor
    profiles:
    - a2a-p2p
  mcp-komodor:
    image: ghcr.io/cnoe-io/mcp-komodor:${IMAGE_TAG:-stable}
    container_name: mcp-komodor
    env_file:
    - ../.env
    ports:
    - 18063:8000
    environment:
    - MCP_MODE=http
    - MCP_HOST=0.0.0.0
    - MCP_PORT=8000
    profiles:
    - a2a-p2p
    - a2a-over-slim
  agent-pagerduty-caipe-complete-with-tracing-p2p:
    image: ghcr.io/cnoe-io/agent-pagerduty:${IMAGE_TAG:-stable}
    container_name: agent-pagerduty-caipe-complete-with-tracing-p2p
    env_file:
    - ../.env
    ports:
    - 8008:8000
    environment:
    - A2A_TRANSPORT=p2p
    - MCP_MODE=http
    - MCP_HOST=mcp-pagerduty
    - MCP_PORT=8000
    depends_on:
    - mcp-pagerduty
    profiles:
    - a2a-p2p
  mcp-pagerduty:
    image: ghcr.io/cnoe-io/mcp-pagerduty:${IMAGE_TAG:-stable}
    container_name: mcp-pagerduty
    env_file:
    - ../.env
    ports:
    - 18081:8000
    environment:
    - MCP_MODE=http
    - MCP_HOST=0.0.0.0
    - MCP_PORT=8000
    profiles:
    - a2a-p2p
    - a2a-over-slim
  agent-slack-caipe-complete-with-tracing-p2p:
    image: ghcr.io/cnoe-io/agent-slack:${IMAGE_TAG:-stable}
    container_name: agent-slack-caipe-complete-with-tracing-p2p
    env_file:
    - ../.env
    ports:
    - 8009:8000
    environment:
    - A2A_TRANSPORT=p2p
    - MCP_MODE=http
    - MCP_HOST=mcp-slack
    - MCP_PORT=8000
    depends_on:
    - mcp-slack
    profiles:
    - a2a-p2p
  mcp-slack:
    image: ghcr.io/cnoe-io/mcp-slack:${IMAGE_TAG:-stable}
    container_name: mcp-slack
    env_file:
    - ../.env
    ports:
    - 18026:8000
    environment:
    - MCP_MODE=http
    - MCP_HOST=0.0.0.0
    - MCP_PORT=8000
    profiles:
    - a2a-p2p
    - a2a-over-slim
  agent-splunk-caipe-complete-with-tracing-p2p:
    image: ghcr.io/cnoe-io/agent-splunk:${IMAGE_TAG:-stable}
    container_name: agent-splunk-caipe-complete-with-tracing-p2p
    env_file:
    - ../.env
    ports:
    - 8010:8000
    environment:
    - A2A_TRANSPORT=p2p
    - MCP_MODE=http
    - MCP_HOST=mcp-splunk
    - MCP_PORT=8000
    depends_on:
    - mcp-splunk
    profiles:
    - a2a-p2p
  mcp-splunk:
    image: ghcr.io/cnoe-io/mcp-splunk:${IMAGE_TAG:-stable}
    container_name: mcp-splunk
    env_file:
    - ../.env
    ports:
    - 18069:8000
    environment:
    - MCP_MODE=http
    - MCP_HOST=0.0.0.0
    - MCP_PORT=8000
    profiles:
    - a2a-p2p
    - a2a-over-slim
  agent-weather-caipe-complete-with-tracing-p2p:
    image: ghcr.io/cnoe-io/agent-weather:${IMAGE_TAG:-stable}
    container_name: agent-weather-caipe-complete-with-tracing-p2p
    env_file:
    - ../.env
    ports:
    - 8011:8000
    environment:
    - A2A_TRANSPORT=p2p
    - MCP_MODE=http
    - MCP_HOST=weather.outshift.io
    - MCP_PORT=443
    depends_on: []
    profiles:
    - a2a-p2p
  agent-webex-caipe-complete-with-tracing-p2p:
    image: ghcr.io/cnoe-io/agent-webex:${IMAGE_TAG:-stable}
    container_name: agent-webex-caipe-complete-with-tracing-p2p
    env_file:
    - ../.env
    ports:
    - 8012:8000
    environment:
    - A2A_TRANSPORT=p2p
    - MCP_MODE=http
    - MCP_HOST=mcp-webex
    - MCP_PORT=8000
    depends_on:
    - mcp-webex
    profiles:
    - a2a-p2p
  mcp-webex:
    image: ghcr.io/cnoe-io/mcp-webex:${IMAGE_TAG:-stable}
    container_name: mcp-webex
    env_file:
    - ../.env
    ports:
    - 18039:8000
    environment:
    - MCP_MODE=http
    - MCP_HOST=0.0.0.0
    - MCP_PORT=8000
    profiles:
    - a2a-p2p
    - a2a-over-slim
  agent-petstore-caipe-complete-with-tracing-p2p:
    image: ghcr.io/cnoe-io/agent-template:${IMAGE_TAG:-stable}
    container_name: agent-petstore-caipe-complete-with-tracing-p2p
    env_file:
    - ../.env
    ports:
    - 8013:8000
    environment:
    - A2A_TRANSPORT=p2p
    - MCP_MODE=http
    - MCP_HOST=petstore.outshift.io
    - MCP_PORT=443
    depends_on: []
    profiles:
    - a2a-p2p
  caipe-caipe-complete-with-tracing-slim:
    image: ghcr.io/cnoe-io/ai-platform-engineering:${IMAGE_TAG:-stable}
    container_name: caipe-caipe-complete-with-tracing-slim
    volumes:
    - ../prompt_config.yaml:/app/prompt_config.yaml
    - ../persona.yaml:/app/persona.yaml
    env_file:
    - ../.env
    ports:
    - 8000:8000
    environment:
    - A2A_TRANSPORT=slim
    - ARGOCD_AGENT_HOST=agent-argocd-caipe-complete-with-tracing-slim
    - AWS_AGENT_HOST=agent-aws-caipe-complete-with-tracing-slim
    - BACKSTAGE_AGENT_HOST=agent-backstage-caipe-complete-with-tracing-slim
    - CONFLUENCE_AGENT_HOST=agent-confluence-caipe-complete-with-tracing-slim
    - GITHUB_AGENT_HOST=agent-github-caipe-complete-with-tracing-slim
    - JIRA_AGENT_HOST=agent-jira-caipe-complete-with-tracing-slim
    - KOMODOR_AGENT_HOST=agent-komodor-caipe-complete-with-tracing-slim
    - PAGERDUTY_AGENT_HOST=agent-pagerduty-caipe-complete-with-tracing-slim
    - SLACK_AGENT_HOST=agent-slack-caipe-complete-with-tracing-slim
    - SPLUNK_AGENT_HOST=agent-splunk-caipe-complete-with-tracing-slim
    - WEATHER_AGENT_HOST=agent-weather-caipe-complete-with-tracing-slim
    - WEBEX_AGENT_HOST=agent-webex-caipe-complete-with-tracing-slim
    - PETSTORE_AGENT_HOST=agent-petstore-caipe-complete-with-tracing-slim
    - ENABLE_ARGOCD=true
    - ENABLE_AWS=true
    - ENABLE_BACKSTAGE=true
    - ENABLE_CONFLUENCE=true
    - ENABLE_GITHUB=true
    - ENABLE_JIRA=true
    - ENABLE_KOMODOR=true
    - ENABLE_PAGERDUTY=true
    - ENABLE_SLACK=true
    - ENABLE_SPLUNK=true
    - ENABLE_WEATHER_AGENT=true
    - ENABLE_WEBEX_AGENT=true
    - ENABLE_PETSTORE_AGENT=true
    - ENABLE_RAG=false
    depends_on:
    - agent-argocd-caipe-complete-with-tracing-slim
    - agent-aws-caipe-complete-with-tracing-slim
    - agent-backstage-caipe-complete-with-tracing-slim
    - agent-confluence-caipe-complete-with-tracing-slim
    - agent-github-caipe-complete-with-tracing-slim
    - agent-jira-caipe-complete-with-tracing-slim
    - agent-komodor-caipe-complete-with-tracing-slim
    - agent-pagerduty-caipe-complete-with-tracing-slim
    - agent-slack-caipe-complete-with-tracing-slim
    - agent-splunk-caipe-complete-with-tracing-slim
    - agent-weather-caipe-complete-with-tracing-slim
    - agent-webex-caipe-complete-with-tracing-slim
    - agent-petstore-caipe-complete-with-tracing-slim
    - slim-dataplane
    - slim-control-plane
    command: platform-engineer
    profiles:
    - a2a-over-slim
  agent-argocd-caipe-complete-with-tracing-slim:
    image: ghcr.io/cnoe-io/agent-argocd:${IMAGE_TAG:-stable}
    container_name: agent-argocd-caipe-complete-with-tracing-slim
    env_file:
    - ../.env
    ports:
    - 8001:8000
    environment:
    - A2A_TRANSPORT=slim
    - MCP_MODE=http
    - MCP_HOST=mcp-argocd
    - MCP_PORT=8000
    depends_on:
    - mcp-argocd
    - slim-dataplane
    profiles:
    - a2a-over-slim
  agent-aws-caipe-complete-with-tracing-slim:
    image: ghcr.io/cnoe-io/agent-aws:${IMAGE_TAG:-stable}
    container_name: agent-aws-caipe-complete-with-tracing-slim
    env_file:
    - ../.env
    ports:
    - 8002:8000
    environment:
    - A2A_TRANSPORT=slim
    - MCP_MODE=http
    - MCP_HOST=mcp-aws
    - MCP_PORT=8000
    depends_on:
    - slim-dataplane
    profiles:
    - a2a-over-slim
  agent-backstage-caipe-complete-with-tracing-slim:
    image: ghcr.io/cnoe-io/agent-backstage:${IMAGE_TAG:-stable}
    container_name: agent-backstage-caipe-complete-with-tracing-slim
    env_file:
    - ../.env
    ports:
    - 8003:8000
    environment:
    - A2A_TRANSPORT=slim
    - MCP_MODE=http
    - MCP_HOST=mcp-backstage
    - MCP_PORT=8000
    depends_on:
    - mcp-backstage
    - slim-dataplane
    profiles:
    - a2a-over-slim
  agent-confluence-caipe-complete-with-tracing-slim:
    image: ghcr.io/cnoe-io/agent-confluence:${IMAGE_TAG:-stable}
    container_name: agent-confluence-caipe-complete-with-tracing-slim
    env_file:
    - ../.env
    ports:
    - 8004:8000
    environment:
    - A2A_TRANSPORT=slim
    - MCP_MODE=http
    - MCP_HOST=mcp-confluence
    - MCP_PORT=8000
    depends_on:
    - mcp-confluence
    - slim-dataplane
    profiles:
    - a2a-over-slim
  agent-github-caipe-complete-with-tracing-slim:
    image: ghcr.io/cnoe-io/agent-github:${IMAGE_TAG:-stable}
    container_name: agent-github-caipe-complete-with-tracing-slim
    env_file:
    - ../.env
    ports:
    - 8005:8000
    environment:
    - A2A_TRANSPORT=slim
    - MCP_MODE=http
    - MCP_HOST=mcp-github
    - MCP_PORT=8000
    depends_on:
    - slim-dataplane
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    profiles:
    - a2a-over-slim
  agent-jira-caipe-complete-with-tracing-slim:
    image: ghcr.io/cnoe-io/agent-jira:${IMAGE_TAG:-stable}
    container_name: agent-jira-caipe-complete-with-tracing-slim
    env_file:
    - ../.env
    ports:
    - 8006:8000
    environment:
    - A2A_TRANSPORT=slim
    - MCP_MODE=http
    - MCP_HOST=mcp-jira
    - MCP_PORT=8000
    depends_on:
    - mcp-jira
    - slim-dataplane
    profiles:
    - a2a-over-slim
  agent-komodor-caipe-complete-with-tracing-slim:
    image: ghcr.io/cnoe-io/agent-komodor:${IMAGE_TAG:-stable}
    container_name: agent-komodor-caipe-complete-with-tracing-slim
    env_file:
    - ../.env
    ports:
    - 8007:8000
    environment:
    - A2A_TRANSPORT=slim
    - MCP_MODE=http
    - MCP_HOST=mcp-komodor
    - MCP_PORT=8000
    depends_on:
    - mcp-komodor
    - slim-dataplane
    profiles:
    - a2a-over-slim
  agent-pagerduty-caipe-complete-with-tracing-slim:
    image: ghcr.io/cnoe-io/agent-pagerduty:${IMAGE_TAG:-stable}
    container_name: agent-pagerduty-caipe-complete-with-tracing-slim
    env_file:
    - ../.env
    ports:
    - 8008:8000
    environment:
    - A2A_TRANSPORT=slim
    - MCP_MODE=http
    - MCP_HOST=mcp-pagerduty
    - MCP_PORT=8000
    depends_on:
    - mcp-pagerduty
    - slim-dataplane
    profiles:
    - a2a-over-slim
  agent-slack-caipe-complete-with-tracing-slim:
    image: ghcr.io/cnoe-io/agent-slack:${IMAGE_TAG:-stable}
    container_name: agent-slack-caipe-complete-with-tracing-slim
    env_file:
    - ../.env
    ports:
    - 8009:8000
    environment:
    - A2A_TRANSPORT=slim
    - MCP_MODE=http
    - MCP_HOST=mcp-slack
    - MCP_PORT=8000
    depends_on:
    - mcp-slack
    - slim-dataplane
    profiles:
    - a2a-over-slim
  agent-splunk-caipe-complete-with-tracing-slim:
    image: ghcr.io/cnoe-io/agent-splunk:${IMAGE_TAG:-stable}
    container_name: agent-splunk-caipe-complete-with-tracing-slim
    env_file:
    - ../.env
    ports:
    - 8010:8000
    environment:
    - A2A_TRANSPORT=slim
    - MCP_MODE=http
    - MCP_HOST=mcp-splunk
    - MCP_PORT=8000
    depends_on:
    - mcp-splunk
    - slim-dataplane
    profiles:
    - a2a-over-slim
  agent-weather-caipe-complete-with-tracing-slim:
    image: ghcr.io/cnoe-io/agent-weather:${IMAGE_TAG:-stable}
    container_name: agent-weather-caipe-complete-with-tracing-slim
    env_file:
    - ../.env
    ports:
    - 8011:8000
    environment:
    - A2A_TRANSPORT=slim
    - MCP_MODE=http
    - MCP_HOST=weather.outshift.io
    - MCP_PORT=443
    depends_on:
    - slim-dataplane
    profiles:
    - a2a-over-slim
  agent-webex-caipe-complete-with-tracing-slim:
    image: ghcr.io/cnoe-io/agent-webex:${IMAGE_TAG:-stable}
    container_name: agent-webex-caipe-complete-with-tracing-slim
    env_file:
    - ../.env
    ports:
    - 8012:8000
    environment:
    - A2A_TRANSPORT=slim
    - MCP_MODE=http
    - MCP_HOST=mcp-webex
    - MCP_PORT=8000
    depends_on:
    - mcp-webex
    - slim-dataplane
    profiles:
    - a2a-over-slim
  agent-petstore-caipe-complete-with-tracing-slim:
    image: ghcr.io/cnoe-io/agent-template:${IMAGE_TAG:-stable}
    container_name: agent-petstore-caipe-complete-with-tracing-slim
    env_file:
    - ../.env
    ports:
    - 8013:8000
    environment:
    - A2A_TRANSPORT=slim
    - MCP_MODE=http
    - MCP_HOST=petstore.outshift.io
    - MCP_PORT=443
    depends_on:
    - slim-dataplane
    profiles:
    - a2a-over-slim
  slim-dataplane:
    image: ghcr.io/agntcy/slim:0.3.15
    container_name: slim-dataplane
    profiles:
    - a2a-over-slim
    ports:
    - 46357:46357
    environment:
    - PASSWORD=${SLIM_GATEWAY_PASSWORD:-dummy_password}
    - CONFIG_PATH=/config.yaml
    volumes:
    - ../slim-config.yaml:/config.yaml
    command:
    - /slim
    - --config
    - /config.yaml
  slim-control-plane:
    image: ghcr.io/agntcy/slim/control-plane:0.0.1
    container_name: slim-control-plane
    profiles:
    - a2a-over-slim
    ports:
    - 50051:50051
    - 50052:50052
    environment:
    - PASSWORD=${SLIM_GATEWAY_PASSWORD:-dummy_password}
    - CONFIG_PATH=/config.yaml
    volumes:
    - ../slim-config.yaml:/config.yaml
    command:
    - /slim
    - --config
    - /config.yaml
  langfuse-worker:
    image: langfuse/langfuse-worker:3
    container_name: langfuse-worker
    restart: always
    depends_on:
      langfuse-postgres:
        condition: service_healthy
      langfuse-minio:
        condition: service_healthy
      langfuse-redis:
        condition: service_healthy
      langfuse-clickhouse:
        condition: service_healthy
    ports:
    - 127.0.0.1:3030:3030
    environment:
    - DATABASE_URL=postgresql://postgres:postgres@langfuse-postgres:5432/postgres
    - SALT=mysalt
    - ENCRYPTION_KEY=0000000000000000000000000000000000000000000000000000000000000000
    - CLICKHOUSE_MIGRATION_URL=clickhouse://langfuse-clickhouse:9000
    - CLICKHOUSE_URL=http://langfuse-clickhouse:8123
    - CLICKHOUSE_USER=clickhouse
    - CLICKHOUSE_PASSWORD=clickhouse
    - CLICKHOUSE_CLUSTER_ENABLED=false
    - LANGFUSE_S3_EVENT_UPLOAD_BUCKET=langfuse
    - LANGFUSE_S3_EVENT_UPLOAD_REGION=us-east-1
    - LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID=minio
    - LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY=miniosecret
    - LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT=http://langfuse-minio:9000
    - LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE=true
    - LANGFUSE_S3_EVENT_UPLOAD_PREFIX=events/
    - LANGFUSE_S3_MEDIA_UPLOAD_BUCKET=langfuse
    - LANGFUSE_S3_MEDIA_UPLOAD_REGION=us-east-1
    - LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID=minio
    - LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY=miniosecret
    - LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT=http://langfuse-minio:9000
    - LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE=true
    - LANGFUSE_S3_MEDIA_UPLOAD_PREFIX=media/
    - REDIS_HOST=langfuse-redis
    - REDIS_AUTH=myredissecret
  langfuse-web:
    image: langfuse/langfuse:3
    container_name: langfuse-web
    restart: always
    depends_on:
      langfuse-postgres:
        condition: service_healthy
      langfuse-minio:
        condition: service_healthy
      langfuse-redis:
        condition: service_healthy
      langfuse-clickhouse:
        condition: service_healthy
    ports:
    - 3000:3000
    environment:
    - DATABASE_URL=postgresql://postgres:postgres@langfuse-postgres:5432/postgres
    - SALT=mysalt
    - ENCRYPTION_KEY=0000000000000000000000000000000000000000000000000000000000000000
    - CLICKHOUSE_MIGRATION_URL=clickhouse://langfuse-clickhouse:9000
    - CLICKHOUSE_URL=http://langfuse-clickhouse:8123
    - CLICKHOUSE_USER=clickhouse
    - HOSTNAME=0.0.0.0
    - CLICKHOUSE_PASSWORD=clickhouse
    - CLICKHOUSE_CLUSTER_ENABLED=false
    - LANGFUSE_S3_EVENT_UPLOAD_BUCKET=langfuse
    - LANGFUSE_S3_EVENT_UPLOAD_REGION=us-east-1
    - LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID=minio
    - LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY=miniosecret
    - LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT=http://langfuse-minio:9000
    - LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE=true
    - LANGFUSE_S3_EVENT_UPLOAD_PREFIX=events/
    - LANGFUSE_S3_MEDIA_UPLOAD_BUCKET=langfuse
    - LANGFUSE_S3_MEDIA_UPLOAD_REGION=us-east-1
    - LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID=minio
    - LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY=miniosecret
    - LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT=http://langfuse-minio:9000
    - LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE=true
    - LANGFUSE_S3_MEDIA_UPLOAD_PREFIX=media/
    - REDIS_HOST=langfuse-redis
    - REDIS_AUTH=myredissecret
    - NEXTAUTH_URL=http://localhost:3000
    - NEXTAUTH_SECRET=mysecret
  langfuse-clickhouse:
    image: clickhouse/clickhouse-server
    container_name: langfuse-clickhouse
    restart: always
    user: 101:101
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
    volumes:
    - langfuse_clickhouse_data:/var/lib/clickhouse
    - langfuse_clickhouse_logs:/var/log/clickhouse-server
    ports:
    - 127.0.0.1:8123:8123
    - 127.0.0.1:9000:9000
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit
        1
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 1s
  langfuse-minio:
    image: minio/minio
    container_name: langfuse-minio
    restart: always
    entrypoint: sh
    command: -c 'mkdir -p /data/langfuse && minio server --address ":9000" --console-address
      ":9001" /data'
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniosecret
    ports:
    - 9090:9000
    - 127.0.0.1:9091:9001
    volumes:
    - langfuse_minio_data:/data
    healthcheck:
      test:
      - CMD
      - mc
      - ready
      - local
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 1s
  langfuse-redis:
    image: redis:7
    container_name: langfuse-redis
    restart: always
    command: --requirepass ${REDIS_AUTH:-myredissecret}
    ports:
    - 127.0.0.1:6379:6379
    healthcheck:
      test:
      - CMD
      - redis-cli
      - ping
      interval: 3s
      timeout: 10s
      retries: 10
  langfuse-postgres:
    image: postgres:15
    container_name: langfuse-postgres
    restart: always
    healthcheck:
      test:
      - CMD-SHELL
      - pg_isready -U postgres
      interval: 3s
      timeout: 3s
      retries: 10
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
    - 127.0.0.1:15432:5432 # 5432 is often taken in the local machine, so we use 15432 as a different port
    volumes:
    - langfuse_postgres_data:/var/lib/postgresql/data
volumes:
  langfuse_postgres_data:
    driver: local
  langfuse_clickhouse_data:
    driver: local
  langfuse_clickhouse_logs:
    driver: local
  langfuse_minio_data:
    driver: local

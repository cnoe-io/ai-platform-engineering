# ============================================================================
# AUTO-GENERATED FILE - DO NOT EDIT DIRECTLY
# ============================================================================
# Generated by: scripts/generate-docker-compose.py
# Mode: PROD (with container images)
# Personas: rag-only
# Transports: a2a-p2p, a2a-over-slim
#
# To regenerate this file, run:
#   make generate-docker-compose PERSONAS="rag-only"
#
# Or manually:
#   ./scripts/generate-docker-compose.py --persona rag-only
#
# Usage:
#   docker compose -f docker-compose/docker-compose.rag-only.yaml --profile a2a-p2p up         # A2A peer-to-peer transport
#   docker compose -f docker-compose/docker-compose.rag-only.yaml --profile a2a-over-slim up   # A2A over SLIM transport
# ============================================================================

services:
  caipe-rag-only-p2p:
    image: ghcr.io/cnoe-io/ai-platform-engineering:${IMAGE_TAG:-stable}
    container_name: caipe-rag-only-p2p
    volumes:
    - ../prompt_config.yaml:/app/prompt_config.yaml
    - ../persona.yaml:/app/persona.yaml
    env_file:
    - ../.env
    ports:
    - 8000:8000
    environment:
    - A2A_TRANSPORT=p2p
    - RAG_AGENT_HOST=agent-rag-rag-only-p2p
    - ENABLE_ARGOCD=false
    - ENABLE_AWS=false
    - ENABLE_BACKSTAGE=false
    - ENABLE_CONFLUENCE=false
    - ENABLE_GITHUB=false
    - ENABLE_JIRA=false
    - ENABLE_KOMODOR=false
    - ENABLE_PAGERDUTY=false
    - ENABLE_SLACK=false
    - ENABLE_SPLUNK=false
    - ENABLE_WEATHER_AGENT=false
    - ENABLE_WEBEX_AGENT=false
    - ENABLE_PETSTORE_AGENT=false
    - ENABLE_RAG=true
    - RAG_AGENT_PORT=8099
    depends_on:
    - agent-rag-rag-only-p2p
    command: platform-engineer
    profiles:
    - a2a-p2p
  agent-rag-rag-only-p2p:
    image: ghcr.io/cnoe-io/caipe-rag-agent-rag:${IMAGE_TAG:-stable}
    container_name: agent_rag
    env_file:
    - ../.env
    ports:
    - 8099:8099
    environment:
    - LOG_LEVEL=DEBUG
    - REDIS_URL=redis://rag-redis:6379/0
    - NEO4J_ADDR=neo4j://neo4j:7687
    - NEO4J_ONTOLOGY_ADDR=neo4j://neo4j-ontology:7688
    - NEO4J_USERNAME=neo4j
    - NEO4J_PASSWORD=dummy_password
    - RAG_SERVER_URL=http://rag_server:9446
    - ENABLE_GRAPH_RAG=false
    depends_on:
    - rag_server
    - rag-redis
    restart: unless-stopped
    profiles:
    - a2a-p2p
  caipe-rag-only-slim:
    image: ghcr.io/cnoe-io/ai-platform-engineering:${IMAGE_TAG:-stable}
    container_name: caipe-rag-only-slim
    volumes:
    - ../prompt_config.yaml:/app/prompt_config.yaml
    - ../persona.yaml:/app/persona.yaml
    env_file:
    - ../.env
    ports:
    - 8000:8000
    environment:
    - A2A_TRANSPORT=slim
    - RAG_AGENT_HOST=agent-rag-rag-only-slim
    - ENABLE_ARGOCD=false
    - ENABLE_AWS=false
    - ENABLE_BACKSTAGE=false
    - ENABLE_CONFLUENCE=false
    - ENABLE_GITHUB=false
    - ENABLE_JIRA=false
    - ENABLE_KOMODOR=false
    - ENABLE_PAGERDUTY=false
    - ENABLE_SLACK=false
    - ENABLE_SPLUNK=false
    - ENABLE_WEATHER_AGENT=false
    - ENABLE_WEBEX_AGENT=false
    - ENABLE_PETSTORE_AGENT=false
    - ENABLE_RAG=true
    depends_on:
    - agent-rag-rag-only-slim
    - slim-dataplane
    - slim-control-plane
    command: platform-engineer
    profiles:
    - a2a-over-slim
  agent-rag-rag-only-slim:
    image: ghcr.io/cnoe-io/caipe-rag-agent-rag:${IMAGE_TAG:-stable}
    container_name: agent_rag
    env_file:
    - ../.env
    ports:
    - 8099:8099
    environment:
    - LOG_LEVEL=DEBUG
    - REDIS_URL=redis://rag-redis:6379/0
    - NEO4J_ADDR=neo4j://neo4j:7687
    - NEO4J_ONTOLOGY_ADDR=neo4j://neo4j-ontology:7688
    - NEO4J_USERNAME=neo4j
    - NEO4J_PASSWORD=dummy_password
    - RAG_SERVER_URL=http://rag_server:9446
    - ENABLE_GRAPH_RAG=false
    depends_on:
    - rag_server
    - rag-redis
    restart: unless-stopped
    profiles:
    - a2a-over-slim
  slim-dataplane:
    image: ghcr.io/agntcy/slim:0.3.15
    container_name: slim-dataplane
    profiles:
    - a2a-over-slim
    ports:
    - 46357:46357
    environment:
    - PASSWORD=${SLIM_GATEWAY_PASSWORD:-dummy_password}
    - CONFIG_PATH=/config.yaml
    volumes:
    - ../slim-config.yaml:/config.yaml
    command:
    - /slim
    - --config
    - /config.yaml
  slim-control-plane:
    image: ghcr.io/agntcy/slim/control-plane:0.0.1
    container_name: slim-control-plane
    profiles:
    - a2a-over-slim
    ports:
    - 50051:50051
    - 50052:50052
    environment:
    - PASSWORD=${SLIM_GATEWAY_PASSWORD:-dummy_password}
    - CONFIG_PATH=/config.yaml
    volumes:
    - ../slim-config.yaml:/config.yaml
    command:
    - /slim
    - --config
    - /config.yaml
  rag_server:
    image: ghcr.io/cnoe-io/caipe-rag-server:${IMAGE_TAG:-stable}
    container_name: rag_server
    ports:
    - 9446:9446
    environment:
    - LOG_LEVEL=DEBUG
    - REDIS_URL=redis://rag-redis:6379/0
    - NEO4J_ADDR=neo4j://neo4j:7687
    - NEO4J_ONTOLOGY_ADDR=neo4j://neo4j-ontology:7688
    - NEO4J_USERNAME=neo4j
    - NEO4J_PASSWORD=dummy_password
    - MILVUS_URI=http://milvus-standalone:19530
    - ONTOLOGY_AGENT_RESTAPI_ADDR=http://agent_ontology:8098
    - ENABLE_GRAPH_RAG=false
    - CLEANUP_INTERVAL=86400
    restart: unless-stopped
    env_file:
    - ../.env
    depends_on:
    - rag-redis
  agent_ontology:
    image: ghcr.io/cnoe-io/caipe-rag-agent-ontology:${IMAGE_TAG:-stable}
    container_name: agent_ontology
    ports:
    - 8098:8098
    environment:
    - LOG_LEVEL=DEBUG
    - REDIS_URL=redis://rag-redis:6379/0
    - NEO4J_ADDR=neo4j://neo4j:7687
    - NEO4J_ONTOLOGY_ADDR=neo4j://neo4j-ontology:7688
    - NEO4J_USERNAME=neo4j
    - NEO4J_PASSWORD=dummy_password
    - SYNC_INTERVAL=86400
    env_file:
    - ../.env
    restart: unless-stopped
    depends_on:
    - rag_server
    - neo4j
    - neo4j-ontology
    - rag-redis
  rag_webui:
    build:
      context: ../ai_platform_engineering/knowledge_bases/rag
      dockerfile: ./build/Dockerfile.webui
    container_name: rag-webui
    depends_on:
    - rag_server
    ports:
    - 9447:80
  neo4j:
    image: neo4j:latest
    container_name: neo4j
    volumes:
    - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/neo4j/logs:/logs
    - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/neo4j/config:/config
    - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/neo4j/data:/data
    - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/neo4j/plugins:/plugins
    ports:
    - 7474:7474
    - 7687:7687
    restart: unless-stopped
    environment:
      NEO4J_AUTH: neo4j/dummy_password
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_apoc_export_file_enabled: 'true'
      NEO4J_apoc_import_file_enabled: 'true'
      NEO4J_apoc_import_file_use__neo4j__config: 'true'
  neo4j-ontology:
    image: neo4j:latest
    container_name: neo4j-ontology
    volumes:
    - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/neo4j-ontology/logs:/logs
    - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/neo4j-ontology/config:/config
    - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/neo4j-ontology/data:/data
    - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/neo4j-ontology/plugins:/plugins
    ports:
    - 7688:7687
    restart: unless-stopped
    environment:
      NEO4J_AUTH: neo4j/dummy_password
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_apoc_export_file_enabled: 'true'
      NEO4J_apoc_import_file_enabled: 'true'
      NEO4J_apoc_import_file_use__neo4j__config: 'true'
  rag-redis:
    image: redis
    container_name: rag-redis
    command:
    - /bin/sh
    - -c
    - redis-server
    ports:
    - :6379
    restart: unless-stopped
  milvus-standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.6.0
    command:
    - milvus
    - run
    - standalone
    security_opt:
    - seccomp:unconfined
    environment:
      MINIO_REGION: us-east-1
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: milvus-minio:9000
      LOG_LEVEL: error
    volumes:
    - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test:
      - CMD
      - curl
      - -f
      - http://localhost:9091/healthz
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
    - :19530
    - :9091
    depends_on:
    - etcd
    - milvus-minio
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.18
    environment:
      ETCD_AUTO_COMPACTION_MODE: revision
      ETCD_AUTO_COMPACTION_RETENTION: '1000'
      ETCD_QUOTA_BACKEND_BYTES: '4294967296'
      ETCD_SNAPSHOT_COUNT: '50000'
    volumes:
    - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://etcd:2379 -listen-client-urls http://0.0.0.0:2379
      --data-dir /etcd
    healthcheck:
      test:
      - CMD
      - etcdctl
      - endpoint
      - health
      interval: 30s
      timeout: 20s
      retries: 3
  milvus-minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2024-05-28T17-19-04Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
    - :9001
    - :9000
    volumes:
    - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test:
      - CMD
      - curl
      - -f
      - http://localhost:9000/minio/health/live
      interval: 30s
      timeout: 20s
      retries: 3
volumes:
  milvus_etcd:
    driver: local
  milvus_minio:
    driver: local
  milvus_data:
    driver: local
